					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: Yes
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_MMG_0300
ARCH_SW_MMG_0300: Write Rte_MMG_psrEnableCycleX_.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

Action: ARCH_SW_MMG_0300

	Step 2: Set a breakpoint in function mmg_CheckCycleEnable at line (void)Rte_Write_psrEnableCycle0_b8CycleValidity(B_FALSE). 
		Expected result:  CPU stopped at BP

Action: ARCH_SW_MMG_0300

	Step 3: Check if CPU stopped in function mmg_CheckCycleEnable at line (void)Rte_Write_psrEnableCycle1_b8CycleValidity(B_FALSE). 
		Expected result:  CPU stopped at BP

Action: ARCH_SW_MMG_0300

	Step 4: Check if CPU stopped in function mmg_CheckCycleEnable at line (void)Rte_Write_psrEnableCycle2_b8CycleValidity(B_FALSE). 
		Expected result:  CPU stopped at BP

Action: ARCH_SW_MMG_0300

	Step 5: Check if CPU stopped in function mmg_CheckCycleEnable at line (void)Rte_Write_psrEnableCycle3_b8CycleValidity(B_FALSE). 
		Expected result:  CPU stopped at BP

Postcondition

	Step 6: Return ECU to default values
