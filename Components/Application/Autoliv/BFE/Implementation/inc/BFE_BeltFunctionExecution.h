/****************************************************************************************************************************************************\
 *** 
 *** Simulink model       : BFE_TestHarness
 *** TargetLink subsystem : BFE_TestHarness/BFE_AC_BeltFunctionExecution
 *** Codefile             : BFE_BeltFunctionExecution.h
 ***
 *** Generated by TargetLink, the dSPACE production quality code generator
 *** Generation date: 2018-04-17 16:56:17
 ***
 *** CODE GENERATOR OPTIONS:
 *** Code generation mode                     : AUTOSAR
 *** AUTOSAR version                          : 4.2.2
 *** Compiler                                 : <unknown>
 *** Target                                   : Generic
 *** ANSI-C compatible code                   : yes
 *** Code Optimization                        : enabled
 *** Constant style                           : decimal
 *** Clean code option                        : enabled
 *** Logging mode                             : Do not log anything
 *** Code Coverage                            : disabled
 *** Generate empty conditional branches      : disabled
 *** Loop unroll threshold                    : 5
 *** Shift mode                               : automatic
 *** Handle unscaled SF expr. with TL type    : enabled
 *** Assignment of conditions                 : AllBooleanOutputs 
 *** Scope reduction only to function level   : disabled
 *** Exploit ranges if not erasable           : disabled
 *** Exploit Compute Through Overflow         : optimized
 *** Linker sections                          : enabled
 *** Enable Assembler                         : disabled
 *** Variable name length                     : 31 chars
 *** Use global bitfields                     : disabled
 *** Stateflow: use of bitfields              : enabled
 *** State activity encoding limit            : 5
 *** Omit zero inits in restart function      : disabled
 *** Share functions between TL subsystems    : disabled
 *** Generate 64bit functions                 : enabled
 *** Inlining Threshold                       : 6
 *** Line break limit                         : 150
 *** Target optimized boolean data type       : enabled
 *** Keep saturation elements                 : disabled
 *** Extended variable sharing                : disabled
 *** Extended lifetime optimization           : enabled
 *** Style definition file                    : C:\Program Files\dSPACE TargetLink 4.2\Matlab\Tl\Config\codegen\cconfig.xml
 *** Root style sheet                         : C:\Program Files\dSPACE TargetLink 4.2\Matlab\Tl\XML\CodeGen\Stylesheets\TL_CSourceCodeSS.xsl
 ***
 *** TargetLink version      : 4.2 from 14-Oct-2016
 *** Code generator version  : Build Id 4.2.0.26 from 2016-10-17 16:31:48

\****************************************************************************************************************************************************/

#ifndef BFE_BELTFUNCTIONEXECUTION_H
#define BFE_BELTFUNCTIONEXECUTION_H

/*------------------------------------------------------------------------------------------------------------------*\
  DEFINES (OPT)
\*------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------*\
  INCLUDES
\*------------------------------------------------------------------------------------------------------------------*/

#include "Rte_Type.h"

/*------------------------------------------------------------------------------------------------------------------*\
  ENUMS
\*------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------*\
  DEFINES
\*------------------------------------------------------------------------------------------------------------------*/

/********************************************************************************************************************\
   MACRO: global preprocessor macros
\********************************************************************************************************************/
#define KS8_VELOCITY_STEP_RESOLUTION ((sint8) -10)

/********************************************************************************************************************\
   MERGEABLE_MACRO: mergeable preprocessor macros
\********************************************************************************************************************/
#define KS32_PID_VELOCITY_INTEGRAL_TS ((sint32) 500)
#define KS32_PID_VELOCITY_PWM_SC ((sint32) 64000)

/********************************************************************************************************************\
   MERGEABLE_MACRO: mergeable preprocessor macros
\********************************************************************************************************************/
#define KS16_DRIFT_THRESHOLD ((sint16) 3000)
#define KS16_END_BOOST_THRESHOLD ((sint16) 7000)
#define KS16_INTEGER_MAX_ABSOLUTE ((sint16) 28000)
#define KS16_INTEGRATOR_INIT_VAL ((sint16) 2048 /* 1. */) /* LSB: 2^-11 OFF: 0 MIN/MAX: 1 .. 1 */
#define KS16_PWM_MAX_BTN ((sint16) 6400)
#define KS16_PWM_MIN_BTN ((sint16) -6400)
#define KS32_PID_VELOCITY_SAT ((sint16) 8000 /* 8. */) /* 
   Unit: V
   LSB: 0.001 OFF: 0 MIN/MAX: 8 .. 8 */
#define KU16_BATT_VREF ((uint16) 13500)
#define KU16_CURRENT_LIMIT_SCALING_FACTOR ((uint16) 8)
#define KU16_CURRENT_RSC_DEN ((uint16) 2048)
#define KU16_CURRENT_RSC_NUM ((uint16) 125)
#define KU16_CURRENT_RSC_ROUND ((uint16) 1024)
#define KU16_HIGH_RESC_DEN_VOLT ((uint16) 100)
#define KU16_HIGH_RESC_NOM_CURRENT ((uint16) 8192)
#define KU16_HIGH_RESC_NOM_VOLT ((uint16) 128)
#define KU16_HIGH_RESC_PWM ((uint16) 128)
#define KU16_HP_REGULATION_PERIOD ((uint16) 400)
#define KU16_HP_RSC_DEN ((uint16) 4096)
#define KU16_HP_RSC_NUM ((uint16) 25)
#define KU16_HP_RSC_ROUND ((uint16) 2048)
#define KU16_INCREMENT_TIME ((uint16) 1)
#define KU16_INIT_INTEGER_GAIN_DEN ((uint16) 10)
#define KU16_INIT_INTEGER_GAIN_NOM ((uint16) 12)
#define KU16_INIT_INT_ERR_AFTER_HP_STEP ((uint16) 300)
#define KU16_LATENCY_TIME ((uint16) 50)
#define KU16_MOTOR_PERIOD ((uint16) 2)
#define KU16_MOTOR_VOLTAGE_ORDER_RES ((uint16) 250)
#define KU16_NO_BOOST_TIMER ((uint16) 50)
#define KU16_PID_RSC_DEN ((uint16) 4096)
#define KU16_PID_RSC_NUM ((uint16) 5)
#define KU16_PID_RSC_ROUND ((uint16) 2048)
#define KU16_PWM_MAX_BOOST ((uint16) 512)
#define KU16_PWM_RSC_DEN ((uint16) 128)
#define KU16_PWM_RSC_NUM ((uint16) 64)
#define KU16_START_TIMER ((uint16) 0)
#define KU16_STEP_DECREASE_PWMBOOST ((uint16) 256)
#define KU16_STEP_SELECTION_PERIOD ((uint16) 10)
#define KU16_VBOOST_MAX ((uint16) 40000)
#define KU16_VOLT_RSC_DEN ((uint16) 16)
#define KU16_VOLT_RSC_NUM1 ((uint16) 3125)
#define KU16_VOLT_RSC_NUM2 ((uint16) 8)
#define KU16_mS_TO_uS ((uint16) 1000)

/********************************************************************************************************************\
   MERGEABLE_MACRO: mergeable preprocessor macros
\********************************************************************************************************************/
#define KB_FALSE ((boolean) 0)
#define KB_TRUE ((boolean) 1)
#define KE_HP_CURRENT_REGULATION ((uint8) 4)
#define KE_INVALID_STEP ((uint8) 0)
#define KE_NEW_STEP ((uint8) 1)
#define KE_NO_CURRENT_REGULATION ((uint8) 0)
#define KE_ON_GOING_STEP ((uint8) 2)
#define KE_PID_M_CURRENT_REGULATION ((uint8) 2)
#define KE_PID_S_CURRENT_REGULATION ((uint8) 3)
#define KE_STANDARD_CURRENT_REGULATION ((uint8) 1)
#define KS8_MAX_POSITIVE_MOT_POWER ((sint8) 99)
#define KS8_MIN_NEGATIVE_MOT_POWER ((sint8) -99)
#define KU8_BOOST_DECREASE_DURATION ((uint8) 100)
#define KU8_CORR_FACTOR_PID ((uint8) 16)
#define KU8_CURRENT_ORDER_TYPE ((uint8) 1)
#define KU8_CURRENT_STEP_TYPE ((uint8) 1)
#define KU8_HIGH_POWER_STEP_TYPE ((uint8) 65)
#define KU8_INCREMENT_STEP_INDEX ((uint8) 1)
#define KU8_INIT_CURRENT_REG_DEN ((uint8) 64)
#define KU8_INIT_CURRENT_REG_NUM ((uint8) 25)
#define KU8_MASK_TEST_FAILED ((uint8) 1)
#define KU8_MAX_PERCENT ((uint8) 100)
#define KU8_MIN_CURRENT_DURING_BOOST ((uint8) 35)
#define KU8_MOTOR_BLOCKED_EVENT_QUALIF_THRS ((uint8) 3)
#define KU8_NEUTRAL_WEIGHT ((uint8) 64)
#define KU8_NO_POWER_ADAPT ((uint8) 128)
#define KU8_NO_STEP_TYPE ((uint8) 7)
#define KU8_PID_A_RESCALING ((uint8) 10)
#define KU8_PID_MOTOR_STEP_TYPE ((uint8) 33)
#define KU8_PID_SAMPLE_TIME ((uint8) 2)
#define KU8_PID_SUPPLY_STEP_TYPE ((uint8) 17)
#define KU8_PID_VELOCITY_BATT_SC ((uint8) 100)
#define KU8_PID_mA_RESCALING ((uint8) 50)
#define KU8_PWM_ORDER_TYPE ((uint8) 0)
#define KU8_PWM_STEP_TYPE ((uint8) 0)
#define KU8_THRS_CORR_PIDx16 ((uint8) 50)
#define KU8_UNDEFINED_STEP ((uint8) 255)
#define KU8_VELOCITY_ORDER_TYPE ((uint8) 2)
#define KU8_VELOCITY_TRGT ((uint8) 6)
#define KU8_VLCTY_BCK_CURRENT_ORDER_TYPE ((uint8) 5)
#define KU8_VLCTY_BCK_PWM_ORDER_TYPE ((uint8) 3)
#define KU8_VLCTY_BCK_VOLTAGE_ORDER_TYPE ((uint8) 6)
#define KU8_VOLTAGE_ORDER_TYPE ((uint8) 4)
#define KU8_VOLT_STEP_TYPE ((uint8) 4)

/*------------------------------------------------------------------------------------------------------------------*\
  TYPEDEFS
\*------------------------------------------------------------------------------------------------------------------*/

typedef struct st03 {
   uint8 u8OrderType;
   sint8 s8OrderValue;
   uint16 u16StepDuration;
   boolean bReleaseControlled;
   boolean bRampStep;
   boolean bWeightedStep;
   uint8 eCurrentRegulation;
   boolean bTriggerOff;
   boolean bMotorBlocked;
   boolean bBeltBlocked;
   boolean bBeltMvtDetection;
   uint8 u8AdaptCurrentLimit;
   boolean bBeltPayoutAbortion2;
   boolean bBeltPayoutAbortion1;
   uint8 u8VelocityTarget;
} stStepParameters_Type;

/*------------------------------------------------------------------------------------------------------------------*\
  VARIABLES
\*------------------------------------------------------------------------------------------------------------------*/

/********************************************************************************************************************\
   MERGEABLE_GLOBAL_ASR4_INIT: mergeable global variables (RAM) | Width: N.A.
\********************************************************************************************************************/
#define BFE_AC_BeltFunctionExecution_START_SEC_VAR_INIT_UNSPECIFIED
#include "BFE_AC_BeltFunctionExecution_MemMap.h"
extern stStepParameters_Type stStepParameters;
#define BFE_AC_BeltFunctionExecution_STOP_SEC_VAR_INIT_UNSPECIFIED
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

/********************************************************************************************************************\
   MERGEABLE_GLOBAL_ASR4: mergeable global variables (RAM) | Width: 16
\********************************************************************************************************************/
#define BFE_AC_BeltFunctionExecution_START_SEC_VAR_UNSPECIFIED
#include "BFE_AC_BeltFunctionExecution_MemMap.h"
extern uint16 u16StepByte0;
#define BFE_AC_BeltFunctionExecution_STOP_SEC_VAR_UNSPECIFIED
#include "BFE_AC_BeltFunctionExecution_MemMap.h"
#define BFE_AC_BeltFunctionExecution_START_SEC_VAR_UNSPECIFIED
#include "BFE_AC_BeltFunctionExecution_MemMap.h"
extern uint16 u16StepBytePosition;
#define BFE_AC_BeltFunctionExecution_STOP_SEC_VAR_UNSPECIFIED
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

/*------------------------------------------------------------------------------------------------------------------*\
  PARAMETERIZED MACROS
\*------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*------------------------------------------------------------------------------------------------------------------*/

/********************************************************************************************************************\
   ARRunnable4: Default function class for AUTOSAR runnables
\********************************************************************************************************************/
#define BFE_AC_BeltFunctionExecution_START_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

FUNC(void, BFE_AC_BeltFunctionExecution_CODE) BFE_runExecuteEmergencyBrakingSequence(void);

#define BFE_AC_BeltFunctionExecution_STOP_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

#define BFE_AC_BeltFunctionExecution_START_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

FUNC(void, BFE_AC_BeltFunctionExecution_CODE) BFE_runExecuteHighPowerStep(void);

#define BFE_AC_BeltFunctionExecution_STOP_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

#define BFE_AC_BeltFunctionExecution_START_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

FUNC(void, BFE_AC_BeltFunctionExecution_CODE) BFE_runExecuteStandardSteps(void);

#define BFE_AC_BeltFunctionExecution_STOP_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

#define BFE_AC_BeltFunctionExecution_START_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

FUNC(void, BFE_AC_BeltFunctionExecution_CODE) BFE_runResetMotorStageStatus(void);

#define BFE_AC_BeltFunctionExecution_STOP_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

#define BFE_AC_BeltFunctionExecution_START_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

FUNC(void, BFE_AC_BeltFunctionExecution_CODE) BFE_runScheduleStep(void);

#define BFE_AC_BeltFunctionExecution_STOP_SEC_CODE
#include "BFE_AC_BeltFunctionExecution_MemMap.h"

#endif /* BFE_BELTFUNCTIONEXECUTION_H */
/*------------------------------------------------------------------------------------------------------------------*\
  END OF FILE
\*------------------------------------------------------------------------------------------------------------------*/
