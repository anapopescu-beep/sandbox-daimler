					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_EOL_0001, ARCH_SW_EOL_0008
ARCH_SW_EOL_0001: The EOL_runMainFunction function shall update the high force cycle counter when tensioning cycles 2 and 3 are executed.
ARCH_SW_EOL_0008: The Low Force Counter shall be incremented if High Force Counter is incremented. NVP_au32ExecutedCycleCounters NVM parameter shall be used.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Start Development Session.

	Step 3: Set signal Presf_Lvl_ST3 to I_C04_PRESF_LVL_V2_LVL4 (0x4).

	Step 4: Set a breakpoint in function cil_TriggerProfiles at line (void)Rte_Read_prrEnableCycle2_b8CycleValidity(&u8CycleValidityStatus);.

	Step 5: Check if CPU is stopped in cil_TriggerProfiles at line (void)Rte_Read_prrEnableCycle2_b8CycleValidity(&u8CycleValidityStatus);.

	Step 6: Set a breakpoint in function EOL_runMainFunction.

Action: ARCH_SW_EOL_0001

	Step 7: Check if CPU is stopped in EOL_runMainFunction function at line eol_ManageCycleCounters();. 
		Expected result:  CPU stopped at BP

	Step 8: Step in eol_ManageCycleCounters function.

	Step 9: Set a breakpoint in function eol_ManageCycleCounters at line 'case KU8_EOL_HIGH_FORCE_LEVEL:'.

Action: ARCH_SW_EOL_0001

	Step 10: Check if CPU is stopped in function eol_ManageCycleCounters at line 'case KU8_EOL_HIGH_FORCE_LEVEL:'. 
		Expected result:  CPU stopped at BP

	Step 11: Set a breakpoint in function eol_ManageCycleCounters at line 'case KU8_EOL_LOW_FORCE_LEVEL:'.

Action: ARCH_SW_EOL_0008

	Step 12: Check if CPU is stopped in function eol_ManageCycleCounters at line 'case KU8_EOL_LOW_FORCE_LEVEL:'. 
		Expected result:  CPU stopped at BP

Postcondition

	Step 13: Return ECU to default values
