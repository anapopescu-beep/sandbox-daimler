/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) 2023 by Vector Informatik GmbH.                                                All rights reserved.
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  \endverbatim
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -----------------------------------------------------------------------------------------------------------------*/
/*      \file  Crypto_30_LibCv_Curve_Int.h
 *      \brief  MICROSAR Crypto Driver (Crypto)
 *
 *      \details  Internal implementation file for curve parameters
 *
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  REVISION HISTORY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Refer to the module's header file.
 *********************************************************************************************************************/

#if !defined (CRYPTO_30_LIBCV_CURVE_INT_H)
# define CRYPTO_30_LIBCV_CURVE_INT_H

/* PRQA S 3406 EOF */ /* MD_CRYPTO_30_LIBCV_8.5 */

/**********************************************************************************************************************
 *  INCLUDES
 *********************************************************************************************************************/

# include "Crypto_30_LibCv_Curve.h"

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

# define CRYPTO_30_LIBCV_START_SEC_CONST_8BIT
# include "Crypto_30_LibCv_MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */

/****************************************************************************
 *
 * This file contains: CURVE PARAMETER and additional informations
 *                     generated by ECC_CreateGFPCurveInfos_ASN1
 *
 * data objects:
 *  esl_EccDomain, esl_EccDomainExt, esl_EccSpeedUpExt
 *
 ***************************************************************************/

/* Empty curve vector START *********************************************************************************************/
/* This vector is used to initialize pointers which shall point to the EC domain, the EC domain extension and
 * the EC SpeedUp extension. If one of the regular curve parameters were used for this purpose, the corresponding
 * arrays will always be used and therefore never be removed by the linker.
 * Since this array does not start with the ASN1 sequence tag '0x30', the parser of the underlying crypto
 * library will recognize these domains as invalid.
 * Also, the length value (the second byte) is set to zero.
 * Together, these two bytes form a valid ASN1 structure of tag and length 0 (and thus no content bytes). */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveEmptyDomain[2] = { 0u, 0u }; /* PRQA S 1514 */ /* MD_CRYPTO_30_LIBCV_8.7 */
/* Empty curve vector END ***********************************************************************************************/

/*!
 *
 * Internal comment removed.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

/* SEC_p160r1 START *************************************************************************************************/
/* The curve params in shorthand notation:
 * Name: "SECGp160r1",
 * p:    "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF",
 * a:    "0XFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC",
 * b:    "0X1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45",
 * Gx:   "0X4A96B5688EF573284664698968C38BB913CBFC82",
 * Gy:   "0X23A628553168947D59DCC912042351377AC5FB32",
 * n:    "0X100000000000000000001F4C8F927AED3CA752257",
 * h:    "0x1",
 */
# if (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 1)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1Domain[155] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0x98u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x20u,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x15u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x7fu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x2cu,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x14u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x7fu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x14u, 0x1cu, 0x97u, 0xbeu, 0xfcu, 0x54u, 0xbdu, 0x7au, 0x8bu, 0x65u, 0xacu, 0xf8u, 0x9fu, 0x81u, 0xd4u, 0xd4u, 0xadu, 0xc5u, 0x65u, 0xfau, 0x45u,
  /*    G   (basepoint of the curve) */
  0x04u, 0x29u, 0x04u, 0x4au, 0x96u, 0xb5u, 0x68u, 0x8eu, 0xf5u, 0x73u, 0x28u, 0x46u, 0x64u, 0x69u, 0x89u, 0x68u, 0xc3u, 0x8bu, 0xb9u, 0x13u, 0xcbu, 0xfcu, 0x82u, 0x23u, 0xa6u, 0x28u, 0x55u, 0x31u, 0x68u, 0x94u, 0x7du, 0x59u, 0xdcu, 0xc9u, 0x12u, 0x04u, 0x23u, 0x51u, 0x37u, 0x7au, 0xc5u, 0xfbu, 0x32u,
  /*    n   (order of G) */
  0x02u, 0x15u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0xf4u, 0xc8u, 0xf9u, 0x27u, 0xaeu, 0xd3u, 0xcau, 0x75u, 0x22u, 0x57u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1DomainExt[147] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0x90u,
  /*    SEQUENCE */
  0x30u, 0x72u,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x14u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x01u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x2cu,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x14u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfdu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x14u, 0x46u, 0xf6u, 0x7cu, 0x42u, 0x07u, 0x93u, 0xf6u, 0xdbu, 0x26u, 0x97u, 0x62u, 0xf6u, 0x6bu, 0xadu, 0xc1u, 0x8fu, 0x53u, 0xb1u, 0xd9u, 0xc3u,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x29u, 0x04u, 0x92u, 0x11u, 0x6eu, 0xfcu, 0xb2u, 0x27u, 0xa7u, 0xecu, 0xfau, 0xc6u, 0x2fu, 0x66u, 0x05u, 0x4fu, 0x37u, 0x54u, 0x39u, 0x17u, 0x57u, 0x36u, 0xbcu, 0x5au, 0x72u, 0x93u, 0xdeu, 0x56u, 0xf9u, 0x06u, 0x5bu, 0xeeu, 0x71u, 0xadu, 0xcau, 0x6fu, 0xd8u, 0xe5u, 0x8cu, 0x99u, 0x0fu, 0x5cu,
  /*    SEQUENCE */
  0x30u, 0x1au,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x15u, 0x00u, 0xabu, 0x09u, 0x43u, 0x6au, 0xb2u, 0x04u, 0xa0u, 0xe6u, 0x26u, 0x84u, 0xc9u, 0x2cu, 0x7bu, 0xaau, 0xd1u, 0xb0u, 0xf3u, 0x93u, 0xb2u, 0x49u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x01u, 0x99u,
};

CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1SpeedUpExt[355] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x5fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x58u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xa1u, 0x29u, 0x00u, 0x19u, 0x67u, 0x48u, 0xc7u, 0x48u, 0x89u, 0x82u, 0x8du, 0x41u, 0xdcu, 0x95u, 0xd7u, 0xd2u, 0x6au, 0x71u, 0x32u, 0x7fu, 0x94u, 0x98u, 0x6du, 0x17u, 0xeau, 0x30u, 0xd4u, 0xa8u, 0x54u, 0xf6u, 0x5du, 0x38u, 0x1cu, 0xecu, 0xdcu, 0xfau, 0x76u, 0x3au, 0x4bu, 0x0du,
  /*      (2^54 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x25u, 0xfcu, 0x2fu, 0x27u, 0xf5u, 0x1cu, 0x2au, 0xadu, 0xa3u, 0xceu, 0x1fu, 0x41u, 0xefu, 0x06u, 0x99u, 0xd7u, 0x69u, 0x03u, 0xeeu, 0xd9u, 0x79u, 0x51u, 0xdeu, 0xfcu, 0x19u, 0xaeu, 0xe1u, 0xd9u, 0xc9u, 0xf0u, 0x18u, 0xc4u, 0x02u, 0x2eu, 0xbbu, 0x4eu, 0x0eu, 0x9eu, 0xaeu, 0x84u,
  /*      (2^54 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xe7u, 0xbfu, 0x07u, 0x2du, 0xb4u, 0x5du, 0x88u, 0x4au, 0x29u, 0x69u, 0x97u, 0x77u, 0xb1u, 0xceu, 0xbau, 0xe2u, 0xb8u, 0x76u, 0xaeu, 0x32u, 0x22u, 0x34u, 0x45u, 0x0au, 0x8au, 0x69u, 0x30u, 0xcbu, 0xcfu, 0xa6u, 0x7cu, 0xe6u, 0x50u, 0xb3u, 0x3cu, 0xadu, 0x43u, 0x1du, 0xb1u, 0x4fu,
  /*      (2^108 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x35u, 0x63u, 0x29u, 0xc6u, 0xa6u, 0xe7u, 0xb3u, 0x6eu, 0x51u, 0xefu, 0xe3u, 0x5du, 0xe5u, 0x2bu, 0x0du, 0x03u, 0x0bu, 0x1bu, 0x53u, 0x67u, 0x13u, 0xe0u, 0xbau, 0x88u, 0x37u, 0xffu, 0xc0u, 0x5du, 0x06u, 0xfeu, 0x3du, 0x1du, 0xa4u, 0x83u, 0x9au, 0x6au, 0x04u, 0xa3u, 0xe6u, 0x85u,
  /*      (2^108 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xd4u, 0xd8u, 0x7cu, 0x90u, 0xc7u, 0x2bu, 0x0eu, 0x2eu, 0x56u, 0x73u, 0xc8u, 0x69u, 0x67u, 0xa2u, 0x28u, 0x2bu, 0x20u, 0x3fu, 0x96u, 0x30u, 0x8eu, 0xa8u, 0x06u, 0xb8u, 0xc8u, 0xecu, 0xbau, 0x42u, 0xa1u, 0xacu, 0x51u, 0x03u, 0xf0u, 0x59u, 0xc2u, 0xcfu, 0xddu, 0xdfu, 0xdeu, 0x40u,
  /*      (2^108 + 2^54 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x8eu, 0x62u, 0x41u, 0x4bu, 0x47u, 0x53u, 0x93u, 0xbbu, 0x20u, 0x70u, 0x01u, 0x8du, 0x63u, 0xedu, 0x63u, 0x7fu, 0x40u, 0xd1u, 0xecu, 0xf6u, 0x34u, 0x85u, 0xb9u, 0x62u, 0xfdu, 0x6au, 0x93u, 0x29u, 0x29u, 0xfeu, 0x95u, 0x42u, 0x85u, 0x1bu, 0x65u, 0xd9u, 0x42u, 0x0au, 0xc0u, 0x41u,
  /*      (2^108 + 2^54 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x8au, 0x73u, 0xfeu, 0x9fu, 0x5cu, 0x23u, 0xdcu, 0xf4u, 0x52u, 0x78u, 0x77u, 0x72u, 0x81u, 0xa7u, 0x55u, 0xdbu, 0xbfu, 0x77u, 0xc3u, 0x17u, 0x5cu, 0x80u, 0xf5u, 0x5du, 0x1cu, 0xbeu, 0xb3u, 0x42u, 0x3au, 0x1fu, 0x42u, 0xc4u, 0x96u, 0xd5u, 0xdbu, 0xc3u, 0x03u, 0x7du, 0x17u, 0x43u,
  /*      correction point D = - ((2^54 - 1) * G) in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x19u, 0x86u, 0x73u, 0x2eu, 0x8eu, 0x3eu, 0x13u, 0x39u, 0x81u, 0x01u, 0x3bu, 0xbcu, 0xd7u, 0x52u, 0x20u, 0x46u, 0x64u, 0xb8u, 0xa9u, 0xb3u, 0x96u, 0x28u, 0x5eu, 0xf2u, 0x3au, 0xa0u, 0xd2u, 0xebu, 0xe2u, 0x17u, 0x6fu, 0xcbu, 0xabu, 0x60u, 0xc1u, 0xdbu, 0xe0u, 0x59u, 0xe5u, 0x5cu,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 2)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1Domain[155] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0x98u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x20u,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x15u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x7fu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x2cu,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x14u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x7fu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x14u, 0x1cu, 0x97u, 0xbeu, 0xfcu, 0x54u, 0xbdu, 0x7au, 0x8bu, 0x65u, 0xacu, 0xf8u, 0x9fu, 0x81u, 0xd4u, 0xd4u, 0xadu, 0xc5u, 0x65u, 0xfau, 0x45u,
  /*    G   (basepoint of the curve) */
  0x04u, 0x29u, 0x04u, 0x4au, 0x96u, 0xb5u, 0x68u, 0x8eu, 0xf5u, 0x73u, 0x28u, 0x46u, 0x64u, 0x69u, 0x89u, 0x68u, 0xc3u, 0x8bu, 0xb9u, 0x13u, 0xcbu, 0xfcu, 0x82u, 0x23u, 0xa6u, 0x28u, 0x55u, 0x31u, 0x68u, 0x94u, 0x7du, 0x59u, 0xdcu, 0xc9u, 0x12u, 0x04u, 0x23u, 0x51u, 0x37u, 0x7au, 0xc5u, 0xfbu, 0x32u,
  /*    n   (order of G) */
  0x02u, 0x15u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0xf4u, 0xc8u, 0xf9u, 0x27u, 0xaeu, 0xd3u, 0xcau, 0x75u, 0x22u, 0x57u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1DomainExt[149] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0x92u,
  /*    SEQUENCE */
  0x30u, 0x73u,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x14u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x02u, 0x00u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x2cu,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x14u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfdu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x14u, 0x46u, 0xf6u, 0x7cu, 0x42u, 0x07u, 0x93u, 0xf6u, 0xdbu, 0x26u, 0x97u, 0x62u, 0xf6u, 0x6bu, 0xadu, 0xc1u, 0x8fu, 0x53u, 0xb1u, 0xd9u, 0xc3u,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x29u, 0x04u, 0x92u, 0x11u, 0x6eu, 0xfcu, 0xb2u, 0x27u, 0xa7u, 0xecu, 0xfau, 0xc6u, 0x2fu, 0x66u, 0x05u, 0x4fu, 0x37u, 0x54u, 0x39u, 0x17u, 0x57u, 0x36u, 0xbcu, 0x5au, 0x72u, 0x93u, 0xdeu, 0x56u, 0xf9u, 0x06u, 0x5bu, 0xeeu, 0x71u, 0xadu, 0xcau, 0x6fu, 0xd8u, 0xe5u, 0x8cu, 0x99u, 0x0fu, 0x5cu,
  /*    SEQUENCE */
  0x30u, 0x1bu,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x15u, 0x00u, 0x43u, 0x6au, 0xb2u, 0x04u, 0xa0u, 0xe6u, 0x26u, 0x83u, 0x7au, 0x98u, 0xa2u, 0x2cu, 0x8du, 0x84u, 0x55u, 0xe5u, 0x56u, 0x3au, 0xadu, 0xf1u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x02u, 0x16u, 0x99u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1SpeedUpExt[355] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x5fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x58u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xa1u, 0x29u, 0x00u, 0x19u, 0x67u, 0x48u, 0xc7u, 0x48u, 0x89u, 0x82u, 0x8du, 0x41u, 0xdcu, 0x95u, 0xd7u, 0xd2u, 0x6au, 0x71u, 0x32u, 0x7fu, 0x94u, 0x98u, 0x6du, 0x17u, 0xeau, 0x30u, 0xd4u, 0xa8u, 0x54u, 0xf6u, 0x5du, 0x38u, 0x1cu, 0xecu, 0xdcu, 0xfau, 0x76u, 0x3au, 0x4bu, 0x0du,
  /*      (2^54 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x25u, 0xfcu, 0x2fu, 0x27u, 0xf5u, 0x1cu, 0x2au, 0xadu, 0xa3u, 0xceu, 0x1fu, 0x41u, 0xefu, 0x06u, 0x99u, 0xd7u, 0x69u, 0x03u, 0xeeu, 0xd9u, 0x79u, 0x51u, 0xdeu, 0xfcu, 0x19u, 0xaeu, 0xe1u, 0xd9u, 0xc9u, 0xf0u, 0x18u, 0xc4u, 0x02u, 0x2eu, 0xbbu, 0x4eu, 0x0eu, 0x9eu, 0xaeu, 0x84u,
  /*      (2^54 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xe7u, 0xbfu, 0x07u, 0x2du, 0xb4u, 0x5du, 0x88u, 0x4au, 0x29u, 0x69u, 0x97u, 0x77u, 0xb1u, 0xceu, 0xbau, 0xe2u, 0xb8u, 0x76u, 0xaeu, 0x32u, 0x22u, 0x34u, 0x45u, 0x0au, 0x8au, 0x69u, 0x30u, 0xcbu, 0xcfu, 0xa6u, 0x7cu, 0xe6u, 0x50u, 0xb3u, 0x3cu, 0xadu, 0x43u, 0x1du, 0xb1u, 0x4fu,
  /*      (2^108 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x35u, 0x63u, 0x29u, 0xc6u, 0xa6u, 0xe7u, 0xb3u, 0x6eu, 0x51u, 0xefu, 0xe3u, 0x5du, 0xe5u, 0x2bu, 0x0du, 0x03u, 0x0bu, 0x1bu, 0x53u, 0x67u, 0x13u, 0xe0u, 0xbau, 0x88u, 0x37u, 0xffu, 0xc0u, 0x5du, 0x06u, 0xfeu, 0x3du, 0x1du, 0xa4u, 0x83u, 0x9au, 0x6au, 0x04u, 0xa3u, 0xe6u, 0x85u,
  /*      (2^108 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xd4u, 0xd8u, 0x7cu, 0x90u, 0xc7u, 0x2bu, 0x0eu, 0x2eu, 0x56u, 0x73u, 0xc8u, 0x69u, 0x67u, 0xa2u, 0x28u, 0x2bu, 0x20u, 0x3fu, 0x96u, 0x30u, 0x8eu, 0xa8u, 0x06u, 0xb8u, 0xc8u, 0xecu, 0xbau, 0x42u, 0xa1u, 0xacu, 0x51u, 0x03u, 0xf0u, 0x59u, 0xc2u, 0xcfu, 0xddu, 0xdfu, 0xdeu, 0x40u,
  /*      (2^108 + 2^54 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x8eu, 0x62u, 0x41u, 0x4bu, 0x47u, 0x53u, 0x93u, 0xbbu, 0x20u, 0x70u, 0x01u, 0x8du, 0x63u, 0xedu, 0x63u, 0x7fu, 0x40u, 0xd1u, 0xecu, 0xf6u, 0x34u, 0x85u, 0xb9u, 0x62u, 0xfdu, 0x6au, 0x93u, 0x29u, 0x29u, 0xfeu, 0x95u, 0x42u, 0x85u, 0x1bu, 0x65u, 0xd9u, 0x42u, 0x0au, 0xc0u, 0x41u,
  /*      (2^108 + 2^54 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x8au, 0x73u, 0xfeu, 0x9fu, 0x5cu, 0x23u, 0xdcu, 0xf4u, 0x52u, 0x78u, 0x77u, 0x72u, 0x81u, 0xa7u, 0x55u, 0xdbu, 0xbfu, 0x77u, 0xc3u, 0x17u, 0x5cu, 0x80u, 0xf5u, 0x5du, 0x1cu, 0xbeu, 0xb3u, 0x42u, 0x3au, 0x1fu, 0x42u, 0xc4u, 0x96u, 0xd5u, 0xdbu, 0xc3u, 0x03u, 0x7du, 0x17u, 0x43u,
  /*      correction point D = - ((2^54 - 1) * G) in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x19u, 0x86u, 0x73u, 0x2eu, 0x8eu, 0x3eu, 0x13u, 0x39u, 0x81u, 0x01u, 0x3bu, 0xbcu, 0xd7u, 0x52u, 0x20u, 0x46u, 0x64u, 0xb8u, 0xa9u, 0xb3u, 0x96u, 0x28u, 0x5eu, 0xf2u, 0x3au, 0xa0u, 0xd2u, 0xebu, 0xe2u, 0x17u, 0x6fu, 0xcbu, 0xabu, 0x60u, 0xc1u, 0xdbu, 0xe0u, 0x59u, 0xe5u, 0x5cu,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 4)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1Domain[155] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0x98u,
  /*  version */
  0x02u, 0x01u, 0x01u,
  /*  SEQUENCE */
  0x30u, 0x20u,
  /*   prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*   p   (field prime) */
  0x02u, 0x15u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x7fu, 0xffu, 0xffu, 0xffu,
  /*  SEQUENCE */
  0x30u, 0x2cu,
  /*   a   (coefficient a of the curve equation) */
  0x04u, 0x14u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x7fu, 0xffu, 0xffu, 0xfcu,
  /*   b   (coefficient b of the curve equation) */
  0x04u, 0x14u, 0x1cu, 0x97u, 0xbeu, 0xfcu, 0x54u, 0xbdu, 0x7au, 0x8bu, 0x65u, 0xacu, 0xf8u, 0x9fu, 0x81u, 0xd4u, 0xd4u, 0xadu, 0xc5u, 0x65u, 0xfau, 0x45u,
  /*  G   (basepoint of the curve) */
  0x04u, 0x29u, 0x04u, 0x4au, 0x96u, 0xb5u, 0x68u, 0x8eu, 0xf5u, 0x73u, 0x28u, 0x46u, 0x64u, 0x69u, 0x89u, 0x68u, 0xc3u, 0x8bu, 0xb9u, 0x13u, 0xcbu, 0xfcu, 0x82u, 0x23u, 0xa6u, 0x28u, 0x55u, 0x31u, 0x68u, 0x94u, 0x7du, 0x59u, 0xdcu, 0xc9u, 0x12u, 0x04u, 0x23u, 0x51u, 0x37u, 0x7au, 0xc5u, 0xfbu, 0x32u,
  /*  n   (order of G) */
  0x02u, 0x15u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0xf4u, 0xc8u, 0xf9u, 0x27u, 0xaeu, 0xd3u, 0xcau, 0x75u, 0x22u, 0x57u,
  /*  h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1DomainExt[153] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0x96u,
  /*  SEQUENCE */
  0x30u, 0x75u,
  /*   p_RR  (R^2 in prime field) */
  0x04u, 0x14u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*   p_bar   (low digit of -(p^-1)) */
  0x04u, 0x04u, 0x80u, 0x00u, 0x00u, 0x01u,
  /*   SEQUENCE */
  0x30u, 0x2cu,
  /*    a_R   (a in Montgomery representation) */
  0x04u, 0x14u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfdu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*    b_R   (b in Montgomery representation) */
  0x04u, 0x14u, 0x46u, 0xf6u, 0x7cu, 0x42u, 0x07u, 0x93u, 0xf6u, 0xdbu, 0x26u, 0x97u, 0x62u, 0xf6u, 0x6bu, 0xadu, 0xc1u, 0x8fu, 0x53u, 0xb1u, 0xd9u, 0xc3u,
  /*    G_R   (G in Montgomery representation) */
  0x04u, 0x29u, 0x04u, 0x92u, 0x11u, 0x6eu, 0xfcu, 0xb2u, 0x27u, 0xa7u, 0xecu, 0xfau, 0xc6u, 0x2fu, 0x66u, 0x05u, 0x4fu, 0x37u, 0x54u, 0x39u, 0x17u, 0x57u, 0x36u, 0xbcu, 0x5au, 0x72u, 0x93u, 0xdeu, 0x56u, 0xf9u, 0x06u, 0x5bu, 0xeeu, 0x71u, 0xadu, 0xcau, 0x6fu, 0xd8u, 0xe5u, 0x8cu, 0x99u, 0x0fu, 0x5cu,
  /*   SEQUENCE */
  0x30u, 0x1du,
  /*   n_RR   (R^2 in order field) */
  0x04u, 0x15u, 0x00u, 0xa0u, 0xe6u, 0x26u, 0x83u, 0x7au, 0x98u, 0x1eu, 0x4bu, 0x3cu, 0xdcu, 0x38u, 0x54u, 0x08u, 0x5eu, 0x33u, 0x5fu, 0x67u, 0x44u, 0xf8u, 0xa4u,
  /*   n_bar   (low digit of -(n^-1)) */
  0x04u, 0x04u, 0x30u, 0x6du, 0x16u, 0x99u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveSecP160R1SpeedUpExt[355] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x5fu,
  /*  groups parameter */
  0x04u, 0x01u, 0x03u,
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x58u,
  /*   2 * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xa1u, 0x29u, 0x00u, 0x19u, 0x67u, 0x48u, 0xc7u, 0x48u, 0x89u, 0x82u, 0x8du, 0x41u, 0xdcu, 0x95u, 0xd7u, 0xd2u, 0x6au, 0x71u, 0x32u, 0x7fu, 0x94u, 0x98u, 0x6du, 0x17u, 0xeau, 0x30u, 0xd4u, 0xa8u, 0x54u, 0xf6u, 0x5du, 0x38u, 0x1cu, 0xecu, 0xdcu, 0xfau, 0x76u, 0x3au, 0x4bu, 0x0du,
  /*   (2^54 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x25u, 0xfcu, 0x2fu, 0x27u, 0xf5u, 0x1cu, 0x2au, 0xadu, 0xa3u, 0xceu, 0x1fu, 0x41u, 0xefu, 0x06u, 0x99u, 0xd7u, 0x69u, 0x03u, 0xeeu, 0xd9u, 0x79u, 0x51u, 0xdeu, 0xfcu, 0x19u, 0xaeu, 0xe1u, 0xd9u, 0xc9u, 0xf0u, 0x18u, 0xc4u, 0x02u, 0x2eu, 0xbbu, 0x4eu, 0x0eu, 0x9eu, 0xaeu, 0x84u,
  /*   (2^54 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xe7u, 0xbfu, 0x07u, 0x2du, 0xb4u, 0x5du, 0x88u, 0x4au, 0x29u, 0x69u, 0x97u, 0x77u, 0xb1u, 0xceu, 0xbau, 0xe2u, 0xb8u, 0x76u, 0xaeu, 0x32u, 0x22u, 0x34u, 0x45u, 0x0au, 0x8au, 0x69u, 0x30u, 0xcbu, 0xcfu, 0xa6u, 0x7cu, 0xe6u, 0x50u, 0xb3u, 0x3cu, 0xadu, 0x43u, 0x1du, 0xb1u, 0x4fu,
  /*   (2^108 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x35u, 0x63u, 0x29u, 0xc6u, 0xa6u, 0xe7u, 0xb3u, 0x6eu, 0x51u, 0xefu, 0xe3u, 0x5du, 0xe5u, 0x2bu, 0x0du, 0x03u, 0x0bu, 0x1bu, 0x53u, 0x67u, 0x13u, 0xe0u, 0xbau, 0x88u, 0x37u, 0xffu, 0xc0u, 0x5du, 0x06u, 0xfeu, 0x3du, 0x1du, 0xa4u, 0x83u, 0x9au, 0x6au, 0x04u, 0xa3u, 0xe6u, 0x85u,
  /*   (2^108 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0xd4u, 0xd8u, 0x7cu, 0x90u, 0xc7u, 0x2bu, 0x0eu, 0x2eu, 0x56u, 0x73u, 0xc8u, 0x69u, 0x67u, 0xa2u, 0x28u, 0x2bu, 0x20u, 0x3fu, 0x96u, 0x30u, 0x8eu, 0xa8u, 0x06u, 0xb8u, 0xc8u, 0xecu, 0xbau, 0x42u, 0xa1u, 0xacu, 0x51u, 0x03u, 0xf0u, 0x59u, 0xc2u, 0xcfu, 0xddu, 0xdfu, 0xdeu, 0x40u,
  /*   (2^108 + 2^54 + 1) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x8eu, 0x62u, 0x41u, 0x4bu, 0x47u, 0x53u, 0x93u, 0xbbu, 0x20u, 0x70u, 0x01u, 0x8du, 0x63u, 0xedu, 0x63u, 0x7fu, 0x40u, 0xd1u, 0xecu, 0xf6u, 0x34u, 0x85u, 0xb9u, 0x62u, 0xfdu, 0x6au, 0x93u, 0x29u, 0x29u, 0xfeu, 0x95u, 0x42u, 0x85u, 0x1bu, 0x65u, 0xd9u, 0x42u, 0x0au, 0xc0u, 0x41u,
  /*   (2^108 + 2^54 + 2) * G in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x8au, 0x73u, 0xfeu, 0x9fu, 0x5cu, 0x23u, 0xdcu, 0xf4u, 0x52u, 0x78u, 0x77u, 0x72u, 0x81u, 0xa7u, 0x55u, 0xdbu, 0xbfu, 0x77u, 0xc3u, 0x17u, 0x5cu, 0x80u, 0xf5u, 0x5du, 0x1cu, 0xbeu, 0xb3u, 0x42u, 0x3au, 0x1fu, 0x42u, 0xc4u, 0x96u, 0xd5u, 0xdbu, 0xc3u, 0x03u, 0x7du, 0x17u, 0x43u,
  /*    correction point D = - ((2^54 - 1) * G) in Montgomery representation */
  0x04u, 0x29u, 0x04u, 0x19u, 0x86u, 0x73u, 0x2eu, 0x8eu, 0x3eu, 0x13u, 0x39u, 0x81u, 0x01u, 0x3bu, 0xbcu, 0xd7u, 0x52u, 0x20u, 0x46u, 0x64u, 0xb8u, 0xa9u, 0xb3u, 0x96u, 0x28u, 0x5eu, 0xf2u, 0x3au, 0xa0u, 0xd2u, 0xebu, 0xe2u, 0x17u, 0x6fu, 0xcbu, 0xabu, 0x60u, 0xc1u, 0xdbu, 0xe0u, 0x59u, 0xe5u, 0x5cu,
};
# else /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
#  error "Value of CRYPTO_30_LIBCV_BYTES_PER_DIGIT is not supported"
# endif /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
/* SEC_p160r1 END ****************************************************************************************************/

/* NIST_SEC_p224r1 START *********************************************************************************************/
/* NISTp224r1 = SECp224r1 */
/* The curve params in shorthand notation:
 * Name: SECGp224r1
 * p:    0xffffffffffffffffffffffffffffffff000000000000000000000001
 * a:    0xfffffffffffffffffffffffffffffffefffffffffffffffffffffffe
 * b:    0xb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4
 * Gx:   0xb70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21
 * Gy:   0xbd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34
 * n:    0xffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d
 * h:    0x1
 */

# if (actBN_BYTES_PER_DIGIT == 1)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1Domain[203] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0xc8u,
  /*   version */
  0x02u, 0x01u, 0x01u,
  /*   SEQUENCE */
  0x30u, 0x28u,
  /*     prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*     p   (field prime) */
  0x02u, 0x1du, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*   SEQUENCE */
  0x30u, 0x3cu,
  /*     a   (coefficient a of the curve equation) */
  0x04u, 0x1cu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu,
  /*     b   (coefficient b of the curve equation) */
  0x04u, 0x1cu, 0xb4u, 0x05u, 0x0au, 0x85u, 0x0cu, 0x04u, 0xb3u, 0xabu, 0xf5u, 0x41u, 0x32u, 0x56u, 0x50u, 0x44u, 0xb0u, 0xb7u, 0xd7u, 0xbfu, 0xd8u, 0xbau, 0x27u, 0x0bu, 0x39u, 0x43u, 0x23u, 0x55u, 0xffu, 0xb4u,
  /*   G   (basepoint of the curve) */
  0x04u, 0x39u, 0x04u, 0xb7u, 0x0eu, 0x0cu, 0xbdu, 0x6bu, 0xb4u, 0xbfu, 0x7fu, 0x32u, 0x13u, 0x90u, 0xb9u, 0x4au, 0x03u, 0xc1u, 0xd3u, 0x56u, 0xc2u, 0x11u, 0x22u, 0x34u, 0x32u, 0x80u, 0xd6u, 0x11u, 0x5cu, 0x1du, 0x21u, 0xbdu, 0x37u, 0x63u, 0x88u, 0xb5u, 0xf7u, 0x23u, 0xfbu, 0x4cu, 0x22u, 0xdfu, 0xe6u, 0xcdu, 0x43u, 0x75u, 0xa0u, 0x5au, 0x07u, 0x47u, 0x64u, 0x44u, 0xd5u, 0x81u, 0x99u, 0x85u, 0x00u, 0x7eu, 0x34u,
  /*   n   (order of G) */
  0x02u, 0x1du, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x16u, 0xa2u, 0xe0u, 0xb8u, 0xf0u, 0x3eu, 0x13u, 0xddu, 0x29u, 0x45u, 0x5cu, 0x5cu, 0x2au, 0x3du,
  /*   h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1DomainExt[195] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0xc0u,
  /*   SEQUENCE */
  0x30u, 0x81u, 0x9au,
  /*     p_RR  (R^2 in prime field) */
  0x04u, 0x1cu, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*     p_bar   (low digit of -(p^-1)) */
  0x04u, 0x01u, 0xffu,
  /*     SEQUENCE */
  0x30u, 0x3cu,
  /*       a_R   (a in Montgomery representation) */
  0x04u, 0x1cu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u,
  /*       b_R   (b in Montgomery representation) */
  0x04u, 0x1cu, 0x9cu, 0x3fu, 0xa6u, 0x33u, 0x7fu, 0xc0u, 0x2fu, 0x93u, 0x3du, 0xceu, 0xbau, 0x98u, 0xc8u, 0x52u, 0x81u, 0x50u, 0x74u, 0x3bu, 0x1cu, 0xc0u, 0xccu, 0xf0u, 0x13u, 0x10u, 0xe7u, 0x68u, 0xcdu, 0xf7u,
  /*     G_R   (G in Montgomery representation) */
  0x04u, 0x39u, 0x04u, 0x92u, 0xf5u, 0xb5u, 0x16u, 0xa2u, 0x1bu, 0x5eu, 0x60u, 0x6du, 0xd3u, 0xafu, 0x9bu, 0xf9u, 0x6bu, 0xecu, 0x04u, 0xf2u, 0x2fu, 0xe2u, 0x20u, 0x60u, 0x18u, 0xbfu, 0xaau, 0xbcu, 0x90u, 0x52u, 0x27u, 0x10u, 0x0cu, 0x12u, 0x18u, 0x61u, 0x47u, 0x86u, 0xf1u, 0xaeu, 0xa9u, 0xc5u, 0xaeu, 0x03u, 0xdfu, 0xe8u, 0x78u, 0xe8u, 0xc1u, 0x55u, 0x13u, 0x05u, 0x33u, 0x5au, 0x6bu, 0x2eu, 0xdcu, 0xa1u, 0xe6u,
  /*   SEQUENCE */
  0x30u, 0x21u,
  /*     n_RR   (R^2 in order field) */
  0x04u, 0x1cu, 0xd4u, 0xbau, 0xa4u, 0xcfu, 0x18u, 0x22u, 0xbcu, 0x47u, 0xb1u, 0xe9u, 0x79u, 0x61u, 0x6au, 0xd0u, 0x9du, 0x91u, 0x97u, 0xa5u, 0x45u, 0x52u, 0x6bu, 0xdau, 0xaeu, 0x6cu, 0x3au, 0xd0u, 0x12u, 0x89u,
  /*     n_bar   (low digit of -(n^-1)) */
  0x04u, 0x01u, 0xebu,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1SpeedUpExt[483] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x82u, 0x01u, 0xdfu,
  /*   groups parameter */
  0x04u, 0x01u, 0x03u,
  /*   SEQUENCE */
  0x30u, 0x82u, 0x01u, 0xd8u,
  /*     2 * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x18u, 0xddu, 0x00u, 0xacu, 0xcau, 0xfbu, 0x50u, 0xf5u, 0x10u, 0xc9u, 0x11u, 0xf7u, 0x2au, 0x0fu, 0x16u, 0x89u, 0xbeu, 0x27u, 0xf7u, 0xa3u, 0x56u, 0x50u, 0xdfu, 0x9bu, 0x4cu, 0xa9u, 0xa1u, 0xedu, 0x6au, 0x5du, 0xb1u, 0xa2u, 0x5cu, 0xabu, 0xb8u, 0x80u, 0x0cu, 0x84u, 0xceu, 0xd0u, 0x76u, 0xccu, 0x10u, 0x19u, 0xe7u, 0x2eu, 0x60u, 0x0fu, 0xc9u, 0x0au, 0xe1u, 0x86u, 0x02u, 0xaau, 0xc7u, 0x9cu,
  /*     (2^75 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x7du, 0xdfu, 0xbau, 0xa5u, 0x30u, 0x42u, 0x21u, 0xfcu, 0x33u, 0x50u, 0xe8u, 0x78u, 0x22u, 0x92u, 0xffu, 0x62u, 0x7eu, 0xc1u, 0x30u, 0x50u, 0x71u, 0x1fu, 0xceu, 0x8du, 0xf0u, 0x6du, 0x61u, 0x1du, 0x68u, 0x65u, 0xb8u, 0xd4u, 0x02u, 0x1du, 0x49u, 0x5du, 0xbau, 0x4du, 0xe4u, 0x4du, 0x41u, 0x02u, 0xe4u, 0xe3u, 0x09u, 0xb2u, 0xabu, 0x6fu, 0x4du, 0x42u, 0xadu, 0xaau, 0xc5u, 0xecu, 0x6du, 0x9cu,
  /*     (2^75 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x84u, 0xb4u, 0x25u, 0xe8u, 0x77u, 0xd5u, 0x72u, 0x90u, 0xd6u, 0x97u, 0x56u, 0xdeu, 0xd1u, 0x42u, 0x49u, 0x43u, 0x57u, 0xd7u, 0xbbu, 0x8bu, 0x2cu, 0xe1u, 0xb4u, 0x90u, 0xabu, 0xf3u, 0x8cu, 0x1fu, 0x1au, 0x97u, 0x11u, 0xdeu, 0xfdu, 0xe3u, 0x23u, 0xabu, 0xa9u, 0x21u, 0x64u, 0x5au, 0x3bu, 0xa7u, 0x2fu, 0x33u, 0x0au, 0x7eu, 0x07u, 0x76u, 0x16u, 0x44u, 0xffu, 0xe5u, 0x7eu, 0x92u, 0xd0u, 0x9du,
  /*     (2^150 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x9du, 0x5cu, 0x98u, 0xa9u, 0x42u, 0xcfu, 0xb8u, 0x3cu, 0x41u, 0x6cu, 0x64u, 0x5au, 0xc0u, 0x63u, 0x2du, 0x43u, 0xd3u, 0xb7u, 0xc7u, 0x33u, 0xc6u, 0xe7u, 0x1du, 0x41u, 0x00u, 0x67u, 0xbfu, 0x54u, 0x1eu, 0xebu, 0x3fu, 0x8cu, 0xb7u, 0x1fu, 0xd5u, 0xddu, 0xc3u, 0xf3u, 0x48u, 0xa1u, 0x7eu, 0x81u, 0x8fu, 0xe0u, 0x8du, 0x72u, 0x23u, 0xb3u, 0xdfu, 0xddu, 0x55u, 0xf2u, 0x24u, 0xccu, 0x79u, 0xe3u,
  /*     (2^150 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0xf5u, 0xb8u, 0xcau, 0x58u, 0x85u, 0xa6u, 0xa6u, 0xebu, 0xd9u, 0x28u, 0x9cu, 0x74u, 0xfau, 0x2au, 0x53u, 0x1fu, 0xd7u, 0x9au, 0x88u, 0x5eu, 0x15u, 0xd9u, 0x6eu, 0xc3u, 0x8fu, 0x63u, 0x9cu, 0xf3u, 0xfbu, 0x20u, 0x0cu, 0xe2u, 0x4cu, 0x5cu, 0xe6u, 0xa1u, 0xd9u, 0xfau, 0xd8u, 0xe5u, 0x63u, 0x1fu, 0xa0u, 0x04u, 0x0bu, 0x0fu, 0xd1u, 0xeeu, 0xdfu, 0xffu, 0xb5u, 0x17u, 0x96u, 0x7au, 0xfdu, 0xfcu,
  /*     (2^150 + 2^75 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x34u, 0x7bu, 0xbcu, 0x79u, 0x1cu, 0xf6u, 0x1bu, 0xdfu, 0x7fu, 0x96u, 0xb5u, 0x5fu, 0x7eu, 0xabu, 0x4au, 0x0au, 0xa0u, 0x98u, 0xbau, 0xfbu, 0xdfu, 0x89u, 0x19u, 0x33u, 0xf5u, 0x45u, 0xe4u, 0xddu, 0xe0u, 0x57u, 0xe1u, 0xcau, 0xecu, 0x54u, 0x6eu, 0xd2u, 0x2du, 0x74u, 0xc2u, 0x3eu, 0x1fu, 0x2au, 0x61u, 0x4fu, 0x38u, 0x6du, 0x8cu, 0x37u, 0x19u, 0x39u, 0xa2u, 0x3eu, 0x12u, 0x38u, 0x73u, 0x43u,
  /*     (2^150 + 2^75 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x99u, 0x12u, 0x11u, 0xc0u, 0xf8u, 0x74u, 0xb0u, 0x93u, 0xb7u, 0xa8u, 0xe3u, 0xceu, 0x9du, 0x60u, 0xb0u, 0xedu, 0xd9u, 0xbcu, 0x5eu, 0x28u, 0xdcu, 0xb0u, 0xb0u, 0xb8u, 0x0cu, 0xe9u, 0xeeu, 0xd8u, 0xb6u, 0xd0u, 0x53u, 0x98u, 0x1au, 0x4du, 0x50u, 0x75u, 0xe7u, 0xf0u, 0x7du, 0x12u, 0x44u, 0x79u, 0x53u, 0x26u, 0x81u, 0x52u, 0x5au, 0x94u, 0x9au, 0x00u, 0xd6u, 0xd4u, 0x53u, 0x89u, 0x2bu, 0xbdu,
  /*     correction point D = - ((2^75 - 1) * G) in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0xafu, 0x18u, 0x1au, 0xe7u, 0x7cu, 0xc3u, 0xe9u, 0x18u, 0x71u, 0x5bu, 0x80u, 0x6eu, 0x41u, 0x32u, 0x20u, 0x05u, 0xd7u, 0xfau, 0x89u, 0x1du, 0xbcu, 0xc7u, 0xa3u, 0x56u, 0x67u, 0x32u, 0xb0u, 0xdfu, 0x24u, 0x9au, 0x58u, 0xfeu, 0x10u, 0xa2u, 0x0du, 0x6bu, 0x7fu, 0xa9u, 0xc4u, 0xd7u, 0xbau, 0x4cu, 0x3eu, 0x36u, 0x66u, 0x22u, 0xfau, 0x0du, 0xedu, 0xf1u, 0x46u, 0x69u, 0xd5u, 0xc2u, 0x44u, 0xedu,
};

# elif (actBN_BYTES_PER_DIGIT == 2)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1Domain[203] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0xc8u,
  /*   version */
  0x02u, 0x01u, 0x01u,
  /*   SEQUENCE */
  0x30u, 0x28u,
  /*     prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*     p   (field prime) */
  0x02u, 0x1du, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*   SEQUENCE */
  0x30u, 0x3cu,
  /*     a   (coefficient a of the curve equation) */
  0x04u, 0x1cu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu,
  /*     b   (coefficient b of the curve equation) */
  0x04u, 0x1cu, 0xb4u, 0x05u, 0x0au, 0x85u, 0x0cu, 0x04u, 0xb3u, 0xabu, 0xf5u, 0x41u, 0x32u, 0x56u, 0x50u, 0x44u, 0xb0u, 0xb7u, 0xd7u, 0xbfu, 0xd8u, 0xbau, 0x27u, 0x0bu, 0x39u, 0x43u, 0x23u, 0x55u, 0xffu, 0xb4u,
  /*   G   (basepoint of the curve) */
  0x04u, 0x39u, 0x04u, 0xb7u, 0x0eu, 0x0cu, 0xbdu, 0x6bu, 0xb4u, 0xbfu, 0x7fu, 0x32u, 0x13u, 0x90u, 0xb9u, 0x4au, 0x03u, 0xc1u, 0xd3u, 0x56u, 0xc2u, 0x11u, 0x22u, 0x34u, 0x32u, 0x80u, 0xd6u, 0x11u, 0x5cu, 0x1du, 0x21u, 0xbdu, 0x37u, 0x63u, 0x88u, 0xb5u, 0xf7u, 0x23u, 0xfbu, 0x4cu, 0x22u, 0xdfu, 0xe6u, 0xcdu, 0x43u, 0x75u, 0xa0u, 0x5au, 0x07u, 0x47u, 0x64u, 0x44u, 0xd5u, 0x81u, 0x99u, 0x85u, 0x00u, 0x7eu, 0x34u,
  /*   n   (order of G) */
  0x02u, 0x1du, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x16u, 0xa2u, 0xe0u, 0xb8u, 0xf0u, 0x3eu, 0x13u, 0xddu, 0x29u, 0x45u, 0x5cu, 0x5cu, 0x2au, 0x3du,
  /*   h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1DomainExt[197] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0xc2u,
  /*   SEQUENCE */
  0x30u, 0x81u, 0x9bu,
  /*     p_RR  (R^2 in prime field) */
  0x04u, 0x1cu, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*     p_bar   (low digit of -(p^-1)) */
  0x04u, 0x02u, 0xffu, 0xffu,
  /*     SEQUENCE */
  0x30u, 0x3cu,
  /*       a_R   (a in Montgomery representation) */
  0x04u, 0x1cu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u,
  /*       b_R   (b in Montgomery representation) */
  0x04u, 0x1cu, 0x9cu, 0x3fu, 0xa6u, 0x33u, 0x7fu, 0xc0u, 0x2fu, 0x93u, 0x3du, 0xceu, 0xbau, 0x98u, 0xc8u, 0x52u, 0x81u, 0x50u, 0x74u, 0x3bu, 0x1cu, 0xc0u, 0xccu, 0xf0u, 0x13u, 0x10u, 0xe7u, 0x68u, 0xcdu, 0xf7u,
  /*     G_R   (G in Montgomery representation) */
  0x04u, 0x39u, 0x04u, 0x92u, 0xf5u, 0xb5u, 0x16u, 0xa2u, 0x1bu, 0x5eu, 0x60u, 0x6du, 0xd3u, 0xafu, 0x9bu, 0xf9u, 0x6bu, 0xecu, 0x04u, 0xf2u, 0x2fu, 0xe2u, 0x20u, 0x60u, 0x18u, 0xbfu, 0xaau, 0xbcu, 0x90u, 0x52u, 0x27u, 0x10u, 0x0cu, 0x12u, 0x18u, 0x61u, 0x47u, 0x86u, 0xf1u, 0xaeu, 0xa9u, 0xc5u, 0xaeu, 0x03u, 0xdfu, 0xe8u, 0x78u, 0xe8u, 0xc1u, 0x55u, 0x13u, 0x05u, 0x33u, 0x5au, 0x6bu, 0x2eu, 0xdcu, 0xa1u, 0xe6u,
  /*   SEQUENCE */
  0x30u, 0x22u,
  /*     n_RR   (R^2 in order field) */
  0x04u, 0x1cu, 0xd4u, 0xbau, 0xa4u, 0xcfu, 0x18u, 0x22u, 0xbcu, 0x47u, 0xb1u, 0xe9u, 0x79u, 0x61u, 0x6au, 0xd0u, 0x9du, 0x91u, 0x97u, 0xa5u, 0x45u, 0x52u, 0x6bu, 0xdau, 0xaeu, 0x6cu, 0x3au, 0xd0u, 0x12u, 0x89u,
  /*     n_bar   (low digit of -(n^-1)) */
  0x04u, 0x02u, 0xc2u, 0xebu,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1SpeedUpExt[483] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x82u, 0x01u, 0xdfu,
  /*   groups parameter */
  0x04u, 0x01u, 0x03u,
  /*   SEQUENCE */
  0x30u, 0x82u, 0x01u, 0xd8u,
  /*     2 * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x18u, 0xddu, 0x00u, 0xacu, 0xcau, 0xfbu, 0x50u, 0xf5u, 0x10u, 0xc9u, 0x11u, 0xf7u, 0x2au, 0x0fu, 0x16u, 0x89u, 0xbeu, 0x27u, 0xf7u, 0xa3u, 0x56u, 0x50u, 0xdfu, 0x9bu, 0x4cu, 0xa9u, 0xa1u, 0xedu, 0x6au, 0x5du, 0xb1u, 0xa2u, 0x5cu, 0xabu, 0xb8u, 0x80u, 0x0cu, 0x84u, 0xceu, 0xd0u, 0x76u, 0xccu, 0x10u, 0x19u, 0xe7u, 0x2eu, 0x60u, 0x0fu, 0xc9u, 0x0au, 0xe1u, 0x86u, 0x02u, 0xaau, 0xc7u, 0x9cu,
  /*     (2^75 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x7du, 0xdfu, 0xbau, 0xa5u, 0x30u, 0x42u, 0x21u, 0xfcu, 0x33u, 0x50u, 0xe8u, 0x78u, 0x22u, 0x92u, 0xffu, 0x62u, 0x7eu, 0xc1u, 0x30u, 0x50u, 0x71u, 0x1fu, 0xceu, 0x8du, 0xf0u, 0x6du, 0x61u, 0x1du, 0x68u, 0x65u, 0xb8u, 0xd4u, 0x02u, 0x1du, 0x49u, 0x5du, 0xbau, 0x4du, 0xe4u, 0x4du, 0x41u, 0x02u, 0xe4u, 0xe3u, 0x09u, 0xb2u, 0xabu, 0x6fu, 0x4du, 0x42u, 0xadu, 0xaau, 0xc5u, 0xecu, 0x6du, 0x9cu,
  /*     (2^75 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x84u, 0xb4u, 0x25u, 0xe8u, 0x77u, 0xd5u, 0x72u, 0x90u, 0xd6u, 0x97u, 0x56u, 0xdeu, 0xd1u, 0x42u, 0x49u, 0x43u, 0x57u, 0xd7u, 0xbbu, 0x8bu, 0x2cu, 0xe1u, 0xb4u, 0x90u, 0xabu, 0xf3u, 0x8cu, 0x1fu, 0x1au, 0x97u, 0x11u, 0xdeu, 0xfdu, 0xe3u, 0x23u, 0xabu, 0xa9u, 0x21u, 0x64u, 0x5au, 0x3bu, 0xa7u, 0x2fu, 0x33u, 0x0au, 0x7eu, 0x07u, 0x76u, 0x16u, 0x44u, 0xffu, 0xe5u, 0x7eu, 0x92u, 0xd0u, 0x9du,
  /*     (2^150 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x9du, 0x5cu, 0x98u, 0xa9u, 0x42u, 0xcfu, 0xb8u, 0x3cu, 0x41u, 0x6cu, 0x64u, 0x5au, 0xc0u, 0x63u, 0x2du, 0x43u, 0xd3u, 0xb7u, 0xc7u, 0x33u, 0xc6u, 0xe7u, 0x1du, 0x41u, 0x00u, 0x67u, 0xbfu, 0x54u, 0x1eu, 0xebu, 0x3fu, 0x8cu, 0xb7u, 0x1fu, 0xd5u, 0xddu, 0xc3u, 0xf3u, 0x48u, 0xa1u, 0x7eu, 0x81u, 0x8fu, 0xe0u, 0x8du, 0x72u, 0x23u, 0xb3u, 0xdfu, 0xddu, 0x55u, 0xf2u, 0x24u, 0xccu, 0x79u, 0xe3u,
  /*     (2^150 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0xf5u, 0xb8u, 0xcau, 0x58u, 0x85u, 0xa6u, 0xa6u, 0xebu, 0xd9u, 0x28u, 0x9cu, 0x74u, 0xfau, 0x2au, 0x53u, 0x1fu, 0xd7u, 0x9au, 0x88u, 0x5eu, 0x15u, 0xd9u, 0x6eu, 0xc3u, 0x8fu, 0x63u, 0x9cu, 0xf3u, 0xfbu, 0x20u, 0x0cu, 0xe2u, 0x4cu, 0x5cu, 0xe6u, 0xa1u, 0xd9u, 0xfau, 0xd8u, 0xe5u, 0x63u, 0x1fu, 0xa0u, 0x04u, 0x0bu, 0x0fu, 0xd1u, 0xeeu, 0xdfu, 0xffu, 0xb5u, 0x17u, 0x96u, 0x7au, 0xfdu, 0xfcu,
  /*     (2^150 + 2^75 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x34u, 0x7bu, 0xbcu, 0x79u, 0x1cu, 0xf6u, 0x1bu, 0xdfu, 0x7fu, 0x96u, 0xb5u, 0x5fu, 0x7eu, 0xabu, 0x4au, 0x0au, 0xa0u, 0x98u, 0xbau, 0xfbu, 0xdfu, 0x89u, 0x19u, 0x33u, 0xf5u, 0x45u, 0xe4u, 0xddu, 0xe0u, 0x57u, 0xe1u, 0xcau, 0xecu, 0x54u, 0x6eu, 0xd2u, 0x2du, 0x74u, 0xc2u, 0x3eu, 0x1fu, 0x2au, 0x61u, 0x4fu, 0x38u, 0x6du, 0x8cu, 0x37u, 0x19u, 0x39u, 0xa2u, 0x3eu, 0x12u, 0x38u, 0x73u, 0x43u,
  /*     (2^150 + 2^75 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x99u, 0x12u, 0x11u, 0xc0u, 0xf8u, 0x74u, 0xb0u, 0x93u, 0xb7u, 0xa8u, 0xe3u, 0xceu, 0x9du, 0x60u, 0xb0u, 0xedu, 0xd9u, 0xbcu, 0x5eu, 0x28u, 0xdcu, 0xb0u, 0xb0u, 0xb8u, 0x0cu, 0xe9u, 0xeeu, 0xd8u, 0xb6u, 0xd0u, 0x53u, 0x98u, 0x1au, 0x4du, 0x50u, 0x75u, 0xe7u, 0xf0u, 0x7du, 0x12u, 0x44u, 0x79u, 0x53u, 0x26u, 0x81u, 0x52u, 0x5au, 0x94u, 0x9au, 0x00u, 0xd6u, 0xd4u, 0x53u, 0x89u, 0x2bu, 0xbdu,
  /*     correction point D = - ((2^75 - 1) * G) in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0xafu, 0x18u, 0x1au, 0xe7u, 0x7cu, 0xc3u, 0xe9u, 0x18u, 0x71u, 0x5bu, 0x80u, 0x6eu, 0x41u, 0x32u, 0x20u, 0x05u, 0xd7u, 0xfau, 0x89u, 0x1du, 0xbcu, 0xc7u, 0xa3u, 0x56u, 0x67u, 0x32u, 0xb0u, 0xdfu, 0x24u, 0x9au, 0x58u, 0xfeu, 0x10u, 0xa2u, 0x0du, 0x6bu, 0x7fu, 0xa9u, 0xc4u, 0xd7u, 0xbau, 0x4cu, 0x3eu, 0x36u, 0x66u, 0x22u, 0xfau, 0x0du, 0xedu, 0xf1u, 0x46u, 0x69u, 0xd5u, 0xc2u, 0x44u, 0xedu,
};

# elif (actBN_BYTES_PER_DIGIT == 4)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1Domain[203] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0xc8u,
  /*   version */
  0x02u, 0x01u, 0x01u,
  /*   SEQUENCE */
  0x30u, 0x28u,
  /*     prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*     p   (field prime) */
  0x02u, 0x1du, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*   SEQUENCE */
  0x30u, 0x3cu,
  /*     a   (coefficient a of the curve equation) */
  0x04u, 0x1cu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu,
  /*     b   (coefficient b of the curve equation) */
  0x04u, 0x1cu, 0xb4u, 0x05u, 0x0au, 0x85u, 0x0cu, 0x04u, 0xb3u, 0xabu, 0xf5u, 0x41u, 0x32u, 0x56u, 0x50u, 0x44u, 0xb0u, 0xb7u, 0xd7u, 0xbfu, 0xd8u, 0xbau, 0x27u, 0x0bu, 0x39u, 0x43u, 0x23u, 0x55u, 0xffu, 0xb4u,
  /*   G   (basepoint of the curve) */
  0x04u, 0x39u, 0x04u, 0xb7u, 0x0eu, 0x0cu, 0xbdu, 0x6bu, 0xb4u, 0xbfu, 0x7fu, 0x32u, 0x13u, 0x90u, 0xb9u, 0x4au, 0x03u, 0xc1u, 0xd3u, 0x56u, 0xc2u, 0x11u, 0x22u, 0x34u, 0x32u, 0x80u, 0xd6u, 0x11u, 0x5cu, 0x1du, 0x21u, 0xbdu, 0x37u, 0x63u, 0x88u, 0xb5u, 0xf7u, 0x23u, 0xfbu, 0x4cu, 0x22u, 0xdfu, 0xe6u, 0xcdu, 0x43u, 0x75u, 0xa0u, 0x5au, 0x07u, 0x47u, 0x64u, 0x44u, 0xd5u, 0x81u, 0x99u, 0x85u, 0x00u, 0x7eu, 0x34u,
  /*   n   (order of G) */
  0x02u, 0x1du, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0x16u, 0xa2u, 0xe0u, 0xb8u, 0xf0u, 0x3eu, 0x13u, 0xddu, 0x29u, 0x45u, 0x5cu, 0x5cu, 0x2au, 0x3du,
  /*   h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1DomainExt[201] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x81u, 0xc6u,
  /*   SEQUENCE */
  0x30u, 0x81u, 0x9du,
  /*     p_RR  (R^2 in prime field) */
  0x04u, 0x1cu, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*     p_bar   (low digit of -(p^-1)) */
  0x04u, 0x04u, 0xffu, 0xffu, 0xffu, 0xffu,
  /*     SEQUENCE */
  0x30u, 0x3cu,
  /*       a_R   (a in Montgomery representation) */
  0x04u, 0x1cu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u,
  /*       b_R   (b in Montgomery representation) */
  0x04u, 0x1cu, 0x9cu, 0x3fu, 0xa6u, 0x33u, 0x7fu, 0xc0u, 0x2fu, 0x93u, 0x3du, 0xceu, 0xbau, 0x98u, 0xc8u, 0x52u, 0x81u, 0x50u, 0x74u, 0x3bu, 0x1cu, 0xc0u, 0xccu, 0xf0u, 0x13u, 0x10u, 0xe7u, 0x68u, 0xcdu, 0xf7u,
  /*     G_R   (G in Montgomery representation) */
  0x04u, 0x39u, 0x04u, 0x92u, 0xf5u, 0xb5u, 0x16u, 0xa2u, 0x1bu, 0x5eu, 0x60u, 0x6du, 0xd3u, 0xafu, 0x9bu, 0xf9u, 0x6bu, 0xecu, 0x04u, 0xf2u, 0x2fu, 0xe2u, 0x20u, 0x60u, 0x18u, 0xbfu, 0xaau, 0xbcu, 0x90u, 0x52u, 0x27u, 0x10u, 0x0cu, 0x12u, 0x18u, 0x61u, 0x47u, 0x86u, 0xf1u, 0xaeu, 0xa9u, 0xc5u, 0xaeu, 0x03u, 0xdfu, 0xe8u, 0x78u, 0xe8u, 0xc1u, 0x55u, 0x13u, 0x05u, 0x33u, 0x5au, 0x6bu, 0x2eu, 0xdcu, 0xa1u, 0xe6u,
  /*   SEQUENCE */
  0x30u, 0x24u,
  /*     n_RR   (R^2 in order field) */
  0x04u, 0x1cu, 0xd4u, 0xbau, 0xa4u, 0xcfu, 0x18u, 0x22u, 0xbcu, 0x47u, 0xb1u, 0xe9u, 0x79u, 0x61u, 0x6au, 0xd0u, 0x9du, 0x91u, 0x97u, 0xa5u, 0x45u, 0x52u, 0x6bu, 0xdau, 0xaeu, 0x6cu, 0x3au, 0xd0u, 0x12u, 0x89u,
  /*     n_bar   (low digit of -(n^-1)) */
  0x04u, 0x04u, 0x6au, 0x1fu, 0xc2u, 0xebu,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP224R1SpeedUpExt[483] = { /* PRQA S 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u, 0x82u, 0x01u, 0xdfu,
  /*   groups parameter */
  0x04u, 0x01u, 0x03u,
  /*   SEQUENCE */
  0x30u, 0x82u, 0x01u, 0xd8u,
  /*     2 * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x18u, 0xddu, 0x00u, 0xacu, 0xcau, 0xfbu, 0x50u, 0xf5u, 0x10u, 0xc9u, 0x11u, 0xf7u, 0x2au, 0x0fu, 0x16u, 0x89u, 0xbeu, 0x27u, 0xf7u, 0xa3u, 0x56u, 0x50u, 0xdfu, 0x9bu, 0x4cu, 0xa9u, 0xa1u, 0xedu, 0x6au, 0x5du, 0xb1u, 0xa2u, 0x5cu, 0xabu, 0xb8u, 0x80u, 0x0cu, 0x84u, 0xceu, 0xd0u, 0x76u, 0xccu, 0x10u, 0x19u, 0xe7u, 0x2eu, 0x60u, 0x0fu, 0xc9u, 0x0au, 0xe1u, 0x86u, 0x02u, 0xaau, 0xc7u, 0x9cu,
  /*     (2^75 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x7du, 0xdfu, 0xbau, 0xa5u, 0x30u, 0x42u, 0x21u, 0xfcu, 0x33u, 0x50u, 0xe8u, 0x78u, 0x22u, 0x92u, 0xffu, 0x62u, 0x7eu, 0xc1u, 0x30u, 0x50u, 0x71u, 0x1fu, 0xceu, 0x8du, 0xf0u, 0x6du, 0x61u, 0x1du, 0x68u, 0x65u, 0xb8u, 0xd4u, 0x02u, 0x1du, 0x49u, 0x5du, 0xbau, 0x4du, 0xe4u, 0x4du, 0x41u, 0x02u, 0xe4u, 0xe3u, 0x09u, 0xb2u, 0xabu, 0x6fu, 0x4du, 0x42u, 0xadu, 0xaau, 0xc5u, 0xecu, 0x6du, 0x9cu,
  /*     (2^75 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x84u, 0xb4u, 0x25u, 0xe8u, 0x77u, 0xd5u, 0x72u, 0x90u, 0xd6u, 0x97u, 0x56u, 0xdeu, 0xd1u, 0x42u, 0x49u, 0x43u, 0x57u, 0xd7u, 0xbbu, 0x8bu, 0x2cu, 0xe1u, 0xb4u, 0x90u, 0xabu, 0xf3u, 0x8cu, 0x1fu, 0x1au, 0x97u, 0x11u, 0xdeu, 0xfdu, 0xe3u, 0x23u, 0xabu, 0xa9u, 0x21u, 0x64u, 0x5au, 0x3bu, 0xa7u, 0x2fu, 0x33u, 0x0au, 0x7eu, 0x07u, 0x76u, 0x16u, 0x44u, 0xffu, 0xe5u, 0x7eu, 0x92u, 0xd0u, 0x9du,
  /*     (2^150 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x9du, 0x5cu, 0x98u, 0xa9u, 0x42u, 0xcfu, 0xb8u, 0x3cu, 0x41u, 0x6cu, 0x64u, 0x5au, 0xc0u, 0x63u, 0x2du, 0x43u, 0xd3u, 0xb7u, 0xc7u, 0x33u, 0xc6u, 0xe7u, 0x1du, 0x41u, 0x00u, 0x67u, 0xbfu, 0x54u, 0x1eu, 0xebu, 0x3fu, 0x8cu, 0xb7u, 0x1fu, 0xd5u, 0xddu, 0xc3u, 0xf3u, 0x48u, 0xa1u, 0x7eu, 0x81u, 0x8fu, 0xe0u, 0x8du, 0x72u, 0x23u, 0xb3u, 0xdfu, 0xddu, 0x55u, 0xf2u, 0x24u, 0xccu, 0x79u, 0xe3u,
  /*     (2^150 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0xf5u, 0xb8u, 0xcau, 0x58u, 0x85u, 0xa6u, 0xa6u, 0xebu, 0xd9u, 0x28u, 0x9cu, 0x74u, 0xfau, 0x2au, 0x53u, 0x1fu, 0xd7u, 0x9au, 0x88u, 0x5eu, 0x15u, 0xd9u, 0x6eu, 0xc3u, 0x8fu, 0x63u, 0x9cu, 0xf3u, 0xfbu, 0x20u, 0x0cu, 0xe2u, 0x4cu, 0x5cu, 0xe6u, 0xa1u, 0xd9u, 0xfau, 0xd8u, 0xe5u, 0x63u, 0x1fu, 0xa0u, 0x04u, 0x0bu, 0x0fu, 0xd1u, 0xeeu, 0xdfu, 0xffu, 0xb5u, 0x17u, 0x96u, 0x7au, 0xfdu, 0xfcu,
  /*     (2^150 + 2^75 + 1) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x34u, 0x7bu, 0xbcu, 0x79u, 0x1cu, 0xf6u, 0x1bu, 0xdfu, 0x7fu, 0x96u, 0xb5u, 0x5fu, 0x7eu, 0xabu, 0x4au, 0x0au, 0xa0u, 0x98u, 0xbau, 0xfbu, 0xdfu, 0x89u, 0x19u, 0x33u, 0xf5u, 0x45u, 0xe4u, 0xddu, 0xe0u, 0x57u, 0xe1u, 0xcau, 0xecu, 0x54u, 0x6eu, 0xd2u, 0x2du, 0x74u, 0xc2u, 0x3eu, 0x1fu, 0x2au, 0x61u, 0x4fu, 0x38u, 0x6du, 0x8cu, 0x37u, 0x19u, 0x39u, 0xa2u, 0x3eu, 0x12u, 0x38u, 0x73u, 0x43u,
  /*     (2^150 + 2^75 + 2) * G in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0x99u, 0x12u, 0x11u, 0xc0u, 0xf8u, 0x74u, 0xb0u, 0x93u, 0xb7u, 0xa8u, 0xe3u, 0xceu, 0x9du, 0x60u, 0xb0u, 0xedu, 0xd9u, 0xbcu, 0x5eu, 0x28u, 0xdcu, 0xb0u, 0xb0u, 0xb8u, 0x0cu, 0xe9u, 0xeeu, 0xd8u, 0xb6u, 0xd0u, 0x53u, 0x98u, 0x1au, 0x4du, 0x50u, 0x75u, 0xe7u, 0xf0u, 0x7du, 0x12u, 0x44u, 0x79u, 0x53u, 0x26u, 0x81u, 0x52u, 0x5au, 0x94u, 0x9au, 0x00u, 0xd6u, 0xd4u, 0x53u, 0x89u, 0x2bu, 0xbdu,
  /*     correction point D = - ((2^75 - 1) * G) in Montgomery representation */
  0x04u, 0x39u, 0x04u, 0xafu, 0x18u, 0x1au, 0xe7u, 0x7cu, 0xc3u, 0xe9u, 0x18u, 0x71u, 0x5bu, 0x80u, 0x6eu, 0x41u, 0x32u, 0x20u, 0x05u, 0xd7u, 0xfau, 0x89u, 0x1du, 0xbcu, 0xc7u, 0xa3u, 0x56u, 0x67u, 0x32u, 0xb0u, 0xdfu, 0x24u, 0x9au, 0x58u, 0xfeu, 0x10u, 0xa2u, 0x0du, 0x6bu, 0x7fu, 0xa9u, 0xc4u, 0xd7u, 0xbau, 0x4cu, 0x3eu, 0x36u, 0x66u, 0x22u, 0xfau, 0x0du, 0xedu, 0xf1u, 0x46u, 0x69u, 0xd5u, 0xc2u, 0x44u, 0xedu,
};
# else /* actBN_BYTES_PER_DIGIT */
#  error "Value of actBN_BYTES_PER_DIGIT is not supported"
# endif /* actBN_BYTES_PER_DIGIT */
/* NIST_SEC_p224r1 END *********************************************************************************************/

/* NIST_ANSI_SEC_p256r1 START *********************************************************************************************/
/* NISTp256r1 = ANSIp256r1 = SECp256r1 */
/* The curve params in shorthand notation:
 * Name: "NISTp256r1",
 * p:    "0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF",
 * a:    "0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC",
 * b:    "0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B",
 * Gx:   "0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296",
 * Gy:   "0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5",
 * n:    "0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551",
 * h:    "0x1",
 */

# if (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 1)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1Domain[227] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0xe0u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x2cu,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x21u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x44u,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x20u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x20u, 0x5au, 0xc6u, 0x35u, 0xd8u, 0xaau, 0x3au, 0x93u, 0xe7u, 0xb3u, 0xebu, 0xbdu, 0x55u, 0x76u, 0x98u, 0x86u, 0xbcu, 0x65u, 0x1du, 0x06u, 0xb0u, 0xccu, 0x53u, 0xb0u, 0xf6u, 0x3bu, 0xceu, 0x3cu, 0x3eu, 0x27u, 0xd2u, 0x60u, 0x4bu,
  /*    G   (basepoint of the curve) */
  0x04u, 0x41u, 0x04u, 0x6bu, 0x17u, 0xd1u, 0xf2u, 0xe1u, 0x2cu, 0x42u, 0x47u, 0xf8u, 0xbcu, 0xe6u, 0xe5u, 0x63u, 0xa4u, 0x40u, 0xf2u, 0x77u, 0x03u, 0x7du, 0x81u, 0x2du, 0xebu, 0x33u, 0xa0u, 0xf4u, 0xa1u, 0x39u, 0x45u, 0xd8u, 0x98u, 0xc2u, 0x96u, 0x4fu, 0xe3u, 0x42u, 0xe2u, 0xfeu, 0x1au, 0x7fu, 0x9bu, 0x8eu, 0xe7u, 0xebu, 0x4au, 0x7cu, 0x0fu, 0x9eu, 0x16u, 0x2bu, 0xceu, 0x33u, 0x57u, 0x6bu, 0x31u, 0x5eu, 0xceu, 0xcbu, 0xb6u, 0x40u, 0x68u, 0x37u, 0xbfu, 0x51u, 0xf5u,
  /*    n   (order of G) */
  0x02u, 0x21u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xbcu, 0xe6u, 0xfau, 0xadu, 0xa7u, 0x17u, 0x9eu, 0x84u, 0xf3u, 0xb9u, 0xcau, 0xc2u, 0xfcu, 0x63u, 0x25u, 0x51u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1DomainExt[219] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0xd8u,
  /*    SEQUENCE */
  0x30u, 0x81u, 0xaeu,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x20u, 0x00u, 0x00u, 0x00u, 0x04u, 0xffu, 0xffu, 0xffu, 0xfdu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xfbu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x01u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x44u,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x20u, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x20u, 0xdcu, 0x30u, 0x06u, 0x1du, 0x04u, 0x87u, 0x48u, 0x34u, 0xe5u, 0xa2u, 0x20u, 0xabu, 0xf7u, 0x21u, 0x2eu, 0xd6u, 0xacu, 0xf0u, 0x05u, 0xcdu, 0x78u, 0x84u, 0x30u, 0x90u, 0xd8u, 0x9cu, 0xdfu, 0x62u, 0x29u, 0xc4u, 0xbdu, 0xdfu,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x41u, 0x04u, 0x18u, 0x90u, 0x5fu, 0x76u, 0xa5u, 0x37u, 0x55u, 0xc6u, 0x79u, 0xfbu, 0x73u, 0x2bu, 0x77u, 0x62u, 0x25u, 0x10u, 0x75u, 0xbau, 0x95u, 0xfcu, 0x5fu, 0xedu, 0xb6u, 0x01u, 0x79u, 0xe7u, 0x30u, 0xd4u, 0x18u, 0xa9u, 0x14u, 0x3cu, 0x85u, 0x71u, 0xffu, 0x18u, 0x25u, 0x88u, 0x5du, 0x85u, 0xd2u, 0xe8u, 0x86u, 0x88u, 0xddu, 0x21u, 0xf3u, 0x25u, 0x8bu, 0x4au, 0xb8u, 0xe4u, 0xbau, 0x19u, 0xe4u, 0x5cu, 0xddu, 0xf2u, 0x53u, 0x57u, 0xceu, 0x95u, 0x56u, 0x0au,
  /*    SEQUENCE */
  0x30u, 0x25u,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x20u, 0x66u, 0xe1u, 0x2du, 0x94u, 0xf3u, 0xd9u, 0x56u, 0x20u, 0x28u, 0x45u, 0xb2u, 0x39u, 0x2bu, 0x6bu, 0xecu, 0x59u, 0x46u, 0x99u, 0x79u, 0x9cu, 0x49u, 0xbdu, 0x6fu, 0xa6u, 0x83u, 0x24u, 0x4cu, 0x95u, 0xbeu, 0x79u, 0xeeu, 0xa2u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x01u, 0x4fu,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1SpeedUpExt[547] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x02u, 0x1fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x02u, 0x18u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xf6u, 0xbbu, 0x32u, 0xe4u, 0x3du, 0xcfu, 0x3au, 0x3bu, 0x73u, 0x22u, 0x05u, 0x03u, 0x8du, 0x14u, 0x90u, 0xd9u, 0xaau, 0x6au, 0xe3u, 0xc1u, 0xa4u, 0x33u, 0x82u, 0x7du, 0x85u, 0x00u, 0x46u, 0xd4u, 0x10u, 0xddu, 0xd6u, 0x4du, 0x78u, 0xc5u, 0x77u, 0x51u, 0x0au, 0x5bu, 0x8au, 0x3bu, 0x19u, 0xa8u, 0xfbu, 0x0eu, 0x92u, 0x04u, 0x2du, 0xbeu, 0x15u, 0x2cu, 0xd7u, 0xcbu, 0xebu, 0x23u, 0x6fu, 0xf8u, 0x2fu, 0x36u, 0x48u, 0xd3u, 0x61u, 0xbeu, 0xe1u, 0xa5u,
  /*      (2^86 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xdau, 0x59u, 0xadu, 0x0du, 0xc7u, 0x0du, 0xedu, 0xbcu, 0x33u, 0x6bu, 0xccu, 0x89u, 0x6fu, 0x1fu, 0xcau, 0x13u, 0x1fu, 0x08u, 0x80u, 0xb0u, 0xe1u, 0xf4u, 0xe3u, 0x02u, 0x46u, 0x15u, 0xd9u, 0x12u, 0xc1u, 0xd8u, 0x5fu, 0x12u, 0x2au, 0xefu, 0xd9u, 0x5au, 0xddu, 0xc8u, 0x4fu, 0x79u, 0xa3u, 0xb1u, 0xc2u, 0xf2u, 0x60u, 0x32u, 0x1bu, 0xbbu, 0xbau, 0xedu, 0x81u, 0xcdu, 0xf4u, 0x99u, 0x0cu, 0xfdu, 0x38u, 0x97u, 0xefu, 0xaeu, 0xb0u, 0xf6u, 0x2eu, 0xceu,
  /*      (2^86 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x15u, 0xfdu, 0x84u, 0x55u, 0x0fu, 0x1cu, 0x86u, 0x84u, 0x57u, 0x5fu, 0xccu, 0x49u, 0x01u, 0x57u, 0xf2u, 0xadu, 0x6cu, 0x12u, 0xfau, 0xa9u, 0xfau, 0xf7u, 0x90u, 0xe8u, 0x63u, 0x36u, 0xffu, 0x57u, 0xbau, 0xf5u, 0x98u, 0x07u, 0x70u, 0xaau, 0x92u, 0xc6u, 0xdau, 0x2bu, 0x23u, 0x7cu, 0xd0u, 0xb6u, 0x16u, 0xcau, 0x6fu, 0x5eu, 0x49u, 0x06u, 0xd4u, 0x73u, 0xffu, 0x4eu, 0x67u, 0x6cu, 0x6cu, 0x11u, 0x94u, 0x4fu, 0x97u, 0x01u, 0xe2u, 0x2cu, 0xd1u, 0x70u,
  /*      (2^172 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x73u, 0xa6u, 0x37u, 0x95u, 0x2fu, 0x83u, 0x7fu, 0x32u, 0x36u, 0x06u, 0x82u, 0xc0u, 0xe4u, 0x0eu, 0x81u, 0x25u, 0xecu, 0xfdu, 0xb3u, 0xa2u, 0x98u, 0x9au, 0x01u, 0x82u, 0x21u, 0xe0u, 0x7fu, 0x9au, 0xbcu, 0x0au, 0x70u, 0xc0u, 0xb7u, 0x1eu, 0xf4u, 0xefu, 0x34u, 0xe2u, 0x2au, 0xb1u, 0xf9u, 0x35u, 0x21u, 0x23u, 0xafu, 0x3du, 0x5du, 0x7eu, 0xefu, 0xb9u, 0x7fu, 0xecu, 0xebu, 0xf4u, 0xc7u, 0xa5u, 0xf4u, 0xebu, 0x8cu, 0xefu, 0x9cu, 0x0du, 0x32u, 0x6bu,
  /*      (2^172 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x04u, 0x51u, 0x20u, 0x9du, 0x10u, 0x44u, 0xf3u, 0xfeu, 0x9bu, 0x45u, 0x74u, 0xb0u, 0x53u, 0x96u, 0x9bu, 0xccu, 0x6fu, 0xb2u, 0x38u, 0xc2u, 0xd5u, 0xe1u, 0xe9u, 0x0eu, 0x60u, 0x2du, 0x9bu, 0x54u, 0x9du, 0x20u, 0xb7u, 0x33u, 0x8bu, 0x61u, 0x9bu, 0xe0u, 0x6cu, 0xb0u, 0xf9u, 0x64u, 0x96u, 0xa4u, 0x69u, 0xf4u, 0x99u, 0xe2u, 0x5fu, 0xfeu, 0x52u, 0x2cu, 0xb3u, 0x5cu, 0x96u, 0x7bu, 0x2bu, 0x08u, 0x7eu, 0x95u, 0x17u, 0xbbu, 0x66u, 0xddu, 0x6bu, 0xcfu,
  /*      (2^172 + 2^86 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x19u, 0x29u, 0xcfu, 0x60u, 0x6du, 0x8eu, 0x17u, 0x6fu, 0x2eu, 0xd8u, 0x08u, 0x5au, 0x69u, 0x55u, 0xc2u, 0x90u, 0x00u, 0x0fu, 0xc8u, 0xd4u, 0x84u, 0x1bu, 0xe9u, 0xedu, 0x8fu, 0x2eu, 0xacu, 0xfeu, 0x49u, 0x38u, 0x89u, 0x95u, 0x68u, 0xfeu, 0x61u, 0x07u, 0x8fu, 0x61u, 0x83u, 0x2bu, 0x13u, 0xa8u, 0x1bu, 0x95u, 0xb2u, 0x6cu, 0x6eu, 0x05u, 0x58u, 0xd7u, 0x67u, 0xadu, 0x6cu, 0xb6u, 0x26u, 0xcdu, 0x2eu, 0xfdu, 0x26u, 0xa5u, 0xfdu, 0x1au, 0x09u, 0xdbu,
  /*      (2^172 + 2^86 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xa2u, 0x13u, 0xc8u, 0x07u, 0xfdu, 0x95u, 0x8bu, 0xe4u, 0xbcu, 0x98u, 0x2cu, 0x36u, 0xe9u, 0x4du, 0xd3u, 0xc1u, 0xaeu, 0x8bu, 0x32u, 0x58u, 0x92u, 0x91u, 0x14u, 0xc8u, 0xe4u, 0x5au, 0x10u, 0xbdu, 0xc1u, 0xe0u, 0x67u, 0x8bu, 0xeau, 0x8du, 0x82u, 0x90u, 0xbau, 0xabu, 0x01u, 0x1bu, 0x40u, 0xdfu, 0x78u, 0xe0u, 0x60u, 0xf5u, 0xa0u, 0x6bu, 0x9eu, 0x99u, 0xe5u, 0x43u, 0x5eu, 0xdeu, 0x80u, 0xaeu, 0xc2u, 0x68u, 0x3du, 0xffu, 0xdau, 0xa2u, 0xccu, 0xa7u,
  /*      correction point D = - ((2^86 - 1) * G) in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x7au, 0x22u, 0xebu, 0xe8u, 0x23u, 0x5bu, 0xdeu, 0x3bu, 0x6du, 0xfeu, 0x83u, 0xfdu, 0x1bu, 0x62u, 0xe3u, 0xcdu, 0x01u, 0x94u, 0x9au, 0x18u, 0xbau, 0x87u, 0x5fu, 0x3cu, 0x0au, 0x36u, 0xc1u, 0xc7u, 0xbfu, 0x34u, 0x15u, 0x09u, 0x23u, 0xc3u, 0xa9u, 0xc1u, 0x49u, 0x0du, 0x76u, 0xe8u, 0x0au, 0x8eu, 0x84u, 0x2au, 0x66u, 0xa6u, 0x30u, 0x19u, 0x0fu, 0x48u, 0x18u, 0xb6u, 0x72u, 0xcau, 0xfbu, 0x8au, 0x69u, 0x7du, 0x55u, 0xe5u, 0x85u, 0x60u, 0x37u, 0x65u,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 2)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1Domain[227] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0xe0u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x2cu,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x21u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x44u,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x20u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x20u, 0x5au, 0xc6u, 0x35u, 0xd8u, 0xaau, 0x3au, 0x93u, 0xe7u, 0xb3u, 0xebu, 0xbdu, 0x55u, 0x76u, 0x98u, 0x86u, 0xbcu, 0x65u, 0x1du, 0x06u, 0xb0u, 0xccu, 0x53u, 0xb0u, 0xf6u, 0x3bu, 0xceu, 0x3cu, 0x3eu, 0x27u, 0xd2u, 0x60u, 0x4bu,
  /*    G   (basepoint of the curve) */
  0x04u, 0x41u, 0x04u, 0x6bu, 0x17u, 0xd1u, 0xf2u, 0xe1u, 0x2cu, 0x42u, 0x47u, 0xf8u, 0xbcu, 0xe6u, 0xe5u, 0x63u, 0xa4u, 0x40u, 0xf2u, 0x77u, 0x03u, 0x7du, 0x81u, 0x2du, 0xebu, 0x33u, 0xa0u, 0xf4u, 0xa1u, 0x39u, 0x45u, 0xd8u, 0x98u, 0xc2u, 0x96u, 0x4fu, 0xe3u, 0x42u, 0xe2u, 0xfeu, 0x1au, 0x7fu, 0x9bu, 0x8eu, 0xe7u, 0xebu, 0x4au, 0x7cu, 0x0fu, 0x9eu, 0x16u, 0x2bu, 0xceu, 0x33u, 0x57u, 0x6bu, 0x31u, 0x5eu, 0xceu, 0xcbu, 0xb6u, 0x40u, 0x68u, 0x37u, 0xbfu, 0x51u, 0xf5u,
  /*    n   (order of G) */
  0x02u, 0x21u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xbcu, 0xe6u, 0xfau, 0xadu, 0xa7u, 0x17u, 0x9eu, 0x84u, 0xf3u, 0xb9u, 0xcau, 0xc2u, 0xfcu, 0x63u, 0x25u, 0x51u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1DomainExt[221] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0xdau,
  /*    SEQUENCE */
  0x30u, 0x81u, 0xafu,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x20u, 0x00u, 0x00u, 0x00u, 0x04u, 0xffu, 0xffu, 0xffu, 0xfdu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xfbu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x02u, 0x00u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x44u,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x20u, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x20u, 0xdcu, 0x30u, 0x06u, 0x1du, 0x04u, 0x87u, 0x48u, 0x34u, 0xe5u, 0xa2u, 0x20u, 0xabu, 0xf7u, 0x21u, 0x2eu, 0xd6u, 0xacu, 0xf0u, 0x05u, 0xcdu, 0x78u, 0x84u, 0x30u, 0x90u, 0xd8u, 0x9cu, 0xdfu, 0x62u, 0x29u, 0xc4u, 0xbdu, 0xdfu,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x41u, 0x04u, 0x18u, 0x90u, 0x5fu, 0x76u, 0xa5u, 0x37u, 0x55u, 0xc6u, 0x79u, 0xfbu, 0x73u, 0x2bu, 0x77u, 0x62u, 0x25u, 0x10u, 0x75u, 0xbau, 0x95u, 0xfcu, 0x5fu, 0xedu, 0xb6u, 0x01u, 0x79u, 0xe7u, 0x30u, 0xd4u, 0x18u, 0xa9u, 0x14u, 0x3cu, 0x85u, 0x71u, 0xffu, 0x18u, 0x25u, 0x88u, 0x5du, 0x85u, 0xd2u, 0xe8u, 0x86u, 0x88u, 0xddu, 0x21u, 0xf3u, 0x25u, 0x8bu, 0x4au, 0xb8u, 0xe4u, 0xbau, 0x19u, 0xe4u, 0x5cu, 0xddu, 0xf2u, 0x53u, 0x57u, 0xceu, 0x95u, 0x56u, 0x0au,
  /*    SEQUENCE */
  0x30u, 0x26u,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x20u, 0x66u, 0xe1u, 0x2du, 0x94u, 0xf3u, 0xd9u, 0x56u, 0x20u, 0x28u, 0x45u, 0xb2u, 0x39u, 0x2bu, 0x6bu, 0xecu, 0x59u, 0x46u, 0x99u, 0x79u, 0x9cu, 0x49u, 0xbdu, 0x6fu, 0xa6u, 0x83u, 0x24u, 0x4cu, 0x95u, 0xbeu, 0x79u, 0xeeu, 0xa2u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x02u, 0xbcu, 0x4fu,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1SpeedUpExt[547] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x02u, 0x1fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x02u, 0x18u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xf6u, 0xbbu, 0x32u, 0xe4u, 0x3du, 0xcfu, 0x3au, 0x3bu, 0x73u, 0x22u, 0x05u, 0x03u, 0x8du, 0x14u, 0x90u, 0xd9u, 0xaau, 0x6au, 0xe3u, 0xc1u, 0xa4u, 0x33u, 0x82u, 0x7du, 0x85u, 0x00u, 0x46u, 0xd4u, 0x10u, 0xddu, 0xd6u, 0x4du, 0x78u, 0xc5u, 0x77u, 0x51u, 0x0au, 0x5bu, 0x8au, 0x3bu, 0x19u, 0xa8u, 0xfbu, 0x0eu, 0x92u, 0x04u, 0x2du, 0xbeu, 0x15u, 0x2cu, 0xd7u, 0xcbu, 0xebu, 0x23u, 0x6fu, 0xf8u, 0x2fu, 0x36u, 0x48u, 0xd3u, 0x61u, 0xbeu, 0xe1u, 0xa5u,
  /*      (2^86 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xdau, 0x59u, 0xadu, 0x0du, 0xc7u, 0x0du, 0xedu, 0xbcu, 0x33u, 0x6bu, 0xccu, 0x89u, 0x6fu, 0x1fu, 0xcau, 0x13u, 0x1fu, 0x08u, 0x80u, 0xb0u, 0xe1u, 0xf4u, 0xe3u, 0x02u, 0x46u, 0x15u, 0xd9u, 0x12u, 0xc1u, 0xd8u, 0x5fu, 0x12u, 0x2au, 0xefu, 0xd9u, 0x5au, 0xddu, 0xc8u, 0x4fu, 0x79u, 0xa3u, 0xb1u, 0xc2u, 0xf2u, 0x60u, 0x32u, 0x1bu, 0xbbu, 0xbau, 0xedu, 0x81u, 0xcdu, 0xf4u, 0x99u, 0x0cu, 0xfdu, 0x38u, 0x97u, 0xefu, 0xaeu, 0xb0u, 0xf6u, 0x2eu, 0xceu,
  /*      (2^86 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x15u, 0xfdu, 0x84u, 0x55u, 0x0fu, 0x1cu, 0x86u, 0x84u, 0x57u, 0x5fu, 0xccu, 0x49u, 0x01u, 0x57u, 0xf2u, 0xadu, 0x6cu, 0x12u, 0xfau, 0xa9u, 0xfau, 0xf7u, 0x90u, 0xe8u, 0x63u, 0x36u, 0xffu, 0x57u, 0xbau, 0xf5u, 0x98u, 0x07u, 0x70u, 0xaau, 0x92u, 0xc6u, 0xdau, 0x2bu, 0x23u, 0x7cu, 0xd0u, 0xb6u, 0x16u, 0xcau, 0x6fu, 0x5eu, 0x49u, 0x06u, 0xd4u, 0x73u, 0xffu, 0x4eu, 0x67u, 0x6cu, 0x6cu, 0x11u, 0x94u, 0x4fu, 0x97u, 0x01u, 0xe2u, 0x2cu, 0xd1u, 0x70u,
  /*      (2^172 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x73u, 0xa6u, 0x37u, 0x95u, 0x2fu, 0x83u, 0x7fu, 0x32u, 0x36u, 0x06u, 0x82u, 0xc0u, 0xe4u, 0x0eu, 0x81u, 0x25u, 0xecu, 0xfdu, 0xb3u, 0xa2u, 0x98u, 0x9au, 0x01u, 0x82u, 0x21u, 0xe0u, 0x7fu, 0x9au, 0xbcu, 0x0au, 0x70u, 0xc0u, 0xb7u, 0x1eu, 0xf4u, 0xefu, 0x34u, 0xe2u, 0x2au, 0xb1u, 0xf9u, 0x35u, 0x21u, 0x23u, 0xafu, 0x3du, 0x5du, 0x7eu, 0xefu, 0xb9u, 0x7fu, 0xecu, 0xebu, 0xf4u, 0xc7u, 0xa5u, 0xf4u, 0xebu, 0x8cu, 0xefu, 0x9cu, 0x0du, 0x32u, 0x6bu,
  /*      (2^172 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x04u, 0x51u, 0x20u, 0x9du, 0x10u, 0x44u, 0xf3u, 0xfeu, 0x9bu, 0x45u, 0x74u, 0xb0u, 0x53u, 0x96u, 0x9bu, 0xccu, 0x6fu, 0xb2u, 0x38u, 0xc2u, 0xd5u, 0xe1u, 0xe9u, 0x0eu, 0x60u, 0x2du, 0x9bu, 0x54u, 0x9du, 0x20u, 0xb7u, 0x33u, 0x8bu, 0x61u, 0x9bu, 0xe0u, 0x6cu, 0xb0u, 0xf9u, 0x64u, 0x96u, 0xa4u, 0x69u, 0xf4u, 0x99u, 0xe2u, 0x5fu, 0xfeu, 0x52u, 0x2cu, 0xb3u, 0x5cu, 0x96u, 0x7bu, 0x2bu, 0x08u, 0x7eu, 0x95u, 0x17u, 0xbbu, 0x66u, 0xddu, 0x6bu, 0xcfu,
  /*      (2^172 + 2^86 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x19u, 0x29u, 0xcfu, 0x60u, 0x6du, 0x8eu, 0x17u, 0x6fu, 0x2eu, 0xd8u, 0x08u, 0x5au, 0x69u, 0x55u, 0xc2u, 0x90u, 0x00u, 0x0fu, 0xc8u, 0xd4u, 0x84u, 0x1bu, 0xe9u, 0xedu, 0x8fu, 0x2eu, 0xacu, 0xfeu, 0x49u, 0x38u, 0x89u, 0x95u, 0x68u, 0xfeu, 0x61u, 0x07u, 0x8fu, 0x61u, 0x83u, 0x2bu, 0x13u, 0xa8u, 0x1bu, 0x95u, 0xb2u, 0x6cu, 0x6eu, 0x05u, 0x58u, 0xd7u, 0x67u, 0xadu, 0x6cu, 0xb6u, 0x26u, 0xcdu, 0x2eu, 0xfdu, 0x26u, 0xa5u, 0xfdu, 0x1au, 0x09u, 0xdbu,
  /*      (2^172 + 2^86 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xa2u, 0x13u, 0xc8u, 0x07u, 0xfdu, 0x95u, 0x8bu, 0xe4u, 0xbcu, 0x98u, 0x2cu, 0x36u, 0xe9u, 0x4du, 0xd3u, 0xc1u, 0xaeu, 0x8bu, 0x32u, 0x58u, 0x92u, 0x91u, 0x14u, 0xc8u, 0xe4u, 0x5au, 0x10u, 0xbdu, 0xc1u, 0xe0u, 0x67u, 0x8bu, 0xeau, 0x8du, 0x82u, 0x90u, 0xbau, 0xabu, 0x01u, 0x1bu, 0x40u, 0xdfu, 0x78u, 0xe0u, 0x60u, 0xf5u, 0xa0u, 0x6bu, 0x9eu, 0x99u, 0xe5u, 0x43u, 0x5eu, 0xdeu, 0x80u, 0xaeu, 0xc2u, 0x68u, 0x3du, 0xffu, 0xdau, 0xa2u, 0xccu, 0xa7u,
  /*      correction point D = - ((2^86 - 1) * G) in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x7au, 0x22u, 0xebu, 0xe8u, 0x23u, 0x5bu, 0xdeu, 0x3bu, 0x6du, 0xfeu, 0x83u, 0xfdu, 0x1bu, 0x62u, 0xe3u, 0xcdu, 0x01u, 0x94u, 0x9au, 0x18u, 0xbau, 0x87u, 0x5fu, 0x3cu, 0x0au, 0x36u, 0xc1u, 0xc7u, 0xbfu, 0x34u, 0x15u, 0x09u, 0x23u, 0xc3u, 0xa9u, 0xc1u, 0x49u, 0x0du, 0x76u, 0xe8u, 0x0au, 0x8eu, 0x84u, 0x2au, 0x66u, 0xa6u, 0x30u, 0x19u, 0x0fu, 0x48u, 0x18u, 0xb6u, 0x72u, 0xcau, 0xfbu, 0x8au, 0x69u, 0x7du, 0x55u, 0xe5u, 0x85u, 0x60u, 0x37u, 0x65u,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 4)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1Domain[227] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0xe0u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x2cu,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x21u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x44u,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x20u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x20u, 0x5au, 0xc6u, 0x35u, 0xd8u, 0xaau, 0x3au, 0x93u, 0xe7u, 0xb3u, 0xebu, 0xbdu, 0x55u, 0x76u, 0x98u, 0x86u, 0xbcu, 0x65u, 0x1du, 0x06u, 0xb0u, 0xccu, 0x53u, 0xb0u, 0xf6u, 0x3bu, 0xceu, 0x3cu, 0x3eu, 0x27u, 0xd2u, 0x60u, 0x4bu,
  /*    G   (basepoint of the curve) */
  0x04u, 0x41u, 0x04u, 0x6bu, 0x17u, 0xd1u, 0xf2u, 0xe1u, 0x2cu, 0x42u, 0x47u, 0xf8u, 0xbcu, 0xe6u, 0xe5u, 0x63u, 0xa4u, 0x40u, 0xf2u, 0x77u, 0x03u, 0x7du, 0x81u, 0x2du, 0xebu, 0x33u, 0xa0u, 0xf4u, 0xa1u, 0x39u, 0x45u, 0xd8u, 0x98u, 0xc2u, 0x96u, 0x4fu, 0xe3u, 0x42u, 0xe2u, 0xfeu, 0x1au, 0x7fu, 0x9bu, 0x8eu, 0xe7u, 0xebu, 0x4au, 0x7cu, 0x0fu, 0x9eu, 0x16u, 0x2bu, 0xceu, 0x33u, 0x57u, 0x6bu, 0x31u, 0x5eu, 0xceu, 0xcbu, 0xb6u, 0x40u, 0x68u, 0x37u, 0xbfu, 0x51u, 0xf5u,
  /*    n   (order of G) */
  0x02u, 0x21u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xbcu, 0xe6u, 0xfau, 0xadu, 0xa7u, 0x17u, 0x9eu, 0x84u, 0xf3u, 0xb9u, 0xcau, 0xc2u, 0xfcu, 0x63u, 0x25u, 0x51u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1DomainExt[225] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x81u, 0xdeu,
  /*    SEQUENCE */
  0x30u, 0x81u, 0xb1u,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x20u, 0x00u, 0x00u, 0x00u, 0x04u, 0xffu, 0xffu, 0xffu, 0xfdu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xfbu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x04u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x44u,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x20u, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x20u, 0xdcu, 0x30u, 0x06u, 0x1du, 0x04u, 0x87u, 0x48u, 0x34u, 0xe5u, 0xa2u, 0x20u, 0xabu, 0xf7u, 0x21u, 0x2eu, 0xd6u, 0xacu, 0xf0u, 0x05u, 0xcdu, 0x78u, 0x84u, 0x30u, 0x90u, 0xd8u, 0x9cu, 0xdfu, 0x62u, 0x29u, 0xc4u, 0xbdu, 0xdfu,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x41u, 0x04u, 0x18u, 0x90u, 0x5fu, 0x76u, 0xa5u, 0x37u, 0x55u, 0xc6u, 0x79u, 0xfbu, 0x73u, 0x2bu, 0x77u, 0x62u, 0x25u, 0x10u, 0x75u, 0xbau, 0x95u, 0xfcu, 0x5fu, 0xedu, 0xb6u, 0x01u, 0x79u, 0xe7u, 0x30u, 0xd4u, 0x18u, 0xa9u, 0x14u, 0x3cu, 0x85u, 0x71u, 0xffu, 0x18u, 0x25u, 0x88u, 0x5du, 0x85u, 0xd2u, 0xe8u, 0x86u, 0x88u, 0xddu, 0x21u, 0xf3u, 0x25u, 0x8bu, 0x4au, 0xb8u, 0xe4u, 0xbau, 0x19u, 0xe4u, 0x5cu, 0xddu, 0xf2u, 0x53u, 0x57u, 0xceu, 0x95u, 0x56u, 0x0au,
  /*    SEQUENCE */
  0x30u, 0x28u,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x20u, 0x66u, 0xe1u, 0x2du, 0x94u, 0xf3u, 0xd9u, 0x56u, 0x20u, 0x28u, 0x45u, 0xb2u, 0x39u, 0x2bu, 0x6bu, 0xecu, 0x59u, 0x46u, 0x99u, 0x79u, 0x9cu, 0x49u, 0xbdu, 0x6fu, 0xa6u, 0x83u, 0x24u, 0x4cu, 0x95u, 0xbeu, 0x79u, 0xeeu, 0xa2u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x04u, 0xeeu, 0x00u, 0xbcu, 0x4fu,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistAnsiSecP256R1SpeedUpExt[547] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x02u, 0x1fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x02u, 0x18u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xf6u, 0xbbu, 0x32u, 0xe4u, 0x3du, 0xcfu, 0x3au, 0x3bu, 0x73u, 0x22u, 0x05u, 0x03u, 0x8du, 0x14u, 0x90u, 0xd9u, 0xaau, 0x6au, 0xe3u, 0xc1u, 0xa4u, 0x33u, 0x82u, 0x7du, 0x85u, 0x00u, 0x46u, 0xd4u, 0x10u, 0xddu, 0xd6u, 0x4du, 0x78u, 0xc5u, 0x77u, 0x51u, 0x0au, 0x5bu, 0x8au, 0x3bu, 0x19u, 0xa8u, 0xfbu, 0x0eu, 0x92u, 0x04u, 0x2du, 0xbeu, 0x15u, 0x2cu, 0xd7u, 0xcbu, 0xebu, 0x23u, 0x6fu, 0xf8u, 0x2fu, 0x36u, 0x48u, 0xd3u, 0x61u, 0xbeu, 0xe1u, 0xa5u,
  /*      (2^86 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xdau, 0x59u, 0xadu, 0x0du, 0xc7u, 0x0du, 0xedu, 0xbcu, 0x33u, 0x6bu, 0xccu, 0x89u, 0x6fu, 0x1fu, 0xcau, 0x13u, 0x1fu, 0x08u, 0x80u, 0xb0u, 0xe1u, 0xf4u, 0xe3u, 0x02u, 0x46u, 0x15u, 0xd9u, 0x12u, 0xc1u, 0xd8u, 0x5fu, 0x12u, 0x2au, 0xefu, 0xd9u, 0x5au, 0xddu, 0xc8u, 0x4fu, 0x79u, 0xa3u, 0xb1u, 0xc2u, 0xf2u, 0x60u, 0x32u, 0x1bu, 0xbbu, 0xbau, 0xedu, 0x81u, 0xcdu, 0xf4u, 0x99u, 0x0cu, 0xfdu, 0x38u, 0x97u, 0xefu, 0xaeu, 0xb0u, 0xf6u, 0x2eu, 0xceu,
  /*      (2^86 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x15u, 0xfdu, 0x84u, 0x55u, 0x0fu, 0x1cu, 0x86u, 0x84u, 0x57u, 0x5fu, 0xccu, 0x49u, 0x01u, 0x57u, 0xf2u, 0xadu, 0x6cu, 0x12u, 0xfau, 0xa9u, 0xfau, 0xf7u, 0x90u, 0xe8u, 0x63u, 0x36u, 0xffu, 0x57u, 0xbau, 0xf5u, 0x98u, 0x07u, 0x70u, 0xaau, 0x92u, 0xc6u, 0xdau, 0x2bu, 0x23u, 0x7cu, 0xd0u, 0xb6u, 0x16u, 0xcau, 0x6fu, 0x5eu, 0x49u, 0x06u, 0xd4u, 0x73u, 0xffu, 0x4eu, 0x67u, 0x6cu, 0x6cu, 0x11u, 0x94u, 0x4fu, 0x97u, 0x01u, 0xe2u, 0x2cu, 0xd1u, 0x70u,
  /*      (2^172 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x73u, 0xa6u, 0x37u, 0x95u, 0x2fu, 0x83u, 0x7fu, 0x32u, 0x36u, 0x06u, 0x82u, 0xc0u, 0xe4u, 0x0eu, 0x81u, 0x25u, 0xecu, 0xfdu, 0xb3u, 0xa2u, 0x98u, 0x9au, 0x01u, 0x82u, 0x21u, 0xe0u, 0x7fu, 0x9au, 0xbcu, 0x0au, 0x70u, 0xc0u, 0xb7u, 0x1eu, 0xf4u, 0xefu, 0x34u, 0xe2u, 0x2au, 0xb1u, 0xf9u, 0x35u, 0x21u, 0x23u, 0xafu, 0x3du, 0x5du, 0x7eu, 0xefu, 0xb9u, 0x7fu, 0xecu, 0xebu, 0xf4u, 0xc7u, 0xa5u, 0xf4u, 0xebu, 0x8cu, 0xefu, 0x9cu, 0x0du, 0x32u, 0x6bu,
  /*      (2^172 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x04u, 0x51u, 0x20u, 0x9du, 0x10u, 0x44u, 0xf3u, 0xfeu, 0x9bu, 0x45u, 0x74u, 0xb0u, 0x53u, 0x96u, 0x9bu, 0xccu, 0x6fu, 0xb2u, 0x38u, 0xc2u, 0xd5u, 0xe1u, 0xe9u, 0x0eu, 0x60u, 0x2du, 0x9bu, 0x54u, 0x9du, 0x20u, 0xb7u, 0x33u, 0x8bu, 0x61u, 0x9bu, 0xe0u, 0x6cu, 0xb0u, 0xf9u, 0x64u, 0x96u, 0xa4u, 0x69u, 0xf4u, 0x99u, 0xe2u, 0x5fu, 0xfeu, 0x52u, 0x2cu, 0xb3u, 0x5cu, 0x96u, 0x7bu, 0x2bu, 0x08u, 0x7eu, 0x95u, 0x17u, 0xbbu, 0x66u, 0xddu, 0x6bu, 0xcfu,
  /*      (2^172 + 2^86 + 1) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x19u, 0x29u, 0xcfu, 0x60u, 0x6du, 0x8eu, 0x17u, 0x6fu, 0x2eu, 0xd8u, 0x08u, 0x5au, 0x69u, 0x55u, 0xc2u, 0x90u, 0x00u, 0x0fu, 0xc8u, 0xd4u, 0x84u, 0x1bu, 0xe9u, 0xedu, 0x8fu, 0x2eu, 0xacu, 0xfeu, 0x49u, 0x38u, 0x89u, 0x95u, 0x68u, 0xfeu, 0x61u, 0x07u, 0x8fu, 0x61u, 0x83u, 0x2bu, 0x13u, 0xa8u, 0x1bu, 0x95u, 0xb2u, 0x6cu, 0x6eu, 0x05u, 0x58u, 0xd7u, 0x67u, 0xadu, 0x6cu, 0xb6u, 0x26u, 0xcdu, 0x2eu, 0xfdu, 0x26u, 0xa5u, 0xfdu, 0x1au, 0x09u, 0xdbu,
  /*      (2^172 + 2^86 + 2) * G in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0xa2u, 0x13u, 0xc8u, 0x07u, 0xfdu, 0x95u, 0x8bu, 0xe4u, 0xbcu, 0x98u, 0x2cu, 0x36u, 0xe9u, 0x4du, 0xd3u, 0xc1u, 0xaeu, 0x8bu, 0x32u, 0x58u, 0x92u, 0x91u, 0x14u, 0xc8u, 0xe4u, 0x5au, 0x10u, 0xbdu, 0xc1u, 0xe0u, 0x67u, 0x8bu, 0xeau, 0x8du, 0x82u, 0x90u, 0xbau, 0xabu, 0x01u, 0x1bu, 0x40u, 0xdfu, 0x78u, 0xe0u, 0x60u, 0xf5u, 0xa0u, 0x6bu, 0x9eu, 0x99u, 0xe5u, 0x43u, 0x5eu, 0xdeu, 0x80u, 0xaeu, 0xc2u, 0x68u, 0x3du, 0xffu, 0xdau, 0xa2u, 0xccu, 0xa7u,
  /*      correction point D = - ((2^86 - 1) * G) in Montgomery representation */
  0x04u, 0x41u, 0x04u, 0x7au, 0x22u, 0xebu, 0xe8u, 0x23u, 0x5bu, 0xdeu, 0x3bu, 0x6du, 0xfeu, 0x83u, 0xfdu, 0x1bu, 0x62u, 0xe3u, 0xcdu, 0x01u, 0x94u, 0x9au, 0x18u, 0xbau, 0x87u, 0x5fu, 0x3cu, 0x0au, 0x36u, 0xc1u, 0xc7u, 0xbfu, 0x34u, 0x15u, 0x09u, 0x23u, 0xc3u, 0xa9u, 0xc1u, 0x49u, 0x0du, 0x76u, 0xe8u, 0x0au, 0x8eu, 0x84u, 0x2au, 0x66u, 0xa6u, 0x30u, 0x19u, 0x0fu, 0x48u, 0x18u, 0xb6u, 0x72u, 0xcau, 0xfbu, 0x8au, 0x69u, 0x7du, 0x55u, 0xe5u, 0x85u, 0x60u, 0x37u, 0x65u,
};
# else /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
#  error "Value of CRYPTO_30_LIBCV_BYTES_PER_DIGIT is not supported"
# endif /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
/* NIST_ANSI_SEC_p256r1 END *********************************************************************************************/

/* NIST_SEC_p384r1 START *********************************************************************************************/
/* NISTp384r1 = SECp384r1 */
/* The curve params in shorthand notation:
 * Name: NISTp384r1
 * p:    0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff
 * a:    0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc
 * b:    0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef
 * Gx:   0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7
 * Gy:   0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f
 * n:    0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973
 * h:    0x1
 */

# if (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 1)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1Domain[324] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x40u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x3cu,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x31u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x64u,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x30u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x30u, 0xb3u, 0x31u, 0x2fu, 0xa7u, 0xe2u, 0x3eu, 0xe7u, 0xe4u, 0x98u, 0x8eu, 0x05u, 0x6bu, 0xe3u, 0xf8u, 0x2du, 0x19u, 0x18u, 0x1du, 0x9cu, 0x6eu, 0xfeu, 0x81u, 0x41u, 0x12u, 0x03u, 0x14u, 0x08u, 0x8fu, 0x50u, 0x13u, 0x87u, 0x5au, 0xc6u, 0x56u, 0x39u, 0x8du, 0x8au, 0x2eu, 0xd1u, 0x9du, 0x2au, 0x85u, 0xc8u, 0xedu, 0xd3u, 0xecu, 0x2au, 0xefu,
  /*    G   (basepoint of the curve) */
  0x04u, 0x61u, 0x04u, 0xaau, 0x87u, 0xcau, 0x22u, 0xbeu, 0x8bu, 0x05u, 0x37u, 0x8eu, 0xb1u, 0xc7u, 0x1eu, 0xf3u, 0x20u, 0xadu, 0x74u, 0x6eu, 0x1du, 0x3bu, 0x62u, 0x8bu, 0xa7u, 0x9bu, 0x98u, 0x59u, 0xf7u, 0x41u, 0xe0u, 0x82u, 0x54u, 0x2au, 0x38u, 0x55u, 0x02u, 0xf2u, 0x5du, 0xbfu, 0x55u, 0x29u, 0x6cu, 0x3au, 0x54u, 0x5eu, 0x38u, 0x72u, 0x76u, 0x0au, 0xb7u, 0x36u, 0x17u, 0xdeu, 0x4au, 0x96u, 0x26u, 0x2cu, 0x6fu, 0x5du, 0x9eu, 0x98u, 0xbfu, 0x92u, 0x92u, 0xdcu, 0x29u, 0xf8u, 0xf4u, 0x1du, 0xbdu, 0x28u, 0x9au, 0x14u, 0x7cu, 0xe9u, 0xdau, 0x31u, 0x13u, 0xb5u, 0xf0u, 0xb8u, 0xc0u, 0x0au, 0x60u, 0xb1u, 0xceu, 0x1du, 0x7eu, 0x81u, 0x9du, 0x7au, 0x43u, 0x1du, 0x7cu, 0x90u, 0xeau, 0x0eu, 0x5fu,
  /*    n   (order of G) */
  0x02u, 0x31u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xc7u, 0x63u, 0x4du, 0x81u, 0xf4u, 0x37u, 0x2du, 0xdfu, 0x58u, 0x1au, 0x0du, 0xb2u, 0x48u, 0xb0u, 0xa7u, 0x7au, 0xecu, 0xecu, 0x19u, 0x6au, 0xccu, 0xc5u, 0x29u, 0x73u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1DomainExt[316] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x38u,
  /*    SEQUENCE */
  0x30u, 0x81u, 0xfeu,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x30u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x01u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x01u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x64u,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x30u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfbu, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x30u, 0xcdu, 0x08u, 0x11u, 0x4bu, 0x60u, 0x4fu, 0xbfu, 0xf9u, 0xb6u, 0x2bu, 0x21u, 0xf4u, 0x1fu, 0x02u, 0x20u, 0x94u, 0xe3u, 0x37u, 0x4bu, 0xeeu, 0x94u, 0x93u, 0x8au, 0xe2u, 0x77u, 0xf2u, 0x20u, 0x9bu, 0x19u, 0x20u, 0x02u, 0x2eu, 0xf7u, 0x29u, 0xadu, 0xd8u, 0x7au, 0x4cu, 0x32u, 0xecu, 0x08u, 0x11u, 0x88u, 0x71u, 0x9du, 0x41u, 0x2du, 0xccu,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x61u, 0x04u, 0x4du, 0x3au, 0xadu, 0xc2u, 0x29u, 0x9eu, 0x15u, 0x13u, 0x81u, 0x2fu, 0xf7u, 0x23u, 0x61u, 0x4eu, 0xdeu, 0x2bu, 0x64u, 0x54u, 0x86u, 0x84u, 0x59u, 0xa3u, 0x0eu, 0xffu, 0x87u, 0x9cu, 0x3au, 0xfcu, 0x54u, 0x1bu, 0x4du, 0x6eu, 0x20u, 0xe3u, 0x78u, 0xe2u, 0xa0u, 0xd6u, 0xceu, 0x38u, 0x3du, 0xd0u, 0x75u, 0x66u, 0x49u, 0xc0u, 0xb5u, 0x28u, 0x2bu, 0x78u, 0xabu, 0xc2u, 0x5au, 0x15u, 0xc5u, 0xe9u, 0xddu, 0x80u, 0x02u, 0x26u, 0x39u, 0x69u, 0xa8u, 0x40u, 0xc6u, 0xc3u, 0x52u, 0x19u, 0x68u, 0xf4u, 0xffu, 0xd9u, 0x8bu, 0xadu, 0xe7u, 0x56u, 0x2eu, 0x83u, 0xb0u, 0x50u, 0xa1u, 0xbfu, 0xa8u, 0xbfu, 0x7bu, 0xb4u, 0xa9u, 0xacu, 0x23u, 0x04u, 0x3du, 0xadu, 0x4bu, 0x03u, 0xa4u, 0xfeu,
  /*    SEQUENCE */
  0x30u, 0x35u,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x30u, 0x0cu, 0x84u, 0xeeu, 0x01u, 0x2bu, 0x39u, 0xbfu, 0x21u, 0x3fu, 0xb0u, 0x5bu, 0x7au, 0x28u, 0x26u, 0x68u, 0x95u, 0xd4u, 0x0du, 0x49u, 0x17u, 0x4au, 0xabu, 0x1cu, 0xc5u, 0xbcu, 0x3eu, 0x48u, 0x3au, 0xfcu, 0xb8u, 0x29u, 0x47u, 0xffu, 0x3du, 0x81u, 0xe5u, 0xdfu, 0x1au, 0xa4u, 0x19u, 0x2du, 0x31u, 0x9bu, 0x24u, 0x19u, 0xb4u, 0x09u, 0xa9u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x01u, 0x45u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1SpeedUpExt[803] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x03u, 0x1fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x03u, 0x18u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xdbu, 0x93u, 0xb7u, 0x76u, 0x42u, 0x74u, 0x60u, 0xc3u, 0x9cu, 0x90u, 0xa4u, 0xfdu, 0x2du, 0xe4u, 0xb5u, 0x06u, 0xdau, 0x82u, 0x14u, 0x95u, 0xf0u, 0x68u, 0x7fu, 0x50u, 0x35u, 0x04u, 0xe6u, 0xf0u, 0xffu, 0x9du, 0x48u, 0xa1u, 0x8eu, 0x6cu, 0x8fu, 0x2eu, 0x02u, 0x2bu, 0x53u, 0xf0u, 0xc8u, 0x22u, 0x9eu, 0x55u, 0x78u, 0x3du, 0xdeu, 0x91u, 0xe3u, 0x49u, 0x47u, 0xf7u, 0x12u, 0x3du, 0xf0u, 0xc2u, 0x07u, 0x0du, 0x43u, 0x09u, 0x00u, 0xb0u, 0xe6u, 0x84u, 0x09u, 0xf1u, 0xfeu, 0x41u, 0x51u, 0x72u, 0xbau, 0xd9u, 0x15u, 0xe4u, 0xf1u, 0x8bu, 0xdcu, 0x58u, 0x82u, 0x58u, 0xe8u, 0xe8u, 0xe4u, 0xa8u, 0xc2u, 0xaau, 0xccu, 0xd8u, 0x42u, 0xeau, 0x84u, 0x63u, 0x31u, 0x40u, 0xbfu, 0xdau,
  /*      (2^128 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xebu, 0x65u, 0x7bu, 0x10u, 0xfdu, 0x71u, 0x1bu, 0xa4u, 0x63u, 0x7eu, 0x33u, 0x02u, 0x42u, 0xedu, 0x76u, 0x26u, 0x39u, 0x24u, 0xe5u, 0x0au, 0x74u, 0x20u, 0x40u, 0x8fu, 0xa1u, 0xe4u, 0x4bu, 0x14u, 0xdcu, 0x26u, 0x1eu, 0xc2u, 0xfeu, 0x4au, 0x36u, 0xe7u, 0xffu, 0x13u, 0x31u, 0x4eu, 0x39u, 0x4fu, 0xb8u, 0x4du, 0xe8u, 0x6eu, 0x3fu, 0x64u, 0xa9u, 0x6fu, 0xd3u, 0xb7u, 0x46u, 0x94u, 0xe1u, 0x5au, 0x5bu, 0xe4u, 0x63u, 0xa5u, 0xbeu, 0x56u, 0xf7u, 0x74u, 0x33u, 0x86u, 0xf1u, 0xc6u, 0x88u, 0x6fu, 0xb3u, 0xdbu, 0xe7u, 0x46u, 0x58u, 0x19u, 0xb0u, 0x56u, 0xd8u, 0x72u, 0x30u, 0xe0u, 0x43u, 0x26u, 0x7fu, 0x1fu, 0x42u, 0xc7u, 0xc1u, 0x6du, 0x01u, 0xc5u, 0x34u, 0x09u, 0x49u, 0xbbu,
  /*      (2^128 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xcbu, 0x0eu, 0xc2u, 0x40u, 0x54u, 0x40u, 0x30u, 0x0eu, 0x87u, 0xa3u, 0x41u, 0xffu, 0x26u, 0x25u, 0xc6u, 0x45u, 0x16u, 0x92u, 0x6bu, 0x63u, 0x5bu, 0xd7u, 0xe9u, 0x20u, 0x67u, 0x78u, 0xc2u, 0xf9u, 0xa0u, 0x18u, 0x43u, 0x09u, 0x53u, 0xceu, 0x5eu, 0x7eu, 0x08u, 0x3cu, 0xd6u, 0x22u, 0x0au, 0x1fu, 0x01u, 0x6du, 0xa7u, 0xa2u, 0x98u, 0x2cu, 0x74u, 0x1au, 0xc8u, 0x5fu, 0x44u, 0x17u, 0x10u, 0x90u, 0x89u, 0x5du, 0x29u, 0xaeu, 0x22u, 0x31u, 0x0au, 0x17u, 0xa0u, 0xe4u, 0xe8u, 0xc6u, 0x2du, 0x55u, 0xd9u, 0x3au, 0xc8u, 0xf3u, 0x60u, 0x28u, 0x4fu, 0x9bu, 0x94u, 0x35u, 0xdeu, 0xcbu, 0x19u, 0xb5u, 0x88u, 0x64u, 0x57u, 0xe4u, 0x58u, 0x68u, 0x21u, 0xd5u, 0xfau, 0x6du, 0xe7u, 0x19u,
  /*      (2^256 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0x27u, 0x1fu, 0x07u, 0x17u, 0x8fu, 0xcbu, 0x87u, 0xf1u, 0x05u, 0xbeu, 0x51u, 0xb7u, 0xbfu, 0x50u, 0x01u, 0x59u, 0xdeu, 0x1du, 0x76u, 0x17u, 0x79u, 0xfdu, 0x9cu, 0x91u, 0xadu, 0xfdu, 0x85u, 0xb0u, 0x3eu, 0xeeu, 0x3du, 0x12u, 0x05u, 0x29u, 0x17u, 0xc3u, 0x19u, 0x0eu, 0xb1u, 0x98u, 0x56u, 0x21u, 0x11u, 0x90u, 0xa3u, 0x53u, 0xe8u, 0x89u, 0x8fu, 0x8eu, 0x6eu, 0x28u, 0x9eu, 0x96u, 0xb1u, 0x5du, 0xb0u, 0xd7u, 0xa7u, 0x36u, 0x56u, 0x49u, 0x97u, 0x6eu, 0x0au, 0x22u, 0xcbu, 0xe1u, 0x06u, 0x3bu, 0x1du, 0x7fu, 0xb2u, 0x56u, 0x47u, 0x92u, 0x8fu, 0x5fu, 0xb8u, 0xc0u, 0xb1u, 0xb7u, 0x24u, 0x6eu, 0xdau, 0x12u, 0xdau, 0x8du, 0x02u, 0x67u, 0x3eu, 0x27u, 0x3au, 0x75u, 0xacu, 0x71u,
  /*      (2^256 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xf2u, 0x4du, 0xd6u, 0xbbu, 0xbfu, 0x42u, 0x7fu, 0x21u, 0xcdu, 0xfdu, 0xfau, 0xb5u, 0xdau, 0xc6u, 0xf6u, 0x43u, 0x3au, 0x95u, 0x5eu, 0xe9u, 0xb5u, 0x18u, 0x78u, 0x08u, 0x07u, 0xa0u, 0xf7u, 0xceu, 0xb2u, 0xa8u, 0x0du, 0xc3u, 0x29u, 0x61u, 0xf5u, 0x2bu, 0x7au, 0x4fu, 0xd5u, 0xe5u, 0x10u, 0xd5u, 0x62u, 0xf2u, 0xa6u, 0x9bu, 0xcbu, 0x2cu, 0x29u, 0x1cu, 0x6au, 0xd9u, 0x08u, 0x25u, 0x5eu, 0xb5u, 0x29u, 0x1eu, 0x34u, 0x6du, 0x78u, 0xc7u, 0x45u, 0x39u, 0x1du, 0x45u, 0x2au, 0x53u, 0xb7u, 0x99u, 0xdeu, 0x3fu, 0x43u, 0x48u, 0x17u, 0xd4u, 0x2bu, 0x0du, 0x78u, 0x68u, 0x45u, 0xe1u, 0xf8u, 0x6eu, 0x60u, 0x3au, 0x03u, 0x33u, 0x56u, 0xcau, 0xe7u, 0x8cu, 0xadu, 0x54u, 0x83u, 0x5bu,
  /*      (2^256 + 2^128 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xd8u, 0x86u, 0x59u, 0x88u, 0x6eu, 0xe9u, 0xa9u, 0x30u, 0x8bu, 0x73u, 0x9au, 0xd5u, 0x7cu, 0x92u, 0x77u, 0xcfu, 0xeau, 0x79u, 0xa5u, 0xf5u, 0xadu, 0x3eu, 0xd3u, 0x4fu, 0x9du, 0x18u, 0x12u, 0x68u, 0x0eu, 0x0du, 0x07u, 0xfeu, 0xb3u, 0x65u, 0x74u, 0xa8u, 0xdcu, 0xa4u, 0x20u, 0xbau, 0x25u, 0x53u, 0x9du, 0xe9u, 0x8eu, 0xceu, 0x21u, 0x8du, 0x89u, 0x76u, 0xb7u, 0x03u, 0x05u, 0xf5u, 0x11u, 0x22u, 0x3eu, 0x1au, 0x96u, 0xb1u, 0x40u, 0xc7u, 0x3au, 0x2du, 0x67u, 0xf8u, 0x64u, 0x1eu, 0x21u, 0x04u, 0x5fu, 0x63u, 0xd3u, 0x12u, 0x8fu, 0x12u, 0x97u, 0xeeu, 0x31u, 0x5eu, 0xe0u, 0x13u, 0x8cu, 0x65u, 0x08u, 0xf3u, 0x52u, 0x4fu, 0xafu, 0x07u, 0xbfu, 0xb6u, 0x21u, 0x59u, 0x1au, 0x3eu,
  /*      (2^256 + 2^128 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0x0du, 0xe7u, 0x0du, 0x3bu, 0x66u, 0xb9u, 0x3au, 0x52u, 0x65u, 0x4cu, 0xdau, 0xdfu, 0x52u, 0xf1u, 0x6bu, 0x74u, 0x88u, 0x86u, 0x03u, 0x4cu, 0x4cu, 0xbeu, 0x5eu, 0x85u, 0x8cu, 0x1du, 0x85u, 0x06u, 0x11u, 0x6cu, 0x4du, 0x0cu, 0xa8u, 0x73u, 0xecu, 0xbfu, 0x64u, 0x10u, 0xc9u, 0xe3u, 0x6cu, 0x2du, 0x76u, 0x2eu, 0xedu, 0xc2u, 0xe9u, 0xfcu, 0xddu, 0x97u, 0x4eu, 0x2bu, 0x20u, 0x21u, 0x36u, 0x30u, 0x0bu, 0xb0u, 0x73u, 0x97u, 0x58u, 0x9bu, 0x48u, 0x03u, 0x47u, 0x00u, 0xb8u, 0x65u, 0xcfu, 0x33u, 0x89u, 0x9fu, 0x1du, 0x05u, 0xa1u, 0xf5u, 0x0fu, 0x57u, 0x8fu, 0x57u, 0xb8u, 0x3cu, 0x56u, 0x9fu, 0x87u, 0x3fu, 0xafu, 0x2au, 0xa1u, 0xdeu, 0x0eu, 0x75u, 0x03u, 0x7au, 0x58u, 0xabu,
  /*      correction point D = - ((2^128 - 1) * G) in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xbbu, 0x3fu, 0x5au, 0x84u, 0x87u, 0xf9u, 0x1au, 0x36u, 0x48u, 0x28u, 0x20u, 0xd6u, 0x7fu, 0x73u, 0x36u, 0xd6u, 0xc4u, 0xeau, 0x85u, 0x36u, 0xe6u, 0x51u, 0xcau, 0xb5u, 0xc6u, 0x06u, 0xd7u, 0x47u, 0x6du, 0x24u, 0x4du, 0xa9u, 0x32u, 0x12u, 0xa5u, 0x0cu, 0x71u, 0x17u, 0x13u, 0xf4u, 0x79u, 0xc0u, 0x00u, 0xdau, 0x6fu, 0xc6u, 0xb7u, 0xeeu, 0xc7u, 0xe7u, 0x30u, 0x8cu, 0x0bu, 0x91u, 0xb3u, 0x09u, 0x6au, 0x2cu, 0x2bu, 0x3au, 0xd4u, 0xf6u, 0x83u, 0xe1u, 0x87u, 0xe5u, 0x0fu, 0x70u, 0xd1u, 0xceu, 0x0fu, 0xbfu, 0xa6u, 0x5au, 0x46u, 0x6eu, 0xb8u, 0xb0u, 0x82u, 0x52u, 0x00u, 0x33u, 0x7fu, 0xcbu, 0x6au, 0xdau, 0xc8u, 0x40u, 0xeau, 0x24u, 0x6cu, 0xfdu, 0xbdu, 0x58u, 0xc5u, 0x4cu,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 2)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1Domain[324] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x40u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x3cu,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x31u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x64u,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x30u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x30u, 0xb3u, 0x31u, 0x2fu, 0xa7u, 0xe2u, 0x3eu, 0xe7u, 0xe4u, 0x98u, 0x8eu, 0x05u, 0x6bu, 0xe3u, 0xf8u, 0x2du, 0x19u, 0x18u, 0x1du, 0x9cu, 0x6eu, 0xfeu, 0x81u, 0x41u, 0x12u, 0x03u, 0x14u, 0x08u, 0x8fu, 0x50u, 0x13u, 0x87u, 0x5au, 0xc6u, 0x56u, 0x39u, 0x8du, 0x8au, 0x2eu, 0xd1u, 0x9du, 0x2au, 0x85u, 0xc8u, 0xedu, 0xd3u, 0xecu, 0x2au, 0xefu,
  /*    G   (basepoint of the curve) */
  0x04u, 0x61u, 0x04u, 0xaau, 0x87u, 0xcau, 0x22u, 0xbeu, 0x8bu, 0x05u, 0x37u, 0x8eu, 0xb1u, 0xc7u, 0x1eu, 0xf3u, 0x20u, 0xadu, 0x74u, 0x6eu, 0x1du, 0x3bu, 0x62u, 0x8bu, 0xa7u, 0x9bu, 0x98u, 0x59u, 0xf7u, 0x41u, 0xe0u, 0x82u, 0x54u, 0x2au, 0x38u, 0x55u, 0x02u, 0xf2u, 0x5du, 0xbfu, 0x55u, 0x29u, 0x6cu, 0x3au, 0x54u, 0x5eu, 0x38u, 0x72u, 0x76u, 0x0au, 0xb7u, 0x36u, 0x17u, 0xdeu, 0x4au, 0x96u, 0x26u, 0x2cu, 0x6fu, 0x5du, 0x9eu, 0x98u, 0xbfu, 0x92u, 0x92u, 0xdcu, 0x29u, 0xf8u, 0xf4u, 0x1du, 0xbdu, 0x28u, 0x9au, 0x14u, 0x7cu, 0xe9u, 0xdau, 0x31u, 0x13u, 0xb5u, 0xf0u, 0xb8u, 0xc0u, 0x0au, 0x60u, 0xb1u, 0xceu, 0x1du, 0x7eu, 0x81u, 0x9du, 0x7au, 0x43u, 0x1du, 0x7cu, 0x90u, 0xeau, 0x0eu, 0x5fu,
  /*    n   (order of G) */
  0x02u, 0x31u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xc7u, 0x63u, 0x4du, 0x81u, 0xf4u, 0x37u, 0x2du, 0xdfu, 0x58u, 0x1au, 0x0du, 0xb2u, 0x48u, 0xb0u, 0xa7u, 0x7au, 0xecu, 0xecu, 0x19u, 0x6au, 0xccu, 0xc5u, 0x29u, 0x73u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1DomainExt[318] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x3au,
  /*    SEQUENCE */
  0x30u, 0x81u, 0xffu,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x30u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x01u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x02u, 0x00u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x64u,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x30u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfbu, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x30u, 0xcdu, 0x08u, 0x11u, 0x4bu, 0x60u, 0x4fu, 0xbfu, 0xf9u, 0xb6u, 0x2bu, 0x21u, 0xf4u, 0x1fu, 0x02u, 0x20u, 0x94u, 0xe3u, 0x37u, 0x4bu, 0xeeu, 0x94u, 0x93u, 0x8au, 0xe2u, 0x77u, 0xf2u, 0x20u, 0x9bu, 0x19u, 0x20u, 0x02u, 0x2eu, 0xf7u, 0x29u, 0xadu, 0xd8u, 0x7au, 0x4cu, 0x32u, 0xecu, 0x08u, 0x11u, 0x88u, 0x71u, 0x9du, 0x41u, 0x2du, 0xccu,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x61u, 0x04u, 0x4du, 0x3au, 0xadu, 0xc2u, 0x29u, 0x9eu, 0x15u, 0x13u, 0x81u, 0x2fu, 0xf7u, 0x23u, 0x61u, 0x4eu, 0xdeu, 0x2bu, 0x64u, 0x54u, 0x86u, 0x84u, 0x59u, 0xa3u, 0x0eu, 0xffu, 0x87u, 0x9cu, 0x3au, 0xfcu, 0x54u, 0x1bu, 0x4du, 0x6eu, 0x20u, 0xe3u, 0x78u, 0xe2u, 0xa0u, 0xd6u, 0xceu, 0x38u, 0x3du, 0xd0u, 0x75u, 0x66u, 0x49u, 0xc0u, 0xb5u, 0x28u, 0x2bu, 0x78u, 0xabu, 0xc2u, 0x5au, 0x15u, 0xc5u, 0xe9u, 0xddu, 0x80u, 0x02u, 0x26u, 0x39u, 0x69u, 0xa8u, 0x40u, 0xc6u, 0xc3u, 0x52u, 0x19u, 0x68u, 0xf4u, 0xffu, 0xd9u, 0x8bu, 0xadu, 0xe7u, 0x56u, 0x2eu, 0x83u, 0xb0u, 0x50u, 0xa1u, 0xbfu, 0xa8u, 0xbfu, 0x7bu, 0xb4u, 0xa9u, 0xacu, 0x23u, 0x04u, 0x3du, 0xadu, 0x4bu, 0x03u, 0xa4u, 0xfeu,
  /*    SEQUENCE */
  0x30u, 0x36u,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x30u, 0x0cu, 0x84u, 0xeeu, 0x01u, 0x2bu, 0x39u, 0xbfu, 0x21u, 0x3fu, 0xb0u, 0x5bu, 0x7au, 0x28u, 0x26u, 0x68u, 0x95u, 0xd4u, 0x0du, 0x49u, 0x17u, 0x4au, 0xabu, 0x1cu, 0xc5u, 0xbcu, 0x3eu, 0x48u, 0x3au, 0xfcu, 0xb8u, 0x29u, 0x47u, 0xffu, 0x3du, 0x81u, 0xe5u, 0xdfu, 0x1au, 0xa4u, 0x19u, 0x2du, 0x31u, 0x9bu, 0x24u, 0x19u, 0xb4u, 0x09u, 0xa9u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x02u, 0xdcu, 0x45u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1SpeedUpExt[803] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x03u, 0x1fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x03u, 0x18u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xdbu, 0x93u, 0xb7u, 0x76u, 0x42u, 0x74u, 0x60u, 0xc3u, 0x9cu, 0x90u, 0xa4u, 0xfdu, 0x2du, 0xe4u, 0xb5u, 0x06u, 0xdau, 0x82u, 0x14u, 0x95u, 0xf0u, 0x68u, 0x7fu, 0x50u, 0x35u, 0x04u, 0xe6u, 0xf0u, 0xffu, 0x9du, 0x48u, 0xa1u, 0x8eu, 0x6cu, 0x8fu, 0x2eu, 0x02u, 0x2bu, 0x53u, 0xf0u, 0xc8u, 0x22u, 0x9eu, 0x55u, 0x78u, 0x3du, 0xdeu, 0x91u, 0xe3u, 0x49u, 0x47u, 0xf7u, 0x12u, 0x3du, 0xf0u, 0xc2u, 0x07u, 0x0du, 0x43u, 0x09u, 0x00u, 0xb0u, 0xe6u, 0x84u, 0x09u, 0xf1u, 0xfeu, 0x41u, 0x51u, 0x72u, 0xbau, 0xd9u, 0x15u, 0xe4u, 0xf1u, 0x8bu, 0xdcu, 0x58u, 0x82u, 0x58u, 0xe8u, 0xe8u, 0xe4u, 0xa8u, 0xc2u, 0xaau, 0xccu, 0xd8u, 0x42u, 0xeau, 0x84u, 0x63u, 0x31u, 0x40u, 0xbfu, 0xdau,
  /*      (2^128 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xebu, 0x65u, 0x7bu, 0x10u, 0xfdu, 0x71u, 0x1bu, 0xa4u, 0x63u, 0x7eu, 0x33u, 0x02u, 0x42u, 0xedu, 0x76u, 0x26u, 0x39u, 0x24u, 0xe5u, 0x0au, 0x74u, 0x20u, 0x40u, 0x8fu, 0xa1u, 0xe4u, 0x4bu, 0x14u, 0xdcu, 0x26u, 0x1eu, 0xc2u, 0xfeu, 0x4au, 0x36u, 0xe7u, 0xffu, 0x13u, 0x31u, 0x4eu, 0x39u, 0x4fu, 0xb8u, 0x4du, 0xe8u, 0x6eu, 0x3fu, 0x64u, 0xa9u, 0x6fu, 0xd3u, 0xb7u, 0x46u, 0x94u, 0xe1u, 0x5au, 0x5bu, 0xe4u, 0x63u, 0xa5u, 0xbeu, 0x56u, 0xf7u, 0x74u, 0x33u, 0x86u, 0xf1u, 0xc6u, 0x88u, 0x6fu, 0xb3u, 0xdbu, 0xe7u, 0x46u, 0x58u, 0x19u, 0xb0u, 0x56u, 0xd8u, 0x72u, 0x30u, 0xe0u, 0x43u, 0x26u, 0x7fu, 0x1fu, 0x42u, 0xc7u, 0xc1u, 0x6du, 0x01u, 0xc5u, 0x34u, 0x09u, 0x49u, 0xbbu,
  /*      (2^128 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xcbu, 0x0eu, 0xc2u, 0x40u, 0x54u, 0x40u, 0x30u, 0x0eu, 0x87u, 0xa3u, 0x41u, 0xffu, 0x26u, 0x25u, 0xc6u, 0x45u, 0x16u, 0x92u, 0x6bu, 0x63u, 0x5bu, 0xd7u, 0xe9u, 0x20u, 0x67u, 0x78u, 0xc2u, 0xf9u, 0xa0u, 0x18u, 0x43u, 0x09u, 0x53u, 0xceu, 0x5eu, 0x7eu, 0x08u, 0x3cu, 0xd6u, 0x22u, 0x0au, 0x1fu, 0x01u, 0x6du, 0xa7u, 0xa2u, 0x98u, 0x2cu, 0x74u, 0x1au, 0xc8u, 0x5fu, 0x44u, 0x17u, 0x10u, 0x90u, 0x89u, 0x5du, 0x29u, 0xaeu, 0x22u, 0x31u, 0x0au, 0x17u, 0xa0u, 0xe4u, 0xe8u, 0xc6u, 0x2du, 0x55u, 0xd9u, 0x3au, 0xc8u, 0xf3u, 0x60u, 0x28u, 0x4fu, 0x9bu, 0x94u, 0x35u, 0xdeu, 0xcbu, 0x19u, 0xb5u, 0x88u, 0x64u, 0x57u, 0xe4u, 0x58u, 0x68u, 0x21u, 0xd5u, 0xfau, 0x6du, 0xe7u, 0x19u,
  /*      (2^256 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0x27u, 0x1fu, 0x07u, 0x17u, 0x8fu, 0xcbu, 0x87u, 0xf1u, 0x05u, 0xbeu, 0x51u, 0xb7u, 0xbfu, 0x50u, 0x01u, 0x59u, 0xdeu, 0x1du, 0x76u, 0x17u, 0x79u, 0xfdu, 0x9cu, 0x91u, 0xadu, 0xfdu, 0x85u, 0xb0u, 0x3eu, 0xeeu, 0x3du, 0x12u, 0x05u, 0x29u, 0x17u, 0xc3u, 0x19u, 0x0eu, 0xb1u, 0x98u, 0x56u, 0x21u, 0x11u, 0x90u, 0xa3u, 0x53u, 0xe8u, 0x89u, 0x8fu, 0x8eu, 0x6eu, 0x28u, 0x9eu, 0x96u, 0xb1u, 0x5du, 0xb0u, 0xd7u, 0xa7u, 0x36u, 0x56u, 0x49u, 0x97u, 0x6eu, 0x0au, 0x22u, 0xcbu, 0xe1u, 0x06u, 0x3bu, 0x1du, 0x7fu, 0xb2u, 0x56u, 0x47u, 0x92u, 0x8fu, 0x5fu, 0xb8u, 0xc0u, 0xb1u, 0xb7u, 0x24u, 0x6eu, 0xdau, 0x12u, 0xdau, 0x8du, 0x02u, 0x67u, 0x3eu, 0x27u, 0x3au, 0x75u, 0xacu, 0x71u,
  /*      (2^256 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xf2u, 0x4du, 0xd6u, 0xbbu, 0xbfu, 0x42u, 0x7fu, 0x21u, 0xcdu, 0xfdu, 0xfau, 0xb5u, 0xdau, 0xc6u, 0xf6u, 0x43u, 0x3au, 0x95u, 0x5eu, 0xe9u, 0xb5u, 0x18u, 0x78u, 0x08u, 0x07u, 0xa0u, 0xf7u, 0xceu, 0xb2u, 0xa8u, 0x0du, 0xc3u, 0x29u, 0x61u, 0xf5u, 0x2bu, 0x7au, 0x4fu, 0xd5u, 0xe5u, 0x10u, 0xd5u, 0x62u, 0xf2u, 0xa6u, 0x9bu, 0xcbu, 0x2cu, 0x29u, 0x1cu, 0x6au, 0xd9u, 0x08u, 0x25u, 0x5eu, 0xb5u, 0x29u, 0x1eu, 0x34u, 0x6du, 0x78u, 0xc7u, 0x45u, 0x39u, 0x1du, 0x45u, 0x2au, 0x53u, 0xb7u, 0x99u, 0xdeu, 0x3fu, 0x43u, 0x48u, 0x17u, 0xd4u, 0x2bu, 0x0du, 0x78u, 0x68u, 0x45u, 0xe1u, 0xf8u, 0x6eu, 0x60u, 0x3au, 0x03u, 0x33u, 0x56u, 0xcau, 0xe7u, 0x8cu, 0xadu, 0x54u, 0x83u, 0x5bu,
  /*      (2^256 + 2^128 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xd8u, 0x86u, 0x59u, 0x88u, 0x6eu, 0xe9u, 0xa9u, 0x30u, 0x8bu, 0x73u, 0x9au, 0xd5u, 0x7cu, 0x92u, 0x77u, 0xcfu, 0xeau, 0x79u, 0xa5u, 0xf5u, 0xadu, 0x3eu, 0xd3u, 0x4fu, 0x9du, 0x18u, 0x12u, 0x68u, 0x0eu, 0x0du, 0x07u, 0xfeu, 0xb3u, 0x65u, 0x74u, 0xa8u, 0xdcu, 0xa4u, 0x20u, 0xbau, 0x25u, 0x53u, 0x9du, 0xe9u, 0x8eu, 0xceu, 0x21u, 0x8du, 0x89u, 0x76u, 0xb7u, 0x03u, 0x05u, 0xf5u, 0x11u, 0x22u, 0x3eu, 0x1au, 0x96u, 0xb1u, 0x40u, 0xc7u, 0x3au, 0x2du, 0x67u, 0xf8u, 0x64u, 0x1eu, 0x21u, 0x04u, 0x5fu, 0x63u, 0xd3u, 0x12u, 0x8fu, 0x12u, 0x97u, 0xeeu, 0x31u, 0x5eu, 0xe0u, 0x13u, 0x8cu, 0x65u, 0x08u, 0xf3u, 0x52u, 0x4fu, 0xafu, 0x07u, 0xbfu, 0xb6u, 0x21u, 0x59u, 0x1au, 0x3eu,
  /*      (2^256 + 2^128 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0x0du, 0xe7u, 0x0du, 0x3bu, 0x66u, 0xb9u, 0x3au, 0x52u, 0x65u, 0x4cu, 0xdau, 0xdfu, 0x52u, 0xf1u, 0x6bu, 0x74u, 0x88u, 0x86u, 0x03u, 0x4cu, 0x4cu, 0xbeu, 0x5eu, 0x85u, 0x8cu, 0x1du, 0x85u, 0x06u, 0x11u, 0x6cu, 0x4du, 0x0cu, 0xa8u, 0x73u, 0xecu, 0xbfu, 0x64u, 0x10u, 0xc9u, 0xe3u, 0x6cu, 0x2du, 0x76u, 0x2eu, 0xedu, 0xc2u, 0xe9u, 0xfcu, 0xddu, 0x97u, 0x4eu, 0x2bu, 0x20u, 0x21u, 0x36u, 0x30u, 0x0bu, 0xb0u, 0x73u, 0x97u, 0x58u, 0x9bu, 0x48u, 0x03u, 0x47u, 0x00u, 0xb8u, 0x65u, 0xcfu, 0x33u, 0x89u, 0x9fu, 0x1du, 0x05u, 0xa1u, 0xf5u, 0x0fu, 0x57u, 0x8fu, 0x57u, 0xb8u, 0x3cu, 0x56u, 0x9fu, 0x87u, 0x3fu, 0xafu, 0x2au, 0xa1u, 0xdeu, 0x0eu, 0x75u, 0x03u, 0x7au, 0x58u, 0xabu,
  /*      correction point D = - ((2^128 - 1) * G) in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xbbu, 0x3fu, 0x5au, 0x84u, 0x87u, 0xf9u, 0x1au, 0x36u, 0x48u, 0x28u, 0x20u, 0xd6u, 0x7fu, 0x73u, 0x36u, 0xd6u, 0xc4u, 0xeau, 0x85u, 0x36u, 0xe6u, 0x51u, 0xcau, 0xb5u, 0xc6u, 0x06u, 0xd7u, 0x47u, 0x6du, 0x24u, 0x4du, 0xa9u, 0x32u, 0x12u, 0xa5u, 0x0cu, 0x71u, 0x17u, 0x13u, 0xf4u, 0x79u, 0xc0u, 0x00u, 0xdau, 0x6fu, 0xc6u, 0xb7u, 0xeeu, 0xc7u, 0xe7u, 0x30u, 0x8cu, 0x0bu, 0x91u, 0xb3u, 0x09u, 0x6au, 0x2cu, 0x2bu, 0x3au, 0xd4u, 0xf6u, 0x83u, 0xe1u, 0x87u, 0xe5u, 0x0fu, 0x70u, 0xd1u, 0xceu, 0x0fu, 0xbfu, 0xa6u, 0x5au, 0x46u, 0x6eu, 0xb8u, 0xb0u, 0x82u, 0x52u, 0x00u, 0x33u, 0x7fu, 0xcbu, 0x6au, 0xdau, 0xc8u, 0x40u, 0xeau, 0x24u, 0x6cu, 0xfdu, 0xbdu, 0x58u, 0xc5u, 0x4cu,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 4)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1Domain[324] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x40u,
  /*    version */
  0x02u, 0x01u, 0x01u,
  /*    SEQUENCE */
  0x30u, 0x3cu,
  /*      prime OID */
  0x06u, 0x07u, 0x2au, 0x86u, 0x48u, 0xceu, 0x3du, 0x01u, 0x01u,
  /*      p   (field prime) */
  0x02u, 0x31u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu,
  /*    SEQUENCE */
  0x30u, 0x64u,
  /*      a   (coefficient a of the curve equation) */
  0x04u, 0x30u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfeu, 0xffu, 0xffu, 0xffu, 0xffu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*      b   (coefficient b of the curve equation) */
  0x04u, 0x30u, 0xb3u, 0x31u, 0x2fu, 0xa7u, 0xe2u, 0x3eu, 0xe7u, 0xe4u, 0x98u, 0x8eu, 0x05u, 0x6bu, 0xe3u, 0xf8u, 0x2du, 0x19u, 0x18u, 0x1du, 0x9cu, 0x6eu, 0xfeu, 0x81u, 0x41u, 0x12u, 0x03u, 0x14u, 0x08u, 0x8fu, 0x50u, 0x13u, 0x87u, 0x5au, 0xc6u, 0x56u, 0x39u, 0x8du, 0x8au, 0x2eu, 0xd1u, 0x9du, 0x2au, 0x85u, 0xc8u, 0xedu, 0xd3u, 0xecu, 0x2au, 0xefu,
  /*    G   (basepoint of the curve) */
  0x04u, 0x61u, 0x04u, 0xaau, 0x87u, 0xcau, 0x22u, 0xbeu, 0x8bu, 0x05u, 0x37u, 0x8eu, 0xb1u, 0xc7u, 0x1eu, 0xf3u, 0x20u, 0xadu, 0x74u, 0x6eu, 0x1du, 0x3bu, 0x62u, 0x8bu, 0xa7u, 0x9bu, 0x98u, 0x59u, 0xf7u, 0x41u, 0xe0u, 0x82u, 0x54u, 0x2au, 0x38u, 0x55u, 0x02u, 0xf2u, 0x5du, 0xbfu, 0x55u, 0x29u, 0x6cu, 0x3au, 0x54u, 0x5eu, 0x38u, 0x72u, 0x76u, 0x0au, 0xb7u, 0x36u, 0x17u, 0xdeu, 0x4au, 0x96u, 0x26u, 0x2cu, 0x6fu, 0x5du, 0x9eu, 0x98u, 0xbfu, 0x92u, 0x92u, 0xdcu, 0x29u, 0xf8u, 0xf4u, 0x1du, 0xbdu, 0x28u, 0x9au, 0x14u, 0x7cu, 0xe9u, 0xdau, 0x31u, 0x13u, 0xb5u, 0xf0u, 0xb8u, 0xc0u, 0x0au, 0x60u, 0xb1u, 0xceu, 0x1du, 0x7eu, 0x81u, 0x9du, 0x7au, 0x43u, 0x1du, 0x7cu, 0x90u, 0xeau, 0x0eu, 0x5fu,
  /*    n   (order of G) */
  0x02u, 0x31u, 0x00u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xc7u, 0x63u, 0x4du, 0x81u, 0xf4u, 0x37u, 0x2du, 0xdfu, 0x58u, 0x1au, 0x0du, 0xb2u, 0x48u, 0xb0u, 0xa7u, 0x7au, 0xecu, 0xecu, 0x19u, 0x6au, 0xccu, 0xc5u, 0x29u, 0x73u,
  /*    h   (cofactor) */
  0x02u, 0x01u, 0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1DomainExt[323] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x3fu,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x01u, 0x01u,
  /*      p_RR  (R^2 in prime field) */
  0x04u, 0x30u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0xffu, 0xffu, 0xffu, 0xfeu, 0x00u, 0x00u, 0x00u, 0x01u,
  /*      p_bar   (low digit of -(p^-1)) */
  0x04u, 0x04u, 0x00u, 0x00u, 0x00u, 0x01u,
  /*      SEQUENCE */
  0x30u, 0x64u,
  /*        a_R   (a in Montgomery representation) */
  0x04u, 0x30u, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xffu, 0xfbu, 0xffu, 0xffu, 0xffu, 0xfcu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x03u, 0xffu, 0xffu, 0xffu, 0xfcu,
  /*        b_R   (b in Montgomery representation) */
  0x04u, 0x30u, 0xcdu, 0x08u, 0x11u, 0x4bu, 0x60u, 0x4fu, 0xbfu, 0xf9u, 0xb6u, 0x2bu, 0x21u, 0xf4u, 0x1fu, 0x02u, 0x20u, 0x94u, 0xe3u, 0x37u, 0x4bu, 0xeeu, 0x94u, 0x93u, 0x8au, 0xe2u, 0x77u, 0xf2u, 0x20u, 0x9bu, 0x19u, 0x20u, 0x02u, 0x2eu, 0xf7u, 0x29u, 0xadu, 0xd8u, 0x7au, 0x4cu, 0x32u, 0xecu, 0x08u, 0x11u, 0x88u, 0x71u, 0x9du, 0x41u, 0x2du, 0xccu,
  /*      G_R   (G in Montgomery representation) */
  0x04u, 0x61u, 0x04u, 0x4du, 0x3au, 0xadu, 0xc2u, 0x29u, 0x9eu, 0x15u, 0x13u, 0x81u, 0x2fu, 0xf7u, 0x23u, 0x61u, 0x4eu, 0xdeu, 0x2bu, 0x64u, 0x54u, 0x86u, 0x84u, 0x59u, 0xa3u, 0x0eu, 0xffu, 0x87u, 0x9cu, 0x3au, 0xfcu, 0x54u, 0x1bu, 0x4du, 0x6eu, 0x20u, 0xe3u, 0x78u, 0xe2u, 0xa0u, 0xd6u, 0xceu, 0x38u, 0x3du, 0xd0u, 0x75u, 0x66u, 0x49u, 0xc0u, 0xb5u, 0x28u, 0x2bu, 0x78u, 0xabu, 0xc2u, 0x5au, 0x15u, 0xc5u, 0xe9u, 0xddu, 0x80u, 0x02u, 0x26u, 0x39u, 0x69u, 0xa8u, 0x40u, 0xc6u, 0xc3u, 0x52u, 0x19u, 0x68u, 0xf4u, 0xffu, 0xd9u, 0x8bu, 0xadu, 0xe7u, 0x56u, 0x2eu, 0x83u, 0xb0u, 0x50u, 0xa1u, 0xbfu, 0xa8u, 0xbfu, 0x7bu, 0xb4u, 0xa9u, 0xacu, 0x23u, 0x04u, 0x3du, 0xadu, 0x4bu, 0x03u, 0xa4u, 0xfeu,
  /*    SEQUENCE */
  0x30u, 0x38u,
  /*      n_RR   (R^2 in order field) */
  0x04u, 0x30u, 0x0cu, 0x84u, 0xeeu, 0x01u, 0x2bu, 0x39u, 0xbfu, 0x21u, 0x3fu, 0xb0u, 0x5bu, 0x7au, 0x28u, 0x26u, 0x68u, 0x95u, 0xd4u, 0x0du, 0x49u, 0x17u, 0x4au, 0xabu, 0x1cu, 0xc5u, 0xbcu, 0x3eu, 0x48u, 0x3au, 0xfcu, 0xb8u, 0x29u, 0x47u, 0xffu, 0x3du, 0x81u, 0xe5u, 0xdfu, 0x1au, 0xa4u, 0x19u, 0x2du, 0x31u, 0x9bu, 0x24u, 0x19u, 0xb4u, 0x09u, 0xa9u,
  /*      n_bar   (low digit of -(n^-1)) */
  0x04u, 0x04u, 0xe8u, 0x8fu, 0xdcu, 0x45u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP384R1SpeedUpExt[803] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u, 0x82u, 0x03u, 0x1fu,
  /*    groups parameter */
  0x04u, 0x01u, 0x03u,
  /*    SEQUENCE */
  0x30u, 0x82u, 0x03u, 0x18u,
  /*      2 * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xdbu, 0x93u, 0xb7u, 0x76u, 0x42u, 0x74u, 0x60u, 0xc3u, 0x9cu, 0x90u, 0xa4u, 0xfdu, 0x2du, 0xe4u, 0xb5u, 0x06u, 0xdau, 0x82u, 0x14u, 0x95u, 0xf0u, 0x68u, 0x7fu, 0x50u, 0x35u, 0x04u, 0xe6u, 0xf0u, 0xffu, 0x9du, 0x48u, 0xa1u, 0x8eu, 0x6cu, 0x8fu, 0x2eu, 0x02u, 0x2bu, 0x53u, 0xf0u, 0xc8u, 0x22u, 0x9eu, 0x55u, 0x78u, 0x3du, 0xdeu, 0x91u, 0xe3u, 0x49u, 0x47u, 0xf7u, 0x12u, 0x3du, 0xf0u, 0xc2u, 0x07u, 0x0du, 0x43u, 0x09u, 0x00u, 0xb0u, 0xe6u, 0x84u, 0x09u, 0xf1u, 0xfeu, 0x41u, 0x51u, 0x72u, 0xbau, 0xd9u, 0x15u, 0xe4u, 0xf1u, 0x8bu, 0xdcu, 0x58u, 0x82u, 0x58u, 0xe8u, 0xe8u, 0xe4u, 0xa8u, 0xc2u, 0xaau, 0xccu, 0xd8u, 0x42u, 0xeau, 0x84u, 0x63u, 0x31u, 0x40u, 0xbfu, 0xdau,
  /*      (2^128 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xebu, 0x65u, 0x7bu, 0x10u, 0xfdu, 0x71u, 0x1bu, 0xa4u, 0x63u, 0x7eu, 0x33u, 0x02u, 0x42u, 0xedu, 0x76u, 0x26u, 0x39u, 0x24u, 0xe5u, 0x0au, 0x74u, 0x20u, 0x40u, 0x8fu, 0xa1u, 0xe4u, 0x4bu, 0x14u, 0xdcu, 0x26u, 0x1eu, 0xc2u, 0xfeu, 0x4au, 0x36u, 0xe7u, 0xffu, 0x13u, 0x31u, 0x4eu, 0x39u, 0x4fu, 0xb8u, 0x4du, 0xe8u, 0x6eu, 0x3fu, 0x64u, 0xa9u, 0x6fu, 0xd3u, 0xb7u, 0x46u, 0x94u, 0xe1u, 0x5au, 0x5bu, 0xe4u, 0x63u, 0xa5u, 0xbeu, 0x56u, 0xf7u, 0x74u, 0x33u, 0x86u, 0xf1u, 0xc6u, 0x88u, 0x6fu, 0xb3u, 0xdbu, 0xe7u, 0x46u, 0x58u, 0x19u, 0xb0u, 0x56u, 0xd8u, 0x72u, 0x30u, 0xe0u, 0x43u, 0x26u, 0x7fu, 0x1fu, 0x42u, 0xc7u, 0xc1u, 0x6du, 0x01u, 0xc5u, 0x34u, 0x09u, 0x49u, 0xbbu,
  /*      (2^128 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xcbu, 0x0eu, 0xc2u, 0x40u, 0x54u, 0x40u, 0x30u, 0x0eu, 0x87u, 0xa3u, 0x41u, 0xffu, 0x26u, 0x25u, 0xc6u, 0x45u, 0x16u, 0x92u, 0x6bu, 0x63u, 0x5bu, 0xd7u, 0xe9u, 0x20u, 0x67u, 0x78u, 0xc2u, 0xf9u, 0xa0u, 0x18u, 0x43u, 0x09u, 0x53u, 0xceu, 0x5eu, 0x7eu, 0x08u, 0x3cu, 0xd6u, 0x22u, 0x0au, 0x1fu, 0x01u, 0x6du, 0xa7u, 0xa2u, 0x98u, 0x2cu, 0x74u, 0x1au, 0xc8u, 0x5fu, 0x44u, 0x17u, 0x10u, 0x90u, 0x89u, 0x5du, 0x29u, 0xaeu, 0x22u, 0x31u, 0x0au, 0x17u, 0xa0u, 0xe4u, 0xe8u, 0xc6u, 0x2du, 0x55u, 0xd9u, 0x3au, 0xc8u, 0xf3u, 0x60u, 0x28u, 0x4fu, 0x9bu, 0x94u, 0x35u, 0xdeu, 0xcbu, 0x19u, 0xb5u, 0x88u, 0x64u, 0x57u, 0xe4u, 0x58u, 0x68u, 0x21u, 0xd5u, 0xfau, 0x6du, 0xe7u, 0x19u,
  /*      (2^256 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0x27u, 0x1fu, 0x07u, 0x17u, 0x8fu, 0xcbu, 0x87u, 0xf1u, 0x05u, 0xbeu, 0x51u, 0xb7u, 0xbfu, 0x50u, 0x01u, 0x59u, 0xdeu, 0x1du, 0x76u, 0x17u, 0x79u, 0xfdu, 0x9cu, 0x91u, 0xadu, 0xfdu, 0x85u, 0xb0u, 0x3eu, 0xeeu, 0x3du, 0x12u, 0x05u, 0x29u, 0x17u, 0xc3u, 0x19u, 0x0eu, 0xb1u, 0x98u, 0x56u, 0x21u, 0x11u, 0x90u, 0xa3u, 0x53u, 0xe8u, 0x89u, 0x8fu, 0x8eu, 0x6eu, 0x28u, 0x9eu, 0x96u, 0xb1u, 0x5du, 0xb0u, 0xd7u, 0xa7u, 0x36u, 0x56u, 0x49u, 0x97u, 0x6eu, 0x0au, 0x22u, 0xcbu, 0xe1u, 0x06u, 0x3bu, 0x1du, 0x7fu, 0xb2u, 0x56u, 0x47u, 0x92u, 0x8fu, 0x5fu, 0xb8u, 0xc0u, 0xb1u, 0xb7u, 0x24u, 0x6eu, 0xdau, 0x12u, 0xdau, 0x8du, 0x02u, 0x67u, 0x3eu, 0x27u, 0x3au, 0x75u, 0xacu, 0x71u,
  /*      (2^256 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xf2u, 0x4du, 0xd6u, 0xbbu, 0xbfu, 0x42u, 0x7fu, 0x21u, 0xcdu, 0xfdu, 0xfau, 0xb5u, 0xdau, 0xc6u, 0xf6u, 0x43u, 0x3au, 0x95u, 0x5eu, 0xe9u, 0xb5u, 0x18u, 0x78u, 0x08u, 0x07u, 0xa0u, 0xf7u, 0xceu, 0xb2u, 0xa8u, 0x0du, 0xc3u, 0x29u, 0x61u, 0xf5u, 0x2bu, 0x7au, 0x4fu, 0xd5u, 0xe5u, 0x10u, 0xd5u, 0x62u, 0xf2u, 0xa6u, 0x9bu, 0xcbu, 0x2cu, 0x29u, 0x1cu, 0x6au, 0xd9u, 0x08u, 0x25u, 0x5eu, 0xb5u, 0x29u, 0x1eu, 0x34u, 0x6du, 0x78u, 0xc7u, 0x45u, 0x39u, 0x1du, 0x45u, 0x2au, 0x53u, 0xb7u, 0x99u, 0xdeu, 0x3fu, 0x43u, 0x48u, 0x17u, 0xd4u, 0x2bu, 0x0du, 0x78u, 0x68u, 0x45u, 0xe1u, 0xf8u, 0x6eu, 0x60u, 0x3au, 0x03u, 0x33u, 0x56u, 0xcau, 0xe7u, 0x8cu, 0xadu, 0x54u, 0x83u, 0x5bu,
  /*      (2^256 + 2^128 + 1) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xd8u, 0x86u, 0x59u, 0x88u, 0x6eu, 0xe9u, 0xa9u, 0x30u, 0x8bu, 0x73u, 0x9au, 0xd5u, 0x7cu, 0x92u, 0x77u, 0xcfu, 0xeau, 0x79u, 0xa5u, 0xf5u, 0xadu, 0x3eu, 0xd3u, 0x4fu, 0x9du, 0x18u, 0x12u, 0x68u, 0x0eu, 0x0du, 0x07u, 0xfeu, 0xb3u, 0x65u, 0x74u, 0xa8u, 0xdcu, 0xa4u, 0x20u, 0xbau, 0x25u, 0x53u, 0x9du, 0xe9u, 0x8eu, 0xceu, 0x21u, 0x8du, 0x89u, 0x76u, 0xb7u, 0x03u, 0x05u, 0xf5u, 0x11u, 0x22u, 0x3eu, 0x1au, 0x96u, 0xb1u, 0x40u, 0xc7u, 0x3au, 0x2du, 0x67u, 0xf8u, 0x64u, 0x1eu, 0x21u, 0x04u, 0x5fu, 0x63u, 0xd3u, 0x12u, 0x8fu, 0x12u, 0x97u, 0xeeu, 0x31u, 0x5eu, 0xe0u, 0x13u, 0x8cu, 0x65u, 0x08u, 0xf3u, 0x52u, 0x4fu, 0xafu, 0x07u, 0xbfu, 0xb6u, 0x21u, 0x59u, 0x1au, 0x3eu,
  /*      (2^256 + 2^128 + 2) * G in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0x0du, 0xe7u, 0x0du, 0x3bu, 0x66u, 0xb9u, 0x3au, 0x52u, 0x65u, 0x4cu, 0xdau, 0xdfu, 0x52u, 0xf1u, 0x6bu, 0x74u, 0x88u, 0x86u, 0x03u, 0x4cu, 0x4cu, 0xbeu, 0x5eu, 0x85u, 0x8cu, 0x1du, 0x85u, 0x06u, 0x11u, 0x6cu, 0x4du, 0x0cu, 0xa8u, 0x73u, 0xecu, 0xbfu, 0x64u, 0x10u, 0xc9u, 0xe3u, 0x6cu, 0x2du, 0x76u, 0x2eu, 0xedu, 0xc2u, 0xe9u, 0xfcu, 0xddu, 0x97u, 0x4eu, 0x2bu, 0x20u, 0x21u, 0x36u, 0x30u, 0x0bu, 0xb0u, 0x73u, 0x97u, 0x58u, 0x9bu, 0x48u, 0x03u, 0x47u, 0x00u, 0xb8u, 0x65u, 0xcfu, 0x33u, 0x89u, 0x9fu, 0x1du, 0x05u, 0xa1u, 0xf5u, 0x0fu, 0x57u, 0x8fu, 0x57u, 0xb8u, 0x3cu, 0x56u, 0x9fu, 0x87u, 0x3fu, 0xafu, 0x2au, 0xa1u, 0xdeu, 0x0eu, 0x75u, 0x03u, 0x7au, 0x58u, 0xabu,
  /*      correction point D = - ((2^128 - 1) * G) in Montgomery representation */
  0x04u, 0x61u, 0x04u, 0xbbu, 0x3fu, 0x5au, 0x84u, 0x87u, 0xf9u, 0x1au, 0x36u, 0x48u, 0x28u, 0x20u, 0xd6u, 0x7fu, 0x73u, 0x36u, 0xd6u, 0xc4u, 0xeau, 0x85u, 0x36u, 0xe6u, 0x51u, 0xcau, 0xb5u, 0xc6u, 0x06u, 0xd7u, 0x47u, 0x6du, 0x24u, 0x4du, 0xa9u, 0x32u, 0x12u, 0xa5u, 0x0cu, 0x71u, 0x17u, 0x13u, 0xf4u, 0x79u, 0xc0u, 0x00u, 0xdau, 0x6fu, 0xc6u, 0xb7u, 0xeeu, 0xc7u, 0xe7u, 0x30u, 0x8cu, 0x0bu, 0x91u, 0xb3u, 0x09u, 0x6au, 0x2cu, 0x2bu, 0x3au, 0xd4u, 0xf6u, 0x83u, 0xe1u, 0x87u, 0xe5u, 0x0fu, 0x70u, 0xd1u, 0xceu, 0x0fu, 0xbfu, 0xa6u, 0x5au, 0x46u, 0x6eu, 0xb8u, 0xb0u, 0x82u, 0x52u, 0x00u, 0x33u, 0x7fu, 0xcbu, 0x6au, 0xdau, 0xc8u, 0x40u, 0xeau, 0x24u, 0x6cu, 0xfdu, 0xbdu, 0x58u, 0xc5u, 0x4cu,
};
# else /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
#  error "Value of CRYPTO_30_LIBCV_BYTES_PER_DIGIT is not supported"
# endif /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
/* NIST_SEC_p384r1 END *********************************************************************************************/

/* NIST_SEC_p521r1 START *********************************************************************************************/
/* NISTp521r1 = SECp521r1 */
/* The curve params in shorthand notation:
 * Name: secp521r1
 * p:    0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
 * a:    0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
 * b:    0x51953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00
 * Gx:   0xc6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66
 * Gy:   0x11839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650
 * n:    0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409
 * h:    0x1
 */

# if (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 1)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1Domain[432] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u,0x82u,0x01u,0xacu,
  /* version */
  0x02u,0x01u,0x01u,
  /* SEQUENCE */
  0x30u,0x4du,
  /* prime OID */
  0x06u,0x07u,0x2au,0x86u,0x48u,0xceu,0x3du,0x01u,0x01u,
  /* p   (field prime) */
  0x02u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,
  /* SEQUENCE */
  0x30u,0x81u,0x88u,
  /* a   (coefficient a of the curve equation) */
  0x04u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfcu,
  /* b   (coefficient b of the curve equation) */
  0x04u,0x42u,0x00u,0x51u,0x95u,0x3eu,0xb9u,0x61u,0x8eu,0x1cu,0x9au,0x1fu,0x92u,0x9au,0x21u,0xa0u,0xb6u,0x85u,0x40u,0xeeu,0xa2u,0xdau,0x72u,0x5bu,0x99u,0xb3u,0x15u,0xf3u,0xb8u,0xb4u,0x89u,0x91u,0x8eu,0xf1u,0x09u,0xe1u,0x56u,0x19u,0x39u,0x51u,0xecu,0x7eu,0x93u,0x7bu,0x16u,0x52u,0xc0u,0xbdu,0x3bu,0xb1u,0xbfu,0x07u,0x35u,0x73u,0xdfu,0x88u,0x3du,0x2cu,0x34u,0xf1u,0xefu,0x45u,0x1fu,0xd4u,0x6bu,0x50u,0x3fu,0x00u,
  /* G   (basepoint of the curve) */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xc6u,0x85u,0x8eu,0x06u,0xb7u,0x04u,0x04u,0xe9u,0xcdu,0x9eu,0x3eu,0xcbu,0x66u,0x23u,0x95u,0xb4u,0x42u,0x9cu,0x64u,0x81u,0x39u,0x05u,0x3fu,0xb5u,0x21u,0xf8u,0x28u,0xafu,0x60u,0x6bu,0x4du,0x3du,0xbau,0xa1u,0x4bu,0x5eu,0x77u,0xefu,0xe7u,0x59u,0x28u,0xfeu,0x1du,0xc1u,0x27u,0xa2u,0xffu,0xa8u,0xdeu,0x33u,0x48u,0xb3u,0xc1u,0x85u,0x6au,0x42u,0x9bu,0xf9u,0x7eu,0x7eu,0x31u,0xc2u,0xe5u,0xbdu,0x66u,0x01u,0x18u,0x39u,0x29u,0x6au,0x78u,0x9au,0x3bu,0xc0u,0x04u,0x5cu,0x8au,0x5fu,0xb4u,0x2cu,0x7du,0x1bu,0xd9u,0x98u,0xf5u,0x44u,0x49u,0x57u,0x9bu,0x44u,0x68u,0x17u,0xafu,0xbdu,0x17u,0x27u,0x3eu,0x66u,0x2cu,0x97u,0xeeu,0x72u,0x99u,0x5eu,0xf4u,0x26u,0x40u,0xc5u,0x50u,0xb9u,0x01u,0x3fu,0xadu,0x07u,0x61u,0x35u,0x3cu,0x70u,0x86u,0xa2u,0x72u,0xc2u,0x40u,0x88u,0xbeu,0x94u,0x76u,0x9fu,0xd1u,0x66u,0x50u,
  /* n   (order of G) */
  0x02u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfau,0x51u,0x86u,0x87u,0x83u,0xbfu,0x2fu,0x96u,0x6bu,0x7fu,0xccu,0x01u,0x48u,0xf7u,0x09u,0xa5u,0xd0u,0x3bu,0xb5u,0xc9u,0xb8u,0x89u,0x9cu,0x47u,0xaeu,0xbbu,0x6fu,0xb7u,0x1eu,0x91u,0x38u,0x64u,0x09u,
  /* h   (cofactor) */
  0x02u,0x01u,0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1DomainExt[427] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u,0x82u,0x01u,0xa7u,
  /*  SEQUENCE */
  0x30u,0x82u,0x01u,0x5au,
  /*   p_RR  (R^2 in prime field) */
  0x04u,0x42u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x40u,0x00u,
  /*   p_bar   (low digit of -(p^-1)) */
  0x04u,0x01u,0x01u,
  /*   SEQUENCE */
  0x30u,0x81u,0x88u,
  /*   a_R   (a in Montgomery representation) */
  0x04u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfeu,0x7fu,
  /*   b_R   (b in Montgomery representation) */
  0x04u,0x42u,0x00u,0xcau,0x9fu,0x5cu,0xb0u,0xc7u,0x0eu,0x4du,0x0fu,0xc9u,0x4du,0x10u,0xd0u,0x5bu,0x42u,0xa0u,0x77u,0x51u,0x6du,0x39u,0x2du,0xccu,0xd9u,0x8au,0xf9u,0xdcu,0x5au,0x44u,0xc8u,0xc7u,0x78u,0x84u,0xf0u,0xabu,0x0cu,0x9cu,0xa8u,0xf6u,0x3fu,0x49u,0xbdu,0x8bu,0x29u,0x60u,0x5eu,0x9du,0xd8u,0xdfu,0x83u,0x9au,0xb9u,0xefu,0xc4u,0x1eu,0x96u,0x1au,0x78u,0xf7u,0xa2u,0x8fu,0xeau,0x35u,0xa8u,0x1fu,0x80u,0x14u,
  /*   G_R   (G in Montgomery representation) */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x42u,0xc7u,0x03u,0x5bu,0x82u,0x02u,0x74u,0xe6u,0xcfu,0x1fu,0x65u,0xb3u,0x11u,0xcau,0xdau,0x21u,0x4eu,0x32u,0x40u,0x9cu,0x82u,0x9fu,0xdau,0x90u,0xfcu,0x14u,0x57u,0xb0u,0x35u,0xa6u,0x9eu,0xddu,0x50u,0xa5u,0xafu,0x3bu,0xf7u,0xf3u,0xacu,0x94u,0x7fu,0x0eu,0xe0u,0x93u,0xd1u,0x7fu,0xd4u,0x6fu,0x19u,0xa4u,0x59u,0xe0u,0xc2u,0xb5u,0x21u,0x4du,0xfcu,0xbfu,0x3fu,0x18u,0xe1u,0x72u,0xdeu,0xb3u,0x31u,0x00u,0x1cu,0x94u,0xb5u,0x3cu,0x4du,0x1du,0xe0u,0x02u,0x2eu,0x45u,0x2fu,0xdau,0x16u,0x3eu,0x8du,0xecu,0xccu,0x7au,0xa2u,0x24u,0xabu,0xcdu,0xa2u,0x34u,0x0bu,0xd7u,0xdeu,0x8bu,0x93u,0x9fu,0x33u,0x16u,0x4bu,0xf7u,0x39u,0x4cu,0xafu,0x7au,0x13u,0x20u,0x62u,0xa8u,0x5cu,0x80u,0x9fu,0xd6u,0x83u,0xb0u,0x9au,0x9eu,0x38u,0x43u,0x51u,0x39u,0x61u,0x20u,0x44u,0x5fu,0x4au,0x3bu,0x4fu,0xe8u,0xb3u,0x28u,0x46u,
  /*  SEQUENCE */
  0x30u,0x47u,
  /*   n_RR   (R^2 in order field) */
  0x04u,0x42u,0x01u,0xeau,0x03u,0x91u,0xa3u,0x9au,0x5bu,0x5au,0x3au,0xfeu,0x8cu,0x44u,0x38u,0x3du,0x2du,0x8eu,0x03u,0xd1u,0x49u,0x2du,0x0du,0x45u,0x5bu,0xccu,0x6du,0x61u,0xa8u,0xe5u,0x67u,0xbcu,0xcfu,0xf3u,0xd1u,0x3du,0x47u,0x71u,0x0au,0x7fu,0x95u,0xe3u,0x35u,0x83u,0x8eu,0x57u,0xadu,0xa6u,0xe9u,0x91u,0x17u,0x1eu,0x2eu,0xf2u,0x1du,0x46u,0x42u,0xa2u,0x3fu,0xb7u,0x35u,0x1cu,0x54u,0x08u,0x56u,0xc0u,0xfbu,0xb8u,
  /*   n_bar   (low digit of -(n^-1)) */
  0x04u,0x01u,0xc7u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1SpeedUpExt[1099] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u,0x82u,0x04u,0x47u,
  /*  groups parameter */
  0x04u,0x01u,0x03u,
  /*  SEQUENCE */
  0x30u,0x82u,0x04u,0x40u,
  /*  2 * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x9eu,0x10u,0xc8u,0x12u,0x13u,0xbfu,0x3fu,0x34u,0x17u,0xe5u,0x94u,0x40u,0xa4u,0x61u,0x41u,0x3au,0x3au,0x01u,0x93u,0xcdu,0x8eu,0x66u,0x03u,0x1au,0x96u,0x37u,0x2au,0x82u,0xebu,0xb4u,0xdfu,0x4bu,0xd9u,0xd9u,0x02u,0x6du,0x37u,0x7au,0xaau,0x83u,0xd5u,0x08u,0x25u,0x1du,0x1au,0xe2u,0xd7u,0xa0u,0xe7u,0x97u,0xd1u,0xb2u,0x6bu,0x07u,0xecu,0xb3u,0xfau,0x1fu,0x1cu,0x99u,0xddu,0x36u,0xbcu,0x1eu,0x90u,0x00u,0x5du,0xc6u,0x63u,0xfcu,0x36u,0xd9u,0x33u,0x80u,0x53u,0xf9u,0xf6u,0x77u,0x77u,0x69u,0xf8u,0x5au,0xe3u,0x5au,0x88u,0x3eu,0x26u,0xd4u,0xbbu,0xa0u,0x55u,0x90u,0xd1u,0x4cu,0x83u,0x62u,0x16u,0xddu,0xd9u,0xf1u,0xbbu,0xefu,0x4fu,0x92u,0x8fu,0xb5u,0xc9u,0xc9u,0xbfu,0xd4u,0xcdu,0x19u,0x24u,0x7au,0x75u,0x7eu,0x5fu,0x4au,0xf6u,0xe0u,0x7au,0x7bu,0x8du,0xf1u,0xabu,0x6bu,0x30u,0xfau,0x0du,0x81u,0x3du,
  /*  (2^174 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xe1u,0x51u,0x77u,0xdeu,0x42u,0x44u,0xaau,0x8eu,0xe7u,0x2cu,0xafu,0x4fu,0x9au,0x9bu,0x7fu,0x03u,0xd4u,0x89u,0x83u,0xe0u,0x29u,0xe1u,0x71u,0x95u,0x01u,0x11u,0xd0u,0x8cu,0xf0u,0x9eu,0x3du,0x8eu,0x89u,0xdcu,0x58u,0x7cu,0xbdu,0xbfu,0xb5u,0x83u,0x46u,0x90u,0x12u,0x37u,0x72u,0x61u,0x14u,0xe2u,0x5du,0x61u,0x01u,0xf7u,0x70u,0x19u,0x66u,0x03u,0x9bu,0x00u,0x2du,0x1bu,0xe3u,0xdcu,0x24u,0x50u,0x06u,0x01u,0x65u,0x10u,0x55u,0xa3u,0x7au,0x73u,0xf2u,0x90u,0xb4u,0x97u,0xb8u,0x96u,0x39u,0xecu,0x68u,0x80u,0x9cu,0x84u,0x3cu,0xa1u,0xf5u,0x24u,0xf1u,0x19u,0x88u,0x88u,0xbcu,0x65u,0x89u,0xa2u,0x47u,0xbcu,0x46u,0xbbu,0x90u,0x68u,0xfbu,0x9cu,0x8cu,0x39u,0xa4u,0x7au,0x03u,0x24u,0x05u,0x68u,0x26u,0xf0u,0x6du,0x0eu,0x2fu,0x9eu,0x40u,0xefu,0x93u,0x3bu,0x76u,0x91u,0x73u,0xdau,0x33u,0x84u,0x0du,0x7eu,0x96u,
  /*  (2^174 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x36u,0x4fu,0xacu,0x85u,0x6du,0x00u,0xf2u,0x4eu,0x2fu,0x9du,0x89u,0x81u,0x04u,0x7fu,0x3eu,0x03u,0xa3u,0xcau,0x57u,0xb3u,0x54u,0x4fu,0x02u,0x99u,0x0fu,0x4du,0x2fu,0xf9u,0x33u,0xcbu,0x96u,0x58u,0x23u,0x27u,0x9bu,0xcbu,0xbcu,0xd9u,0x6cu,0x80u,0xcdu,0x03u,0x7au,0xd9u,0x19u,0x12u,0x6bu,0x32u,0xe2u,0xb7u,0x4bu,0x24u,0x91u,0x5bu,0x79u,0x51u,0x1eu,0x81u,0x09u,0xffu,0x6au,0x5eu,0x75u,0x85u,0x85u,0x01u,0x11u,0xc7u,0x8cu,0xd0u,0x72u,0x64u,0xbdu,0xbeu,0x73u,0x43u,0x7fu,0xe5u,0xc1u,0x20u,0x3eu,0x74u,0xfdu,0xa7u,0xe8u,0x16u,0x3bu,0xdau,0x93u,0xd5u,0x7cu,0xdeu,0x89u,0x23u,0xecu,0x09u,0xeau,0x5fu,0x93u,0x90u,0x79u,0x30u,0xd9u,0x54u,0x1cu,0x1au,0x37u,0x24u,0x98u,0x8cu,0xceu,0x93u,0xa2u,0x9eu,0x59u,0x84u,0x8au,0xb0u,0x1eu,0x24u,0xa6u,0x36u,0x82u,0x6du,0xfbu,0x8cu,0xfdu,0xb6u,0x74u,0xf7u,0xacu,
  /*  (2^348 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x8cu,0x2cu,0xfeu,0x90u,0x6fu,0x1cu,0x23u,0x3eu,0xb0u,0x76u,0xa1u,0xf7u,0x67u,0x7au,0x2bu,0xcau,0xf2u,0xa9u,0x17u,0xd7u,0xf9u,0xfbu,0x6cu,0x75u,0x42u,0xd9u,0x25u,0xe2u,0x3au,0x47u,0x4bu,0xd6u,0x9eu,0x7cu,0xd7u,0xa6u,0xf1u,0x60u,0xbcu,0x3au,0x70u,0x39u,0x54u,0xc0u,0x56u,0x3bu,0x54u,0x46u,0x87u,0x3eu,0xc2u,0xacu,0xddu,0xdeu,0x0bu,0xacu,0x33u,0x5eu,0xcdu,0x06u,0xe6u,0xb4u,0xc3u,0x4bu,0xf5u,0x00u,0xc8u,0xf0u,0x5bu,0xa3u,0x73u,0x91u,0xf1u,0x3cu,0x04u,0xfdu,0xb9u,0x06u,0x58u,0xfbu,0xaeu,0x48u,0x0eu,0xdfu,0x52u,0xedu,0x74u,0x05u,0x6du,0x5au,0x23u,0x44u,0x3fu,0x3au,0x46u,0x0cu,0xd3u,0xbau,0x05u,0x1cu,0x5cu,0xa9u,0xcdu,0x13u,0x11u,0x41u,0x96u,0x58u,0x5au,0xb8u,0x77u,0x44u,0xfcu,0x7au,0x9bu,0x98u,0xdeu,0x63u,0xffu,0x72u,0x2au,0x76u,0xf3u,0x16u,0x3bu,0x5cu,0xacu,0x74u,0x0cu,0x0eu,0x71u,
  /*  (2^348 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xecu,0x3fu,0x0au,0x19u,0xefu,0xbau,0xafu,0xccu,0x4bu,0xffu,0x94u,0x65u,0xc1u,0xecu,0x0fu,0xd3u,0xc4u,0xd2u,0x67u,0x22u,0xc6u,0xebu,0x0bu,0x8bu,0xa9u,0xc2u,0xd7u,0x7du,0x80u,0x23u,0xc4u,0x64u,0xe6u,0x9bu,0x15u,0xd9u,0x81u,0xbfu,0x6au,0x56u,0x90u,0xacu,0xe1u,0x97u,0x65u,0x81u,0xc6u,0xdau,0x53u,0x36u,0xa1u,0x3fu,0xa7u,0x4du,0x01u,0x90u,0x55u,0xabu,0x41u,0xcfu,0x26u,0xceu,0x39u,0xa8u,0x46u,0x01u,0xa4u,0xddu,0xdeu,0xe9u,0xb2u,0x92u,0x9eu,0x4cu,0x3au,0xfbu,0x96u,0x26u,0x73u,0x18u,0xf9u,0x04u,0xb5u,0x5au,0x4au,0xe0u,0x60u,0x58u,0xb7u,0xb0u,0x0cu,0x13u,0xfdu,0xe5u,0x80u,0x3fu,0xf9u,0x2bu,0x8eu,0x8bu,0x7eu,0xa1u,0x10u,0x43u,0xb2u,0x6cu,0xd9u,0xccu,0xe1u,0x02u,0x07u,0x04u,0xe1u,0xbfu,0x30u,0x42u,0x04u,0xc9u,0x37u,0xa8u,0xd9u,0xd0u,0x09u,0xe4u,0x8cu,0x82u,0x6du,0x1du,0xa3u,0xebu,0x46u,
  /*  (2^348 + 2^174 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0x67u,0x9bu,0xa9u,0xddu,0x43u,0x03u,0xe7u,0xb4u,0x83u,0xc5u,0xd0u,0xbfu,0x7du,0x9eu,0xa6u,0x48u,0xe9u,0xd6u,0x8fu,0xabu,0xc3u,0xf7u,0x17u,0x61u,0x10u,0x10u,0x55u,0xcau,0x2du,0x38u,0xd5u,0xb4u,0x82u,0xffu,0xbcu,0x66u,0xbeu,0x23u,0x37u,0x84u,0x03u,0xdcu,0x85u,0x6cu,0xd5u,0xfeu,0x76u,0xc1u,0xf0u,0xf2u,0xc4u,0xf9u,0xe5u,0x54u,0x90u,0x7bu,0xaau,0xd2u,0xf4u,0x7au,0x32u,0x0du,0xbfu,0x04u,0x4eu,0x01u,0xb1u,0x9fu,0xfau,0x6fu,0xc9u,0x20u,0xbcu,0x36u,0x89u,0x33u,0x5bu,0x5cu,0xedu,0x2cu,0xc2u,0x1fu,0xabu,0x89u,0x1eu,0xccu,0xdeu,0xa4u,0x73u,0x38u,0xe9u,0xaau,0xa7u,0xd1u,0x7fu,0xc6u,0x95u,0xc1u,0xcbu,0x94u,0x4bu,0x6du,0x8fu,0x8bu,0x4bu,0x43u,0xa6u,0x4cu,0xa2u,0xb2u,0x17u,0xbbu,0xd4u,0x2eu,0xe9u,0x05u,0x9eu,0x84u,0x42u,0x2au,0x64u,0xbcu,0xdau,0xf1u,0xc8u,0xf1u,0x5cu,0xd9u,0x13u,0x00u,0x47u,
  /*  (2^348 + 2^174 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x3bu,0x98u,0x9bu,0x87u,0x4du,0x06u,0x72u,0x8du,0x7au,0x77u,0x20u,0xa9u,0xd6u,0xf1u,0xf8u,0xbcu,0x3au,0x39u,0x6fu,0x04u,0x4fu,0xeau,0x08u,0x93u,0xbdu,0x35u,0x1bu,0xffu,0xccu,0xd7u,0x5eu,0xdeu,0x0du,0x6au,0xfau,0xe5u,0x34u,0x97u,0x4bu,0x61u,0x8au,0x5eu,0x2cu,0x93u,0xf8u,0x6cu,0xc8u,0x47u,0xe5u,0x1bu,0x51u,0xbau,0x32u,0x35u,0xe0u,0x22u,0x69u,0x2au,0xc5u,0xf6u,0xdcu,0x31u,0x1eu,0xe0u,0x3du,0x01u,0xefu,0xfbu,0x64u,0x11u,0x06u,0x31u,0x02u,0xb2u,0xe4u,0xb7u,0x21u,0xb7u,0x1au,0xc5u,0x63u,0xc7u,0x63u,0xb3u,0x2cu,0x08u,0x13u,0xdbu,0x35u,0x78u,0x45u,0x6cu,0xddu,0x7du,0xaau,0x9cu,0x0cu,0x45u,0x37u,0xfeu,0x2eu,0xf8u,0x73u,0x35u,0xdau,0x6du,0x3bu,0x6au,0x39u,0x48u,0x4fu,0xbbu,0xceu,0xdau,0xbau,0x6bu,0xb0u,0x6bu,0xccu,0xeau,0xdau,0xc2u,0x5fu,0x27u,0x0eu,0xedu,0x90u,0x57u,0x32u,0x5eu,0x2bu,
  /*  correction point D = - ((2^174 - 1) * G) in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0x3au,0x67u,0xe5u,0xe1u,0x41u,0xb5u,0x93u,0xf6u,0xc7u,0x9cu,0x37u,0x00u,0x20u,0x7du,0x83u,0xcbu,0x87u,0x5fu,0x2au,0x22u,0xdfu,0x95u,0x81u,0x8cu,0x5eu,0xa0u,0x2du,0x84u,0x05u,0xa4u,0xb3u,0x3au,0x69u,0x06u,0x98u,0xfdu,0xc0u,0x3eu,0xadu,0x83u,0x83u,0x40u,0x79u,0xadu,0x6eu,0xe1u,0x3bu,0x59u,0x60u,0xb4u,0x65u,0xb5u,0x96u,0x5bu,0xd5u,0x4eu,0x79u,0xf0u,0xf7u,0xb6u,0x57u,0x92u,0x99u,0x39u,0xd9u,0x00u,0x79u,0x0du,0x13u,0x65u,0x21u,0xb9u,0x51u,0x80u,0xeau,0xd6u,0x4bu,0xe9u,0x83u,0xc1u,0x3au,0x91u,0x3du,0x85u,0x8cu,0xf5u,0x0cu,0x74u,0x4cu,0x47u,0xe0u,0xc7u,0x32u,0x98u,0xd8u,0x5au,0xa2u,0x8eu,0xceu,0xbau,0xedu,0x8eu,0x3eu,0x9cu,0x05u,0xb2u,0x30u,0x35u,0x91u,0x13u,0xc2u,0x4cu,0xe3u,0x56u,0xebu,0x9cu,0xc0u,0x07u,0x2cu,0x68u,0x5cu,0x6fu,0xfau,0xb3u,0xd3u,0x55u,0xe3u,0x32u,0x37u,0xdfu,0x15u,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 2)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1Domain[432] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u,0x82u,0x01u,0xacu,
  /* version */
  0x02u,0x01u,0x01u,
  /* SEQUENCE */
  0x30u,0x4du,
  /*  prime OID */
  0x06u,0x07u,0x2au,0x86u,0x48u,0xceu,0x3du,0x01u,0x01u,
  /*  p   (field prime) */
  0x02u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,
  /* SEQUENCE */
  0x30u,0x81u,0x88u,
  /*  a   (coefficient a of the curve equation) */
  0x04u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfcu,
  /*  b   (coefficient b of the curve equation) */
  0x04u,0x42u,0x00u,0x51u,0x95u,0x3eu,0xb9u,0x61u,0x8eu,0x1cu,0x9au,0x1fu,0x92u,0x9au,0x21u,0xa0u,0xb6u,0x85u,0x40u,0xeeu,0xa2u,0xdau,0x72u,0x5bu,0x99u,0xb3u,0x15u,0xf3u,0xb8u,0xb4u,0x89u,0x91u,0x8eu,0xf1u,0x09u,0xe1u,0x56u,0x19u,0x39u,0x51u,0xecu,0x7eu,0x93u,0x7bu,0x16u,0x52u,0xc0u,0xbdu,0x3bu,0xb1u,0xbfu,0x07u,0x35u,0x73u,0xdfu,0x88u,0x3du,0x2cu,0x34u,0xf1u,0xefu,0x45u,0x1fu,0xd4u,0x6bu,0x50u,0x3fu,0x00u,
  /* G   (basepoint of the curve) */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xc6u,0x85u,0x8eu,0x06u,0xb7u,0x04u,0x04u,0xe9u,0xcdu,0x9eu,0x3eu,0xcbu,0x66u,0x23u,0x95u,0xb4u,0x42u,0x9cu,0x64u,0x81u,0x39u,0x05u,0x3fu,0xb5u,0x21u,0xf8u,0x28u,0xafu,0x60u,0x6bu,0x4du,0x3du,0xbau,0xa1u,0x4bu,0x5eu,0x77u,0xefu,0xe7u,0x59u,0x28u,0xfeu,0x1du,0xc1u,0x27u,0xa2u,0xffu,0xa8u,0xdeu,0x33u,0x48u,0xb3u,0xc1u,0x85u,0x6au,0x42u,0x9bu,0xf9u,0x7eu,0x7eu,0x31u,0xc2u,0xe5u,0xbdu,0x66u,0x01u,0x18u,0x39u,0x29u,0x6au,0x78u,0x9au,0x3bu,0xc0u,0x04u,0x5cu,0x8au,0x5fu,0xb4u,0x2cu,0x7du,0x1bu,0xd9u,0x98u,0xf5u,0x44u,0x49u,0x57u,0x9bu,0x44u,0x68u,0x17u,0xafu,0xbdu,0x17u,0x27u,0x3eu,0x66u,0x2cu,0x97u,0xeeu,0x72u,0x99u,0x5eu,0xf4u,0x26u,0x40u,0xc5u,0x50u,0xb9u,0x01u,0x3fu,0xadu,0x07u,0x61u,0x35u,0x3cu,0x70u,0x86u,0xa2u,0x72u,0xc2u,0x40u,0x88u,0xbeu,0x94u,0x76u,0x9fu,0xd1u,0x66u,0x50u,
  /* n   (order of G) */
  0x02u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfau,0x51u,0x86u,0x87u,0x83u,0xbfu,0x2fu,0x96u,0x6bu,0x7fu,0xccu,0x01u,0x48u,0xf7u,0x09u,0xa5u,0xd0u,0x3bu,0xb5u,0xc9u,0xb8u,0x89u,0x9cu,0x47u,0xaeu,0xbbu,0x6fu,0xb7u,0x1eu,0x91u,0x38u,0x64u,0x09u,
  /* h   (cofactor) */
  0x02u,0x01u,0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1DomainExt[429] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u,0x82u,0x01u,0xa9u,
  /*  SEQUENCE */
  0x30u,0x82u,0x01u,0x5bu,
  /*   p_RR  (R^2 in prime field) */
  0x04u,0x42u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x40u,0x00u,
  /*   p_bar   (low digit of -(p^-1)) */
  0x04u,0x02u,0x00u,0x01u,
  /*   SEQUENCE */
  0x30u,0x81u,0x88u,
  /*   a_R   (a in Montgomery representation) */
  0x04u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfeu,0x7fu,
  /*   b_R   (b in Montgomery representation) */
  0x04u,0x42u,0x00u,0xcau,0x9fu,0x5cu,0xb0u,0xc7u,0x0eu,0x4du,0x0fu,0xc9u,0x4du,0x10u,0xd0u,0x5bu,0x42u,0xa0u,0x77u,0x51u,0x6du,0x39u,0x2du,0xccu,0xd9u,0x8au,0xf9u,0xdcu,0x5au,0x44u,0xc8u,0xc7u,0x78u,0x84u,0xf0u,0xabu,0x0cu,0x9cu,0xa8u,0xf6u,0x3fu,0x49u,0xbdu,0x8bu,0x29u,0x60u,0x5eu,0x9du,0xd8u,0xdfu,0x83u,0x9au,0xb9u,0xefu,0xc4u,0x1eu,0x96u,0x1au,0x78u,0xf7u,0xa2u,0x8fu,0xeau,0x35u,0xa8u,0x1fu,0x80u,0x14u,
  /*   G_R   (G in Montgomery representation) */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x42u,0xc7u,0x03u,0x5bu,0x82u,0x02u,0x74u,0xe6u,0xcfu,0x1fu,0x65u,0xb3u,0x11u,0xcau,0xdau,0x21u,0x4eu,0x32u,0x40u,0x9cu,0x82u,0x9fu,0xdau,0x90u,0xfcu,0x14u,0x57u,0xb0u,0x35u,0xa6u,0x9eu,0xddu,0x50u,0xa5u,0xafu,0x3bu,0xf7u,0xf3u,0xacu,0x94u,0x7fu,0x0eu,0xe0u,0x93u,0xd1u,0x7fu,0xd4u,0x6fu,0x19u,0xa4u,0x59u,0xe0u,0xc2u,0xb5u,0x21u,0x4du,0xfcu,0xbfu,0x3fu,0x18u,0xe1u,0x72u,0xdeu,0xb3u,0x31u,0x00u,0x1cu,0x94u,0xb5u,0x3cu,0x4du,0x1du,0xe0u,0x02u,0x2eu,0x45u,0x2fu,0xdau,0x16u,0x3eu,0x8du,0xecu,0xccu,0x7au,0xa2u,0x24u,0xabu,0xcdu,0xa2u,0x34u,0x0bu,0xd7u,0xdeu,0x8bu,0x93u,0x9fu,0x33u,0x16u,0x4bu,0xf7u,0x39u,0x4cu,0xafu,0x7au,0x13u,0x20u,0x62u,0xa8u,0x5cu,0x80u,0x9fu,0xd6u,0x83u,0xb0u,0x9au,0x9eu,0x38u,0x43u,0x51u,0x39u,0x61u,0x20u,0x44u,0x5fu,0x4au,0x3bu,0x4fu,0xe8u,0xb3u,0x28u,0x46u,
  /*  SEQUENCE */
  0x30u,0x48u,
  /*   n_RR   (R^2 in order field) */
  0x04u,0x42u,0x01u,0xeau,0x03u,0x91u,0xa3u,0x9au,0x5bu,0x5au,0x3au,0xfeu,0x8cu,0x44u,0x38u,0x3du,0x2du,0x8eu,0x03u,0xd1u,0x49u,0x2du,0x0du,0x45u,0x5bu,0xccu,0x6du,0x61u,0xa8u,0xe5u,0x67u,0xbcu,0xcfu,0xf3u,0xd1u,0x3du,0x47u,0x71u,0x0au,0x7fu,0x95u,0xe3u,0x35u,0x83u,0x8eu,0x57u,0xadu,0xa6u,0xe9u,0x91u,0x17u,0x1eu,0x2eu,0xf2u,0x1du,0x46u,0x42u,0xa2u,0x3fu,0xb7u,0x35u,0x1cu,0x54u,0x08u,0x56u,0xc0u,0xfbu,0xb8u,
  /*   n_bar   (low digit of -(n^-1)) */
  0x04u,0x02u,0x95u,0xc7u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1SpeedUpExt[1099] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /*  SEQUENCE */
  0x30u,0x82u,0x04u,0x47u,
  /*  groups parameter */
  0x04u,0x01u,0x03u,
  /*  SEQUENCE */
  0x30u,0x82u,0x04u,0x40u,
  /*  2 * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x9eu,0x10u,0xc8u,0x12u,0x13u,0xbfu,0x3fu,0x34u,0x17u,0xe5u,0x94u,0x40u,0xa4u,0x61u,0x41u,0x3au,0x3au,0x01u,0x93u,0xcdu,0x8eu,0x66u,0x03u,0x1au,0x96u,0x37u,0x2au,0x82u,0xebu,0xb4u,0xdfu,0x4bu,0xd9u,0xd9u,0x02u,0x6du,0x37u,0x7au,0xaau,0x83u,0xd5u,0x08u,0x25u,0x1du,0x1au,0xe2u,0xd7u,0xa0u,0xe7u,0x97u,0xd1u,0xb2u,0x6bu,0x07u,0xecu,0xb3u,0xfau,0x1fu,0x1cu,0x99u,0xddu,0x36u,0xbcu,0x1eu,0x90u,0x00u,0x5du,0xc6u,0x63u,0xfcu,0x36u,0xd9u,0x33u,0x80u,0x53u,0xf9u,0xf6u,0x77u,0x77u,0x69u,0xf8u,0x5au,0xe3u,0x5au,0x88u,0x3eu,0x26u,0xd4u,0xbbu,0xa0u,0x55u,0x90u,0xd1u,0x4cu,0x83u,0x62u,0x16u,0xddu,0xd9u,0xf1u,0xbbu,0xefu,0x4fu,0x92u,0x8fu,0xb5u,0xc9u,0xc9u,0xbfu,0xd4u,0xcdu,0x19u,0x24u,0x7au,0x75u,0x7eu,0x5fu,0x4au,0xf6u,0xe0u,0x7au,0x7bu,0x8du,0xf1u,0xabu,0x6bu,0x30u,0xfau,0x0du,0x81u,0x3du,
  /*  (2^174 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xe1u,0x51u,0x77u,0xdeu,0x42u,0x44u,0xaau,0x8eu,0xe7u,0x2cu,0xafu,0x4fu,0x9au,0x9bu,0x7fu,0x03u,0xd4u,0x89u,0x83u,0xe0u,0x29u,0xe1u,0x71u,0x95u,0x01u,0x11u,0xd0u,0x8cu,0xf0u,0x9eu,0x3du,0x8eu,0x89u,0xdcu,0x58u,0x7cu,0xbdu,0xbfu,0xb5u,0x83u,0x46u,0x90u,0x12u,0x37u,0x72u,0x61u,0x14u,0xe2u,0x5du,0x61u,0x01u,0xf7u,0x70u,0x19u,0x66u,0x03u,0x9bu,0x00u,0x2du,0x1bu,0xe3u,0xdcu,0x24u,0x50u,0x06u,0x01u,0x65u,0x10u,0x55u,0xa3u,0x7au,0x73u,0xf2u,0x90u,0xb4u,0x97u,0xb8u,0x96u,0x39u,0xecu,0x68u,0x80u,0x9cu,0x84u,0x3cu,0xa1u,0xf5u,0x24u,0xf1u,0x19u,0x88u,0x88u,0xbcu,0x65u,0x89u,0xa2u,0x47u,0xbcu,0x46u,0xbbu,0x90u,0x68u,0xfbu,0x9cu,0x8cu,0x39u,0xa4u,0x7au,0x03u,0x24u,0x05u,0x68u,0x26u,0xf0u,0x6du,0x0eu,0x2fu,0x9eu,0x40u,0xefu,0x93u,0x3bu,0x76u,0x91u,0x73u,0xdau,0x33u,0x84u,0x0du,0x7eu,0x96u,
  /*  (2^174 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x36u,0x4fu,0xacu,0x85u,0x6du,0x00u,0xf2u,0x4eu,0x2fu,0x9du,0x89u,0x81u,0x04u,0x7fu,0x3eu,0x03u,0xa3u,0xcau,0x57u,0xb3u,0x54u,0x4fu,0x02u,0x99u,0x0fu,0x4du,0x2fu,0xf9u,0x33u,0xcbu,0x96u,0x58u,0x23u,0x27u,0x9bu,0xcbu,0xbcu,0xd9u,0x6cu,0x80u,0xcdu,0x03u,0x7au,0xd9u,0x19u,0x12u,0x6bu,0x32u,0xe2u,0xb7u,0x4bu,0x24u,0x91u,0x5bu,0x79u,0x51u,0x1eu,0x81u,0x09u,0xffu,0x6au,0x5eu,0x75u,0x85u,0x85u,0x01u,0x11u,0xc7u,0x8cu,0xd0u,0x72u,0x64u,0xbdu,0xbeu,0x73u,0x43u,0x7fu,0xe5u,0xc1u,0x20u,0x3eu,0x74u,0xfdu,0xa7u,0xe8u,0x16u,0x3bu,0xdau,0x93u,0xd5u,0x7cu,0xdeu,0x89u,0x23u,0xecu,0x09u,0xeau,0x5fu,0x93u,0x90u,0x79u,0x30u,0xd9u,0x54u,0x1cu,0x1au,0x37u,0x24u,0x98u,0x8cu,0xceu,0x93u,0xa2u,0x9eu,0x59u,0x84u,0x8au,0xb0u,0x1eu,0x24u,0xa6u,0x36u,0x82u,0x6du,0xfbu,0x8cu,0xfdu,0xb6u,0x74u,0xf7u,0xacu,
  /*  (2^348 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x8cu,0x2cu,0xfeu,0x90u,0x6fu,0x1cu,0x23u,0x3eu,0xb0u,0x76u,0xa1u,0xf7u,0x67u,0x7au,0x2bu,0xcau,0xf2u,0xa9u,0x17u,0xd7u,0xf9u,0xfbu,0x6cu,0x75u,0x42u,0xd9u,0x25u,0xe2u,0x3au,0x47u,0x4bu,0xd6u,0x9eu,0x7cu,0xd7u,0xa6u,0xf1u,0x60u,0xbcu,0x3au,0x70u,0x39u,0x54u,0xc0u,0x56u,0x3bu,0x54u,0x46u,0x87u,0x3eu,0xc2u,0xacu,0xddu,0xdeu,0x0bu,0xacu,0x33u,0x5eu,0xcdu,0x06u,0xe6u,0xb4u,0xc3u,0x4bu,0xf5u,0x00u,0xc8u,0xf0u,0x5bu,0xa3u,0x73u,0x91u,0xf1u,0x3cu,0x04u,0xfdu,0xb9u,0x06u,0x58u,0xfbu,0xaeu,0x48u,0x0eu,0xdfu,0x52u,0xedu,0x74u,0x05u,0x6du,0x5au,0x23u,0x44u,0x3fu,0x3au,0x46u,0x0cu,0xd3u,0xbau,0x05u,0x1cu,0x5cu,0xa9u,0xcdu,0x13u,0x11u,0x41u,0x96u,0x58u,0x5au,0xb8u,0x77u,0x44u,0xfcu,0x7au,0x9bu,0x98u,0xdeu,0x63u,0xffu,0x72u,0x2au,0x76u,0xf3u,0x16u,0x3bu,0x5cu,0xacu,0x74u,0x0cu,0x0eu,0x71u,
  /*  (2^348 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xecu,0x3fu,0x0au,0x19u,0xefu,0xbau,0xafu,0xccu,0x4bu,0xffu,0x94u,0x65u,0xc1u,0xecu,0x0fu,0xd3u,0xc4u,0xd2u,0x67u,0x22u,0xc6u,0xebu,0x0bu,0x8bu,0xa9u,0xc2u,0xd7u,0x7du,0x80u,0x23u,0xc4u,0x64u,0xe6u,0x9bu,0x15u,0xd9u,0x81u,0xbfu,0x6au,0x56u,0x90u,0xacu,0xe1u,0x97u,0x65u,0x81u,0xc6u,0xdau,0x53u,0x36u,0xa1u,0x3fu,0xa7u,0x4du,0x01u,0x90u,0x55u,0xabu,0x41u,0xcfu,0x26u,0xceu,0x39u,0xa8u,0x46u,0x01u,0xa4u,0xddu,0xdeu,0xe9u,0xb2u,0x92u,0x9eu,0x4cu,0x3au,0xfbu,0x96u,0x26u,0x73u,0x18u,0xf9u,0x04u,0xb5u,0x5au,0x4au,0xe0u,0x60u,0x58u,0xb7u,0xb0u,0x0cu,0x13u,0xfdu,0xe5u,0x80u,0x3fu,0xf9u,0x2bu,0x8eu,0x8bu,0x7eu,0xa1u,0x10u,0x43u,0xb2u,0x6cu,0xd9u,0xccu,0xe1u,0x02u,0x07u,0x04u,0xe1u,0xbfu,0x30u,0x42u,0x04u,0xc9u,0x37u,0xa8u,0xd9u,0xd0u,0x09u,0xe4u,0x8cu,0x82u,0x6du,0x1du,0xa3u,0xebu,0x46u,
  /*  (2^348 + 2^174 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0x67u,0x9bu,0xa9u,0xddu,0x43u,0x03u,0xe7u,0xb4u,0x83u,0xc5u,0xd0u,0xbfu,0x7du,0x9eu,0xa6u,0x48u,0xe9u,0xd6u,0x8fu,0xabu,0xc3u,0xf7u,0x17u,0x61u,0x10u,0x10u,0x55u,0xcau,0x2du,0x38u,0xd5u,0xb4u,0x82u,0xffu,0xbcu,0x66u,0xbeu,0x23u,0x37u,0x84u,0x03u,0xdcu,0x85u,0x6cu,0xd5u,0xfeu,0x76u,0xc1u,0xf0u,0xf2u,0xc4u,0xf9u,0xe5u,0x54u,0x90u,0x7bu,0xaau,0xd2u,0xf4u,0x7au,0x32u,0x0du,0xbfu,0x04u,0x4eu,0x01u,0xb1u,0x9fu,0xfau,0x6fu,0xc9u,0x20u,0xbcu,0x36u,0x89u,0x33u,0x5bu,0x5cu,0xedu,0x2cu,0xc2u,0x1fu,0xabu,0x89u,0x1eu,0xccu,0xdeu,0xa4u,0x73u,0x38u,0xe9u,0xaau,0xa7u,0xd1u,0x7fu,0xc6u,0x95u,0xc1u,0xcbu,0x94u,0x4bu,0x6du,0x8fu,0x8bu,0x4bu,0x43u,0xa6u,0x4cu,0xa2u,0xb2u,0x17u,0xbbu,0xd4u,0x2eu,0xe9u,0x05u,0x9eu,0x84u,0x42u,0x2au,0x64u,0xbcu,0xdau,0xf1u,0xc8u,0xf1u,0x5cu,0xd9u,0x13u,0x00u,0x47u,
  /*  (2^348 + 2^174 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x3bu,0x98u,0x9bu,0x87u,0x4du,0x06u,0x72u,0x8du,0x7au,0x77u,0x20u,0xa9u,0xd6u,0xf1u,0xf8u,0xbcu,0x3au,0x39u,0x6fu,0x04u,0x4fu,0xeau,0x08u,0x93u,0xbdu,0x35u,0x1bu,0xffu,0xccu,0xd7u,0x5eu,0xdeu,0x0du,0x6au,0xfau,0xe5u,0x34u,0x97u,0x4bu,0x61u,0x8au,0x5eu,0x2cu,0x93u,0xf8u,0x6cu,0xc8u,0x47u,0xe5u,0x1bu,0x51u,0xbau,0x32u,0x35u,0xe0u,0x22u,0x69u,0x2au,0xc5u,0xf6u,0xdcu,0x31u,0x1eu,0xe0u,0x3du,0x01u,0xefu,0xfbu,0x64u,0x11u,0x06u,0x31u,0x02u,0xb2u,0xe4u,0xb7u,0x21u,0xb7u,0x1au,0xc5u,0x63u,0xc7u,0x63u,0xb3u,0x2cu,0x08u,0x13u,0xdbu,0x35u,0x78u,0x45u,0x6cu,0xddu,0x7du,0xaau,0x9cu,0x0cu,0x45u,0x37u,0xfeu,0x2eu,0xf8u,0x73u,0x35u,0xdau,0x6du,0x3bu,0x6au,0x39u,0x48u,0x4fu,0xbbu,0xceu,0xdau,0xbau,0x6bu,0xb0u,0x6bu,0xccu,0xeau,0xdau,0xc2u,0x5fu,0x27u,0x0eu,0xedu,0x90u,0x57u,0x32u,0x5eu,0x2bu,
  /*  correction point D = - ((2^174 - 1) * G) in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0x3au,0x67u,0xe5u,0xe1u,0x41u,0xb5u,0x93u,0xf6u,0xc7u,0x9cu,0x37u,0x00u,0x20u,0x7du,0x83u,0xcbu,0x87u,0x5fu,0x2au,0x22u,0xdfu,0x95u,0x81u,0x8cu,0x5eu,0xa0u,0x2du,0x84u,0x05u,0xa4u,0xb3u,0x3au,0x69u,0x06u,0x98u,0xfdu,0xc0u,0x3eu,0xadu,0x83u,0x83u,0x40u,0x79u,0xadu,0x6eu,0xe1u,0x3bu,0x59u,0x60u,0xb4u,0x65u,0xb5u,0x96u,0x5bu,0xd5u,0x4eu,0x79u,0xf0u,0xf7u,0xb6u,0x57u,0x92u,0x99u,0x39u,0xd9u,0x00u,0x79u,0x0du,0x13u,0x65u,0x21u,0xb9u,0x51u,0x80u,0xeau,0xd6u,0x4bu,0xe9u,0x83u,0xc1u,0x3au,0x91u,0x3du,0x85u,0x8cu,0xf5u,0x0cu,0x74u,0x4cu,0x47u,0xe0u,0xc7u,0x32u,0x98u,0xd8u,0x5au,0xa2u,0x8eu,0xceu,0xbau,0xedu,0x8eu,0x3eu,0x9cu,0x05u,0xb2u,0x30u,0x35u,0x91u,0x13u,0xc2u,0x4cu,0xe3u,0x56u,0xebu,0x9cu,0xc0u,0x07u,0x2cu,0x68u,0x5cu,0x6fu,0xfau,0xb3u,0xd3u,0x55u,0xe3u,0x32u,0x37u,0xdfu,0x15u,
};

# elif (CRYPTO_30_LIBCV_BYTES_PER_DIGIT == 4)  /* COV_CRYPTO_30_LIBCV_BYTES_PER_DIGIT_DEFINE */
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1Domain[432] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u,0x82u,0x01u,0xacu,
  /* version */
  0x02u,0x01u,0x01u,
  /* SEQUENCE */
  0x30u,0x4du,
  /* prime OID */
  0x06u,0x07u,0x2au,0x86u,0x48u,0xceu,0x3du,0x01u,0x01u,
  /* p   (field prime) */
  0x02u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,
  /* SEQUENCE */
  0x30u,0x81u,0x88u,
  /* a   (coefficient a of the curve equation) */
  0x04u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfcu,
  /* b   (coefficient b of the curve equation) */
  0x04u,0x42u,0x00u,0x51u,0x95u,0x3eu,0xb9u,0x61u,0x8eu,0x1cu,0x9au,0x1fu,0x92u,0x9au,0x21u,0xa0u,0xb6u,0x85u,0x40u,0xeeu,0xa2u,0xdau,0x72u,0x5bu,0x99u,0xb3u,0x15u,0xf3u,0xb8u,0xb4u,0x89u,0x91u,0x8eu,0xf1u,0x09u,0xe1u,0x56u,0x19u,0x39u,0x51u,0xecu,0x7eu,0x93u,0x7bu,0x16u,0x52u,0xc0u,0xbdu,0x3bu,0xb1u,0xbfu,0x07u,0x35u,0x73u,0xdfu,0x88u,0x3du,0x2cu,0x34u,0xf1u,0xefu,0x45u,0x1fu,0xd4u,0x6bu,0x50u,0x3fu,0x00u,
  /* G   (basepoint of the curve) */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xc6u,0x85u,0x8eu,0x06u,0xb7u,0x04u,0x04u,0xe9u,0xcdu,0x9eu,0x3eu,0xcbu,0x66u,0x23u,0x95u,0xb4u,0x42u,0x9cu,0x64u,0x81u,0x39u,0x05u,0x3fu,0xb5u,0x21u,0xf8u,0x28u,0xafu,0x60u,0x6bu,0x4du,0x3du,0xbau,0xa1u,0x4bu,0x5eu,0x77u,0xefu,0xe7u,0x59u,0x28u,0xfeu,0x1du,0xc1u,0x27u,0xa2u,0xffu,0xa8u,0xdeu,0x33u,0x48u,0xb3u,0xc1u,0x85u,0x6au,0x42u,0x9bu,0xf9u,0x7eu,0x7eu,0x31u,0xc2u,0xe5u,0xbdu,0x66u,0x01u,0x18u,0x39u,0x29u,0x6au,0x78u,0x9au,0x3bu,0xc0u,0x04u,0x5cu,0x8au,0x5fu,0xb4u,0x2cu,0x7du,0x1bu,0xd9u,0x98u,0xf5u,0x44u,0x49u,0x57u,0x9bu,0x44u,0x68u,0x17u,0xafu,0xbdu,0x17u,0x27u,0x3eu,0x66u,0x2cu,0x97u,0xeeu,0x72u,0x99u,0x5eu,0xf4u,0x26u,0x40u,0xc5u,0x50u,0xb9u,0x01u,0x3fu,0xadu,0x07u,0x61u,0x35u,0x3cu,0x70u,0x86u,0xa2u,0x72u,0xc2u,0x40u,0x88u,0xbeu,0x94u,0x76u,0x9fu,0xd1u,0x66u,0x50u,
  /* n   (order of G) */
  0x02u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfau,0x51u,0x86u,0x87u,0x83u,0xbfu,0x2fu,0x96u,0x6bu,0x7fu,0xccu,0x01u,0x48u,0xf7u,0x09u,0xa5u,0xd0u,0x3bu,0xb5u,0xc9u,0xb8u,0x89u,0x9cu,0x47u,0xaeu,0xbbu,0x6fu,0xb7u,0x1eu,0x91u,0x38u,0x64u,0x09u,
  /* h   (cofactor) */
  0x02u,0x01u,0x01u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1DomainExt[433] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u,0x82u,0x01u,0xadu,
  /* SEQUENCE */
  0x30u,0x82u,0x01u,0x5du,
  /* p_RR  (R^2 in prime field) */
  0x04u,0x42u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x00u,0x40u,0x00u,0x00u,0x00u,0x00u,0x00u,
  /* p_bar   (low digit of -(p^-1)) */
  0x04u,0x04u,0x00u,0x00u,0x00u,0x01u,
  /* SEQUENCE */
  0x30u,0x81u,0x88u,
  /* a_R   (a in Montgomery representation) */
  0x04u,0x42u,0x01u,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xffu,0xfeu,0x7fu,0xffu,0xffu,
  /* b_R   (b in Montgomery representation) */
  0x04u,0x42u,0x01u,0x5cu,0xb0u,0xc7u,0x0eu,0x4du,0x0fu,0xc9u,0x4du,0x10u,0xd0u,0x5bu,0x42u,0xa0u,0x77u,0x51u,0x6du,0x39u,0x2du,0xccu,0xd9u,0x8au,0xf9u,0xdcu,0x5au,0x44u,0xc8u,0xc7u,0x78u,0x84u,0xf0u,0xabu,0x0cu,0x9cu,0xa8u,0xf6u,0x3fu,0x49u,0xbdu,0x8bu,0x29u,0x60u,0x5eu,0x9du,0xd8u,0xdfu,0x83u,0x9au,0xb9u,0xefu,0xc4u,0x1eu,0x96u,0x1au,0x78u,0xf7u,0xa2u,0x8fu,0xeau,0x35u,0xa8u,0x1fu,0x80u,0x14u,0x65u,0x4fu,
  /* G_R   (G in Montgomery representation) */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x03u,0x5bu,0x82u,0x02u,0x74u,0xe6u,0xcfu,0x1fu,0x65u,0xb3u,0x11u,0xcau,0xdau,0x21u,0x4eu,0x32u,0x40u,0x9cu,0x82u,0x9fu,0xdau,0x90u,0xfcu,0x14u,0x57u,0xb0u,0x35u,0xa6u,0x9eu,0xddu,0x50u,0xa5u,0xafu,0x3bu,0xf7u,0xf3u,0xacu,0x94u,0x7fu,0x0eu,0xe0u,0x93u,0xd1u,0x7fu,0xd4u,0x6fu,0x19u,0xa4u,0x59u,0xe0u,0xc2u,0xb5u,0x21u,0x4du,0xfcu,0xbfu,0x3fu,0x18u,0xe1u,0x72u,0xdeu,0xb3u,0x31u,0xa1u,0x63u,0x00u,0xb5u,0x3cu,0x4du,0x1du,0xe0u,0x02u,0x2eu,0x45u,0x2fu,0xdau,0x16u,0x3eu,0x8du,0xecu,0xccu,0x7au,0xa2u,0x24u,0xabu,0xcdu,0xa2u,0x34u,0x0bu,0xd7u,0xdeu,0x8bu,0x93u,0x9fu,0x33u,0x16u,0x4bu,0xf7u,0x39u,0x4cu,0xafu,0x7au,0x13u,0x20u,0x62u,0xa8u,0x5cu,0x80u,0x9fu,0xd6u,0x83u,0xb0u,0x9au,0x9eu,0x38u,0x43u,0x51u,0x39u,0x61u,0x20u,0x44u,0x5fu,0x4au,0x3bu,0x4fu,0xe8u,0xb3u,0x28u,0x46u,0x0eu,0x4au,
  /* SEQUENCE */
  0x30u,0x4au,
  /* n_RR   (R^2 in order field) */
  0x04u,0x42u,0x01u,0x9au,0x5bu,0x5au,0x3au,0xfeu,0x8cu,0x44u,0x38u,0x3du,0x2du,0x8eu,0x03u,0xd1u,0x49u,0x2du,0x0du,0x45u,0x5bu,0xccu,0x6du,0x61u,0xa8u,0xe5u,0x67u,0xbcu,0xcfu,0xf3u,0xd1u,0x42u,0xb7u,0x75u,0x6eu,0x3au,0x4fu,0xb3u,0x5bu,0x72u,0xd3u,0x40u,0x27u,0x05u,0x5du,0x4du,0xd6u,0xd3u,0x07u,0x91u,0xd9u,0xdcu,0x18u,0x35u,0x4au,0x56u,0x43u,0x74u,0xa6u,0x42u,0x11u,0x63u,0x11u,0x5au,0x61u,0xc6u,0x4cu,0xa7u,
  /* n_bar   (low digit of -(n^-1)) */
  0x04u,0x04u,0x79u,0xa9u,0x95u,0xc7u,
};
CONST(uint8, CRYPTO_30_LIBCV_CONST) Crypto_30_LibCv_EccCurveNistSecP521R1SpeedUpExt[1099] = { /* PRQA S 1514, 1533, 3218 */ /* MD_CRYPTO_30_LIBCV_8.7 */
  /* SEQUENCE */
  0x30u,0x82u,0x04u,0x47u,
  /* groups parameter */
  0x04u,0x01u,0x03u,
  /* SEQUENCE */
  0x30u,0x82u,0x04u,0x40u,
  /* 2 * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xc8u,0x12u,0x13u,0xbfu,0x3fu,0x34u,0x17u,0xe5u,0x94u,0x40u,0xa4u,0x61u,0x41u,0x3au,0x3au,0x01u,0x93u,0xcdu,0x8eu,0x66u,0x03u,0x1au,0x96u,0x37u,0x2au,0x82u,0xebu,0xb4u,0xdfu,0x4bu,0xd9u,0xd9u,0x02u,0x6du,0x37u,0x7au,0xaau,0x83u,0xd5u,0x08u,0x25u,0x1du,0x1au,0xe2u,0xd7u,0xa0u,0xe7u,0x97u,0xd1u,0xb2u,0x6bu,0x07u,0xecu,0xb3u,0xfau,0x1fu,0x1cu,0x99u,0xddu,0x36u,0xbcu,0x1eu,0x90u,0xcfu,0x08u,0x00u,0x63u,0xfcu,0x36u,0xd9u,0x33u,0x80u,0x53u,0xf9u,0xf6u,0x77u,0x77u,0x69u,0xf8u,0x5au,0xe3u,0x5au,0x88u,0x3eu,0x26u,0xd4u,0xbbu,0xa0u,0x55u,0x90u,0xd1u,0x4cu,0x83u,0x62u,0x16u,0xddu,0xd9u,0xf1u,0xbbu,0xefu,0x4fu,0x92u,0x8fu,0xb5u,0xc9u,0xc9u,0xbfu,0xd4u,0xcdu,0x19u,0x24u,0x7au,0x75u,0x7eu,0x5fu,0x4au,0xf6u,0xe0u,0x7au,0x7bu,0x8du,0xf1u,0xabu,0x6bu,0x30u,0xfau,0x0du,0x81u,0x3du,0x2eu,0xe3u,
  /* (2^174 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x77u,0xdeu,0x42u,0x44u,0xaau,0x8eu,0xe7u,0x2cu,0xafu,0x4fu,0x9au,0x9bu,0x7fu,0x03u,0xd4u,0x89u,0x83u,0xe0u,0x29u,0xe1u,0x71u,0x95u,0x01u,0x11u,0xd0u,0x8cu,0xf0u,0x9eu,0x3du,0x8eu,0x89u,0xdcu,0x58u,0x7cu,0xbdu,0xbfu,0xb5u,0x83u,0x46u,0x90u,0x12u,0x37u,0x72u,0x61u,0x14u,0xe2u,0x5du,0x61u,0x01u,0xf7u,0x70u,0x19u,0x66u,0x03u,0x9bu,0x00u,0x2du,0x1bu,0xe3u,0xdcu,0x24u,0x50u,0x06u,0x70u,0xa8u,0x00u,0x55u,0xa3u,0x7au,0x73u,0xf2u,0x90u,0xb4u,0x97u,0xb8u,0x96u,0x39u,0xecu,0x68u,0x80u,0x9cu,0x84u,0x3cu,0xa1u,0xf5u,0x24u,0xf1u,0x19u,0x88u,0x88u,0xbcu,0x65u,0x89u,0xa2u,0x47u,0xbcu,0x46u,0xbbu,0x90u,0x68u,0xfbu,0x9cu,0x8cu,0x39u,0xa4u,0x7au,0x03u,0x24u,0x05u,0x68u,0x26u,0xf0u,0x6du,0x0eu,0x2fu,0x9eu,0x40u,0xefu,0x93u,0x3bu,0x76u,0x91u,0x73u,0xdau,0x33u,0x84u,0x0du,0x7eu,0x96u,0xb2u,0x88u,
  /* (2^174 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0xacu,0x85u,0x6du,0x00u,0xf2u,0x4eu,0x2fu,0x9du,0x89u,0x81u,0x04u,0x7fu,0x3eu,0x03u,0xa3u,0xcau,0x57u,0xb3u,0x54u,0x4fu,0x02u,0x99u,0x0fu,0x4du,0x2fu,0xf9u,0x33u,0xcbu,0x96u,0x58u,0x23u,0x27u,0x9bu,0xcbu,0xbcu,0xd9u,0x6cu,0x80u,0xcdu,0x03u,0x7au,0xd9u,0x19u,0x12u,0x6bu,0x32u,0xe2u,0xb7u,0x4bu,0x24u,0x91u,0x5bu,0x79u,0x51u,0x1eu,0x81u,0x09u,0xffu,0x6au,0x5eu,0x75u,0x85u,0x85u,0x9bu,0x27u,0x01u,0x8cu,0xd0u,0x72u,0x64u,0xbdu,0xbeu,0x73u,0x43u,0x7fu,0xe5u,0xc1u,0x20u,0x3eu,0x74u,0xfdu,0xa7u,0xe8u,0x16u,0x3bu,0xdau,0x93u,0xd5u,0x7cu,0xdeu,0x89u,0x23u,0xecu,0x09u,0xeau,0x5fu,0x93u,0x90u,0x79u,0x30u,0xd9u,0x54u,0x1cu,0x1au,0x37u,0x24u,0x98u,0x8cu,0xceu,0x93u,0xa2u,0x9eu,0x59u,0x84u,0x8au,0xb0u,0x1eu,0x24u,0xa6u,0x36u,0x82u,0x6du,0xfbu,0x8cu,0xfdu,0xb6u,0x74u,0xf7u,0xacu,0x88u,0xe3u,
  /* (2^348 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0xfeu,0x90u,0x6fu,0x1cu,0x23u,0x3eu,0xb0u,0x76u,0xa1u,0xf7u,0x67u,0x7au,0x2bu,0xcau,0xf2u,0xa9u,0x17u,0xd7u,0xf9u,0xfbu,0x6cu,0x75u,0x42u,0xd9u,0x25u,0xe2u,0x3au,0x47u,0x4bu,0xd6u,0x9eu,0x7cu,0xd7u,0xa6u,0xf1u,0x60u,0xbcu,0x3au,0x70u,0x39u,0x54u,0xc0u,0x56u,0x3bu,0x54u,0x46u,0x87u,0x3eu,0xc2u,0xacu,0xddu,0xdeu,0x0bu,0xacu,0x33u,0x5eu,0xcdu,0x06u,0xe6u,0xb4u,0xc3u,0x4bu,0xf5u,0xc6u,0x16u,0x00u,0x5bu,0xa3u,0x73u,0x91u,0xf1u,0x3cu,0x04u,0xfdu,0xb9u,0x06u,0x58u,0xfbu,0xaeu,0x48u,0x0eu,0xdfu,0x52u,0xedu,0x74u,0x05u,0x6du,0x5au,0x23u,0x44u,0x3fu,0x3au,0x46u,0x0cu,0xd3u,0xbau,0x05u,0x1cu,0x5cu,0xa9u,0xcdu,0x13u,0x11u,0x41u,0x96u,0x58u,0x5au,0xb8u,0x77u,0x44u,0xfcu,0x7au,0x9bu,0x98u,0xdeu,0x63u,0xffu,0x72u,0x2au,0x76u,0xf3u,0x16u,0x3bu,0x5cu,0xacu,0x74u,0x0cu,0x0eu,0x71u,0x64u,0x78u,
  /* (2^348 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0x0au,0x19u,0xefu,0xbau,0xafu,0xccu,0x4bu,0xffu,0x94u,0x65u,0xc1u,0xecu,0x0fu,0xd3u,0xc4u,0xd2u,0x67u,0x22u,0xc6u,0xebu,0x0bu,0x8bu,0xa9u,0xc2u,0xd7u,0x7du,0x80u,0x23u,0xc4u,0x64u,0xe6u,0x9bu,0x15u,0xd9u,0x81u,0xbfu,0x6au,0x56u,0x90u,0xacu,0xe1u,0x97u,0x65u,0x81u,0xc6u,0xdau,0x53u,0x36u,0xa1u,0x3fu,0xa7u,0x4du,0x01u,0x90u,0x55u,0xabu,0x41u,0xcfu,0x26u,0xceu,0x39u,0xa8u,0x46u,0x76u,0x1fu,0x01u,0xdeu,0xe9u,0xb2u,0x92u,0x9eu,0x4cu,0x3au,0xfbu,0x96u,0x26u,0x73u,0x18u,0xf9u,0x04u,0xb5u,0x5au,0x4au,0xe0u,0x60u,0x58u,0xb7u,0xb0u,0x0cu,0x13u,0xfdu,0xe5u,0x80u,0x3fu,0xf9u,0x2bu,0x8eu,0x8bu,0x7eu,0xa1u,0x10u,0x43u,0xb2u,0x6cu,0xd9u,0xccu,0xe1u,0x02u,0x07u,0x04u,0xe1u,0xbfu,0x30u,0x42u,0x04u,0xc9u,0x37u,0xa8u,0xd9u,0xd0u,0x09u,0xe4u,0x8cu,0x82u,0x6du,0x1du,0xa3u,0xebu,0x46u,0xd2u,0x6eu,
  /* (2^348 + 2^174 + 1) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0xa9u,0xddu,0x43u,0x03u,0xe7u,0xb4u,0x83u,0xc5u,0xd0u,0xbfu,0x7du,0x9eu,0xa6u,0x48u,0xe9u,0xd6u,0x8fu,0xabu,0xc3u,0xf7u,0x17u,0x61u,0x10u,0x10u,0x55u,0xcau,0x2du,0x38u,0xd5u,0xb4u,0x82u,0xffu,0xbcu,0x66u,0xbeu,0x23u,0x37u,0x84u,0x03u,0xdcu,0x85u,0x6cu,0xd5u,0xfeu,0x76u,0xc1u,0xf0u,0xf2u,0xc4u,0xf9u,0xe5u,0x54u,0x90u,0x7bu,0xaau,0xd2u,0xf4u,0x7au,0x32u,0x0du,0xbfu,0x04u,0x4eu,0x33u,0xcdu,0x01u,0xfau,0x6fu,0xc9u,0x20u,0xbcu,0x36u,0x89u,0x33u,0x5bu,0x5cu,0xedu,0x2cu,0xc2u,0x1fu,0xabu,0x89u,0x1eu,0xccu,0xdeu,0xa4u,0x73u,0x38u,0xe9u,0xaau,0xa7u,0xd1u,0x7fu,0xc6u,0x95u,0xc1u,0xcbu,0x94u,0x4bu,0x6du,0x8fu,0x8bu,0x4bu,0x43u,0xa6u,0x4cu,0xa2u,0xb2u,0x17u,0xbbu,0xd4u,0x2eu,0xe9u,0x05u,0x9eu,0x84u,0x42u,0x2au,0x64u,0xbcu,0xdau,0xf1u,0xc8u,0xf1u,0x5cu,0xd9u,0x13u,0x00u,0x47u,0xd8u,0xcfu,
  /* (2^348 + 2^174 + 2) * G in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x00u,0x9bu,0x87u,0x4du,0x06u,0x72u,0x8du,0x7au,0x77u,0x20u,0xa9u,0xd6u,0xf1u,0xf8u,0xbcu,0x3au,0x39u,0x6fu,0x04u,0x4fu,0xeau,0x08u,0x93u,0xbdu,0x35u,0x1bu,0xffu,0xccu,0xd7u,0x5eu,0xdeu,0x0du,0x6au,0xfau,0xe5u,0x34u,0x97u,0x4bu,0x61u,0x8au,0x5eu,0x2cu,0x93u,0xf8u,0x6cu,0xc8u,0x47u,0xe5u,0x1bu,0x51u,0xbau,0x32u,0x35u,0xe0u,0x22u,0x69u,0x2au,0xc5u,0xf6u,0xdcu,0x31u,0x1eu,0xe0u,0x3du,0x9du,0xccu,0x01u,0x64u,0x11u,0x06u,0x31u,0x02u,0xb2u,0xe4u,0xb7u,0x21u,0xb7u,0x1au,0xc5u,0x63u,0xc7u,0x63u,0xb3u,0x2cu,0x08u,0x13u,0xdbu,0x35u,0x78u,0x45u,0x6cu,0xddu,0x7du,0xaau,0x9cu,0x0cu,0x45u,0x37u,0xfeu,0x2eu,0xf8u,0x73u,0x35u,0xdau,0x6du,0x3bu,0x6au,0x39u,0x48u,0x4fu,0xbbu,0xceu,0xdau,0xbau,0x6bu,0xb0u,0x6bu,0xccu,0xeau,0xdau,0xc2u,0x5fu,0x27u,0x0eu,0xedu,0x90u,0x57u,0x32u,0x5eu,0x2bu,0xf7u,0xfdu,
  /* correction point D = - ((2^174 - 1) * G) in Montgomery representation */
  0x04u,0x81u,0x85u,0x04u,0x01u,0xe5u,0xe1u,0x41u,0xb5u,0x93u,0xf6u,0xc7u,0x9cu,0x37u,0x00u,0x20u,0x7du,0x83u,0xcbu,0x87u,0x5fu,0x2au,0x22u,0xdfu,0x95u,0x81u,0x8cu,0x5eu,0xa0u,0x2du,0x84u,0x05u,0xa4u,0xb3u,0x3au,0x69u,0x06u,0x98u,0xfdu,0xc0u,0x3eu,0xadu,0x83u,0x83u,0x40u,0x79u,0xadu,0x6eu,0xe1u,0x3bu,0x59u,0x60u,0xb4u,0x65u,0xb5u,0x96u,0x5bu,0xd5u,0x4eu,0x79u,0xf0u,0xf7u,0xb6u,0x57u,0x92u,0x99u,0x39u,0xd9u,0x1du,0x33u,0x01u,0x13u,0x65u,0x21u,0xb9u,0x51u,0x80u,0xeau,0xd6u,0x4bu,0xe9u,0x83u,0xc1u,0x3au,0x91u,0x3du,0x85u,0x8cu,0xf5u,0x0cu,0x74u,0x4cu,0x47u,0xe0u,0xc7u,0x32u,0x98u,0xd8u,0x5au,0xa2u,0x8eu,0xceu,0xbau,0xedu,0x8eu,0x3eu,0x9cu,0x05u,0xb2u,0x30u,0x35u,0x91u,0x13u,0xc2u,0x4cu,0xe3u,0x56u,0xebu,0x9cu,0xc0u,0x07u,0x2cu,0x68u,0x5cu,0x6fu,0xfau,0xb3u,0xd3u,0x55u,0xe3u,0x32u,0x37u,0xdfu,0x15u,0x3cu,0x86u,
};
# else /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
#  error "Value of CRYPTO_30_LIBCV_BYTES_PER_DIGIT is not supported"
# endif /* CRYPTO_30_LIBCV_BYTES_PER_DIGIT */
/* NIST_SEC_p521r1 END *********************************************************************************************/

# define CRYPTO_30_LIBCV_STOP_SEC_CONST_8BIT
# include "Crypto_30_LibCv_MemMap.h" /* PRQA S 5087 */ /* MD_MSR_MemMap */

/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

#endif /* CRYPTO_30_LIBCV_CURVE_INT_H */
/**********************************************************************************************************************
 *  END OF FILE: CRYPTO_30_LIBCV_CURVE_INT.H
 *********************************************************************************************************************/
