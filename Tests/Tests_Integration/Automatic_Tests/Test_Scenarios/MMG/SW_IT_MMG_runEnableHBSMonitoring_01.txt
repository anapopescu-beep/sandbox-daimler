					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_MMG_0206
ARCH_SW_MMG_0206: BMM_runEnableHBSMonitoring shall be called to notify BMM about restoring the puls counting.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Set a breakpoint in function MMG_runUpdateModeStatus() at line 'if(B_TRUE == MMG_b8MMGHAsBeenInitialized)'.

	Step 3: Check if CPU stopped in function MMG_runUpdateModeStatus() at line 'if(B_TRUE == MMG_b8MMGHAsBeenInitialized)'.

	Step 4: Set a breakpoint at line mmg_UpdateModeStatus_NoHallEffectSensor() and press run.

	Step 5: Step in mmg_UpdateModeStatus_NoHallEffectSensor.

	Step 6: Set a breakpoint in function mmg_UpdateModeStatus_NoHallEffectSensor() at line 'if (KU8_TRUE == MMG_u8PrevHESModeStatus)' and press run.

	Step 7: Check if CPU stopped in function mmg_UpdateModeStatus_NoHallEffectSensor() at line 'if (KU8_TRUE == MMG_u8PrevHESModeStatus)'.

	Step 8: Set variable MMG_u8PrevHESModeStatus to KU8_TRUE.

	Step 9: Set a breakpoint in function mmg_UpdateModeStatus_NoHallEffectSensor() at line 'Rte_Call_pcl_HBSControl_EnableHBSMonitoring();'.

	Step 10: Check if CPU stopped in function mmg_UpdateModeStatus_NoHallEffectSensor() at line 'Rte_Call_pcl_HBSControl_EnableHBSMonitoring();'.

	Step 11: Step in function Rte_Call_pcl_HBSControl_EnableHBSMonitoring. 
		Expected result:  BMM_runEnableHBSMonitoring,,app.elf

	Step 12: Set a breakpoint in function BMM_runEnableHBSMonitoring().

Action: ARCH_SW_MMG_0206

	Step 13: Check if CPU stopped in function BMM_runEnableHBSMonitoring().

Postcondition

	Step 14: Return ECU to default values
