					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_ERH_0070
ARCH_SW_ERH_0070: All AECs status shall be reset if the function is called.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Set a breakpoint in function ERH_ResetAllAECStatus() at line 'erh_au8AecStatus[u8OutputIndex] = KU8_ZERO;' under 'if (ERH_KU8_AEC_QUALIFIED_STATUS_MASK == (erh_au8AecStatus[u8OutputIndex] & ERH_KU8_AEC_QUALIFIED_STATUS_MASK))'.

	Step 3: Start Development Session.

	Step 4: Send diagnostic request 14 FF FF FF.

Action: ARCH_SW_ERH_0070

	Step 5: Check if CPU stopped in function ERH_ResetAllAECStatus() at line 'erh_au8AecStatus[u8OutputIndex] = KU8_ZERO;' under 'if (ERH_KU8_AEC_QUALIFIED_STATUS_MASK == (erh_au8AecStatus[u8OutputIndex] & ERH_KU8_AEC_QUALIFIED_STATUS_MASK))'. 
		Expected result:  CPU stopped at BP

	Step 6: Set a breakpoint in function ERH_ResetAllAECStatus() at line 'NVP_BLOCK_ID_AEC_STATUS_RamBlockData.NVP_au8AECStatus[u8OutputIndex] = (erh_au8AecStatus[u8OutputIndex] & (uint8) (~(uint32) ERH_KU8_AEC_EVER_TESTED_STATUS_MASK));'.

Action: ARCH_SW_ERH_0070

	Step 7: Check if CPU stopped in function ERH_ResetAllAECStatus() at line 'NVP_BLOCK_ID_AEC_STATUS_RamBlockData.NVP_au8AECStatus[u8OutputIndex] = (erh_au8AecStatus[u8OutputIndex] & (uint8) (~(uint32) ERH_KU8_AEC_EVER_TESTED_STATUS_MASK));'. 
		Expected result:  CPU stopped at BP

Postcondition

	Step 8: Return ECU to default values
