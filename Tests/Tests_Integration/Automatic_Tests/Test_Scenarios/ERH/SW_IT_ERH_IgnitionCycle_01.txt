					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_ERH_0093, ARCH_SW_ERH_0094, ARCH_SW_ERH_0095
ARCH_SW_ERH_0093: The ERH component shall be able to manage a 10s delay in order to enable the start of a DEM Ignition Cycle.
ARCH_SW_ERH_0094: Transition from  'Ignition off' to 'Ignition on' shall start the delay timer. Status of Ignition signal is get through RTE(Rte_Read_ERH_AC_ErrorHandler_prrIgnitionStatus_b8TriggerIgnitionStatus) interface from CIL module.
ARCH_SW_ERH_0095: Transition from  'Ignition off' to 'Ignition on' shall start the delay timer. Status of Ignition signal is get through RTE(Rte_Read_ERH_AC_ErrorHandler_prrIgnitionStatus_b8TriggerIgnitionStatus) interface from CIL module.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Set a breakpoint in function CIL_runCANToAppli() at line 'Rte_Write_psrIgnitionStatus_b8TriggerIgnitionStatusEnableStorageCondition(KU8_TRUE);'.

Action: ARCH_SW_ERH_0094, ARCH_SW_ERH_0095

	Step 3: Check if CPU stopped in function CIL_runCANToAppli() at line 'Rte_Write_psrIgnitionStatus_b8TriggerIgnitionStatusEnableStorageCondition(KU8_TRUE);'.
		Expected result:  CPU stopped at BP

	Step 4: Set a breakpoint in function ERH_cyclic() at line '(void)Rte_Read_prrIgnitionStatus_b8TriggerIgnitionStatus(&u8IgnitionStatus);'.

Action: ARCH_SW_ERH_0093, ARCH_SW_ERH_0094, ARCH_SW_ERH_0095

	Step 5: Check if CPU stopped in function ERH_cyclic() at line '(void)Rte_Read_prrIgnitionStatus_b8TriggerIgnitionStatus(&u8IgnitionStatus);'.
		Expected result:  CPU stopped at BP

	Step 6: Set a variable Rte_CIL_psrIgnitionStatus_b8TriggerIgnitionStatus to KU8_TRUE'.

	Step 7: Set a breakpoint in function ERH_cyclic() at line 'erh_u16DebounceCounter++;'.

	Step 8: Check if CPU stopped in function ERH_cyclic() at line 'erh_u16DebounceCounter++;'.
		Expected result:  CPU stopped at BP

	Step 9: Set a breakpoint in function ERH_cyclic() at line '(void)Dem_SetOperationCycleState(DemConf_DemOperationCycle_IgnitionCycle, DEM_CYCLE_STATE_START);'.

Action: ARCH_SW_ERH_0093, ARCH_SW_ERH_0094, ARCH_SW_ERH_0095

	Step 10: Check if CPU stopped in function ERH_cyclic() at line '(void)Dem_SetOperationCycleState(DemConf_DemOperationCycle_IgnitionCycle, DEM_CYCLE_STATE_START);'.
		Expected result:  CPU stopped at BP

Postcondition

	Step 11: Return ECU to default values
