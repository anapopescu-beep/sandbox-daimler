					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_CIL_0425
ARCH_SW_CIL_0425: For the following autotests a counter shall start for deskill of timeout erros: �	CIL_Autotest_Presafe_CheckTimeoutError; �	CIL_Autotest_Buckle_CheckTimeoutError; �	CIL_Autotest_CheckTimeoutError_BelthandoverL; �	CIL_Autotest_CheckTimeoutError_BelthandoverR; �	CIL_Autotest_CheckTimeoutError_Powertrain; If deskill counter is equal to notification counter and  qualification threshold, then autotest is passed.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Set a breakpoint in function CIL_Autotest_Presafe_CheckTimeoutError() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'.

Action: ARCH_SW_CIL_0425

	Step 3: Check if CPU stopped in function CIL_Autotest_Presafe_CheckTimeoutError() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'. 
		Expected result:  CPU is Stopped

Action: ARCH_SW_CIL_0425

	Step 4: Evaluate if variable cil_u8CounterNotifPresf is equal to variable cil_u8DeskillCounterPresf. 
		Expected result:  cil_u8CounterNotifPresf is equal to cil_u8DeskillCounterPresf

	Step 5: Set a breakpoint in function CIL_Autotest_Buckle_CheckTimeoutError() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'.

Action: ARCH_SW_CIL_0425

	Step 6: Check if CPU stopped in function CIL_Autotest_Buckle_CheckTimeoutError() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'. 
		Expected result:  CPU is Stopped

Action: ARCH_SW_CIL_0425

	Step 7: Evaluate if variable cil_u8CounterNotifPresf is equal to variable cil_u8DeskillCounterPresf. 
		Expected result:  cil_u8CounterNotifPresf is equal to cil_u8DeskillCounterPresf

	Step 8: Set a breakpoint in function CIL_Autotest_CheckTimeoutError_BelthandoverL() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'.

Action: ARCH_SW_CIL_0425

	Step 9: Check if CPU stopped in function CIL_Autotest_CheckTimeoutError_BelthandoverL() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'. 
		Expected result:  CPU is Stopped

Action: ARCH_SW_CIL_0425

	Step 10: Evaluate if variable cil_u8CounterNotifPresf is equal to variable cil_u8DeskillCounterPresf. 
		Expected result:  cil_u8CounterNotifPresf is equal to cil_u8DeskillCounterPresf

	Step 11: Set a breakpoint in function CIL_Autotest_CheckTimeoutError_BelthandoverR() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'.

Action: ARCH_SW_CIL_0425

	Step 12: Check if CPU stopped in function CIL_Autotest_CheckTimeoutError_BelthandoverR() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'. 
		Expected result:  CPU is Stopped

Action: ARCH_SW_CIL_0425

	Step 13: Evaluate if variable cil_u8CounterNotifPresf is equal to variable cil_u8DeskillCounterPresf. 
		Expected result:  cil_u8CounterNotifPresf is equal to cil_u8DeskillCounterPresf

	Step 14: Set a breakpoint in function CIL_Autotest_CheckTimeoutError_Powertrain() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'.

Action: ARCH_SW_CIL_0425

	Step 15: Check if CPU stopped in function CIL_Autotest_CheckTimeoutError_Powertrain() at line '*pu8TestResult = cil_u8ResultOfAutoTest;'. 
		Expected result:  CPU is Stopped

Action: ARCH_SW_CIL_0425

	Step 16: Evaluate if variable cil_u8CounterNotifPresf is equal to variable cil_u8DeskillCounterPresf. 
		Expected result:  cil_u8CounterNotifPresf is equal to cil_u8DeskillCounterPresf

Postcondition

	Step 17: Return ECU to default values
