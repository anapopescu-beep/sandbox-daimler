					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_CIL_0102, ARCH_SW_CIL_0068
ARCH_SW_CIL_0102: When executed cycle is BSR 1, signal RBTMxy_SP_ActvClient_ST35 shall be 4, as long as profile and next cycle is executed.
ARCH_SW_CIL_0068: If BSR1(cycle 26) is executed (and his next cycle ) then RBTM _FL/FR Actv_Lvl_ST35 should be 0x13 = �BSR1� no matter the source of the request: API interface, PRE-SAFE interface.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Set signal PT4_PTCoor_PT_Rdy_ST3 to RDY.

	Step 3: Set signal Bckl_Sw_D_Stat_ST3 to I_C02_BCKL_SW_STAT_NOT.

	Step 4: Set signal Bckl_Sw_D_Stat_ST3 to I_C02_BCKL_SW_STAT_OK.

	Step 5: Set a breakpoint in function CIL_runAppliToCAN().

	Step 6: Check if CPU stopped in function CIL_runAppliToCAN(). 
		Expected result:  CPU is Stopped

	Step 7: Set a breakpoint in function cil_ManageActiveClientRequestSource() at line '(void)Rte_Write_CIL_AC_CommunicationInteractionLayer_P_RBTMFL_SP_ActvClient_ST35_RBTMFL_SP_ActvClient_ST35(CIL_u8Actv_Client);'.

Action: ARCH_SW_CIL_0068

	Step 8: Check if CPU stopped at line '(void)Rte_Write_CIL_AC_CommunicationInteractionLayer_P_RBTMFL_SP_ActvClient_ST35_RBTMFL_SP_ActvClient_ST35(CIL_u8Actv_Client);'. 
		Expected result:  CPU is Stopped

Action: ARCH_SW_CIL_0102

	Step 9: Check if signal RBTMFL_SP_ActvClient_ST35 value is I_C04_RBTM_ACTVCLIENT_BELTSLACK_REDUCTION. 
		Expected result:  I_C04_RBTM_ACTVCLIENT_BELTSLACK_REDUCTION (0x4)

Postcondition

	Step 10: Return ECU to default values
