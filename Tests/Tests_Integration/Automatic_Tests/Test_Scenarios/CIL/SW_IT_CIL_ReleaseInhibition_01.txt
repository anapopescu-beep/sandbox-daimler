					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_CIL_0263, ARCH_SW_CIL_0240
ARCH_SW_CIL_0263: If release profile is inhibitted then it will be postponed until all inhibition cause will be removed.
ARCH_SW_CIL_0240: If timeout is received on frame PresfAct_Adj_Pr5_ST3 any request on PRESAFE will be inhibitted
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Set signal Bckl_Sw_D_Stat_ST3 to NOK (0x01).

	Step 3: Set signal Presf_Lvl_ST3 to I_C04_PRESF_LVL_V2_LVL1.

	Step 4: Set a breakpoint in function CIL_runCANToAppli() at line 'cil_ManageInputSignals();'.

	Step 5: Check if CPU stopped in function CIL_runCANToAppli() at line 'cil_ManageInputSignals();'. 
		Expected result:  CPU is Stopped

	Step 6: Set a breakpoint in function cil_ManageInputSignals() at line 'cil_ManageInhibitConditions();' and press run.

	Step 7: Check if CPU stopped in function cil_ManageInputSignals() at line 'cil_ManageInhibitConditions();'. 
		Expected result:  CPU is Stopped

	Step 8: Set a breakpoint in function cil_ManageInhibitConditions() at line 'Rte_Write_psrCustomerSpecific_b8SignalRelInhibition(KU8_TRUE);' and press run.

Action: ARCH_SW_CIL_0263, ARCH_SW_CIL_0240

	Step 9: Check if CPU stopped in function cil_ManageInhibitConditions() at line 'Rte_Write_psrCustomerSpecific_b8SignalRelInhibition(KU8_TRUE);'. 
		Expected result:  CPU is Stopped

	Step 10: Set signal Bckl_Sw_D_Stat_ST3 to OK (0x00).

	Step 11: Set a breakpoint in function cil_ManageInhibitConditions() at line 'Rte_Write_psrCustomerSpecific_b8SignalRelInhibition(KU8_FALSE);' and press run.

Action: ARCH_SW_CIL_0263, ARCH_SW_CIL_0240

	Step 12: Check if CPU stopped in function cil_ManageInhibitConditions() at line 'Rte_Write_psrCustomerSpecific_b8SignalRelInhibition(KU8_FALSE);'. 
		Expected result:  CPU is Stopped

Postcondition

	Step 13: Return ECU to default values
