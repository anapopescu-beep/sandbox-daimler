					Autoliv Electronics Document
--------------------------------------------------------------------------
Nightly test: No
Test type: Requirement-Based test
Regression Test: No
Fault injection method used: No
Resource usage evaluation: No
Priority: No
Safety relevant: No
Requirement under test: ARCH_SW_CIL_0268
ARCH_SW_CIL_0268: Rte_Write_psrCANInputBlockStatus_b8NVMBlockStatus will be written on TRUE to notify NVM that value for CIL_u8PSCurve has been updated.
--------------------------------------------------------------------------

Preconditions

	Step 1: Bench Initialization

	Step 2: Set signal PS_Curve_FL_Rq_HU_ST3 from frame BeltAdj_UI_Set_Rq_ST3 to KU8_ONE.

	Step 3: Set a breakpoint in function CIL_runCANToAppli() at line 'cil_ManageInputSignals();'.

Action: ARCH_SW_CIL_0268

	Step 4: Check if CPU stopped in function CIL_runCANToAppli() at line 'cil_ManageInputSignals();'. 
		Expected result:  CPU is Stopped

	Step 5: Set a breakpoint in function cil_ManageInputSignals() at line '(void)Rte_Write_psrCANInputBlockStatus_b8NVMBlockStatus(KU8_TRUE);' under 'if(NVP_BLOCK_ID_CAN_INPUT_SIGNALS_RamBlockData.NVP_u8PSCurveConfig != CIL_u8PSCurve)'.

	Step 6: Check if CPU stopped in function cil_ManageInputSignals() at line '(void)Rte_Write_psrCANInputBlockStatus_b8NVMBlockStatus(KU8_TRUE);' under 'if(NVP_BLOCK_ID_CAN_INPUT_SIGNALS_RamBlockData.NVP_u8PSCurveConfig != CIL_u8PSCurve)'. 
		Expected result:  CPU is Stopped

	Step 7: Set a breakpoint in function Rte_Write_CIL_AC_CommunicationInteractionLayer_psrCANInputBlockStatus_b8NVMBlockStatus() at line 'Rte_CIL_psrCANInputBlockStatus_b8NVMBlockStatus = *(&data);'.

Action: ARCH_SW_CIL_0268

	Step 8: Check if CPU stopped in function Rte_Write_CIL_AC_CommunicationInteractionLayer_psrCANInputBlockStatus_b8NVMBlockStatus() at line 'Rte_CIL_psrCANInputBlockStatus_b8NVMBlockStatus = *(&data);'. 
		Expected result:  CPU is Stopped

Action: ARCH_SW_CIL_0268

	Step 9: Evaluate if variable Rte_CIL_psrCANInputBlockStatus_b8NVMBlockStatus is equalt to KU8_TRUE. 
		Expected result:  KU8_TRUE

Postcondition

	Step 10: Return ECU to default values
