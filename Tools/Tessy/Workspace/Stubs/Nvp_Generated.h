/*************************************************************************
                                                                          
AUTOLIV ELECTRONIC document.                                              
                                                                          
-------------------------------------                                     
                                                                          
DUPLICATION or DISCLOSURE PROHIBITED without prior written consent        
                                                                          
**************************************************************************
                                                                          
This file Nvp_Generated.h is generated by the Excel document SBE_4G_NVP_layout.xls
when using the "Generate All" Button
                                                                          
Date and time of generation of files:     1/20/2022 / 5:04:27 PM
 
Current revision: $Revision: 1.1 $
Checked in:       $Date: 2022/02/17 18:45:49CET $
 
*************************************************************************/
                                                                          
#ifndef NVP_GENERATED_H_
#define NVP_GENERATED_H_ 1
                                                                          
#include "common.h"
#include "Platform_Types.h"
#include "Compiler.h"
#include "Rte_Compiler_Cfg.h"
                                                                          
/*************************************************************************
Other components external interface inclusion
*************************************************************************/
                                                                          
/*************************************************************************
Declaration of VARants
*************************************************************************/
                                                                          
/*************************************************************************
Declaration of macros
*************************************************************************/
 
/*************************************************************************
Declaration of types
*************************************************************************/
#define NVP_VAR
#define NVP_VAR
/*************************************************************************
Declaration of variables
*************************************************************************/
 
/*************************************************************************
Calibration Data Types
*************************************************************************/
 
typedef struct {
uint32  NVP_u32LowForceEOLThrs;
uint32  NVP_u32ComfortForceEOLThrs;
uint32  NVP_u32HighForceEOLThrs;
uint32  NVP_u32HapticWarningEOLThrs;
uint32  NVP_u32P2PEOLThrs;
uint32  NVP_u32EOLComfortCyclesMAP;
uint32  NVP_u32EOLHapticCyclesMAP;
uint32  NVP_u32EOLPreCrashCyclesMAP;
uint32  NVP_u32EOLBoostCyclesMAP;
uint32  NVP_u32EOLP2PCyclesMAP;
}CALIB_BLOCK_ID_EOL_PARAM_StorageType; 
 
typedef struct {
uint8   NVP_au8BeltFctPriorities[38];
}CALIB_BLOCK_ID_BFS_PRIO_PARAM_StorageType; 
 
typedef struct {
uint8   NVP_u8PIDsupplyP;
uint8   NVP_u8PIDsupplyI;
uint8   NVP_u8PIDsupplyD;
uint8   NVP_u8PIDmotorP;
uint8   NVP_u8PIDmotorI;
uint8   NVP_u8PIDmotorD;
}CALIB_BLOCK_ID_PID_PARAM_StorageType; 
 
typedef struct {
uint16  NVP_au16WeightTempIdxRel[7];
uint8   NVP_au8WeightFactorsRel[7];
}CALIB_BLOCK_ID_WEIGHT_REL_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_au16WeightTempIdxTens0[7];
uint8   NVP_au8WeightFactorsTens0[7];
}CALIB_BLOCK_ID_WEIGHT_TENS0_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_au16WeightTempIdxTens1[7];
uint8   NVP_au8WeightFactorsTens1[7];
}CALIB_BLOCK_ID_WEIGHT_TENS1_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_au16WeightTempIdxTens2[7];
uint8   NVP_au8WeightFactorsTens2[7];
}CALIB_BLOCK_ID_WEIGHT_TENS2_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_au16WeightTempIdxTens3[7];
uint8   NVP_au8WeightFactorsTens3[7];
}CALIB_BLOCK_ID_WEIGHT_TENS3_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_au16AdaptCurrentLimitTempIdx[7];
uint8   NVP_au8AdaptCurrentLimitFactors[7];
}CALIB_BLOCK_ID_INT_CURRENT_CORR_StorageType; 
 
typedef struct {
uint16  NVP_au16AdaptCurrentLimitValues[64];
}CALIB_BLOCK_ID_INT_CURRENT_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_au16PowerDegradVoltIdx[6];
uint8   NVP_au8PowerDegradFactors[6];
}CALIB_BLOCK_ID_POWER_DEGRADATION_StorageType; 
 
typedef struct {
uint16  NVP_au16AlphaMotorCurrent[3];
uint8   NVP_au8AlphaFactors[3];
}CALIB_BLOCK_ID_ECPL_ALPHA_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_au16BetaSupplyCurrent[3];
uint8   NVP_au8BetaFactors[3];
}CALIB_BLOCK_ID_ECPL_BETA_TABLE_StorageType; 
 
typedef struct {
uint16  NVP_u16BrakingSequenceDuration;
uint16  NVP_u16CplBobbinSpeedThrs;
boolean NVP_b8CplDetectionByBMM;
boolean NVP_b8CplDetectionByCAN;
boolean NVP_b8IseCplActivated;
}CALIB_BLOCK_ID_ECPL_OTHER_PARAM_StorageType; 
 
typedef struct {
uint16  NVP_au16MotorCurrentAbortTempIdx[7];
uint8   NVP_au8MotorCurrentAbortFactors[7];
}CALIB_BLOCK_ID_BPA_MOTOR_CURRENT_StorageType; 
 
typedef struct {
uint16  NVP_u16UnderKL30QualificationThrs;
uint16  NVP_u16UnderKL30DeskillingThrs;
uint16  NVP_u16UnderKL30bgQualificationThrs;
uint16  NVP_u16UnderKL30bgDeskillingThrs;
uint16  NVP_u16OverKL30QualificationThrs;
uint16  NVP_u16OverKL30DeskillingThrs;
uint16  NVP_u16OverKL30bgQualificationThrs;
uint16  NVP_u16OverKL30bgDeskillingThrs;
uint16  NVP_u16UnderKL30DuringTensQualificationThrs;
uint16  NVP_u16UnderKL30DuringTensDeskillingThrs;
uint16  NVP_u16KL30MaximumThr;
uint16  NVP_u16KL30MinimumThr;
uint16  NVP_u16ImplausibleKL30bgThrs;
uint16  NVP_u16MinKL30ForVBoostAT;
}CALIB_BLOCK_ID_VOLT_THRS_StorageType; 
 
typedef struct {
uint16  NVP_ku16KL30LossDetectionThr;
uint16  NVP_ku16KL30EndLossDetectionThr;
}CALIB_BLOCK_ID_BATTERY_LOSS_DETECTION_THRS_StorageType; 
 
typedef struct {
sint16  NVP_s16GainIntegerBoost;
sint16  NVP_s16GainIntegerStandard;
}CALIB_BLOCK_ID_BOOST_StorageType; 
 
typedef struct {
uint16  NVP_u16EcuResistance;
uint16  NVP_u16TemperatureDefaultValue;
uint16  NVP_u16TemperatureFunctionalLowThrs;
uint16  NVP_u16TemperatureFunctionalHighThrs;
uint16  NVP_u16HWSelfProtectionCurrentThrs;
}CALIB_BLOCK_ID_ECU_PROPERTIES_StorageType; 
 
typedef struct {
uint32  NVP_au32DeficiencyThrs[5];
}CALIB_BLOCK_ID_SW_SELF_PROTECTION_THRS_StorageType; 
 
typedef struct {
uint16  NVP_au16MotorResistTempIndex[7];
uint8   NVP_au8MotorResistReferences[7];
}CALIB_BLOCK_ID_MOTOR_RESIST_PARAM_StorageType; 
 
typedef struct {
uint8   NVP_u8BoostActivation;
}CALIB_BLOCK_ID_BOOST_ACTIVATION_StorageType; 
 
/*************************************************************************
Application Data Types
*************************************************************************/
 
typedef struct {
uint8   NVP_u8ECULocation;
}NVP_BLOCK_ID_ECU_LOCATION_StorageType; 
 
typedef struct {
uint8   NVP_au8AssemblySerialNumber[28];
}NVP_BLOCK_ID_BELT_ASSEMBLY_MANUF_DATE_AND_SN_StorageType; 
 
typedef struct {
uint16  NVP_au16CalibADCRel[5];
uint16  NVP_au16CalibADCTens[5];
uint16  NVP_au16CurrentProbeRel[5];
uint16  NVP_au16CurrentProbeTens[5];
}NVP_BLOCK_ID_HB_CALIBRATION_StorageType; 
 
typedef struct {
uint8   NVP_au8AeeTraceabilityNumber[12];
}NVP_BLOCK_ID_AEE_TRACEABILITY_StorageType; 
 
typedef struct {
uint32  NVP_au32ExecutedCycleCounters[5];
}NVP_BLOCK_ID_EXECUTION_COUNTERS_StorageType; 
 
typedef struct {
uint32  NVP_u32CheckMotorOrderMediumMaxDuration;
uint32  NVP_u32MotorCurrentMediumMaxDuration;
uint32  NVP_u32SWThermalProtectionValidationThrs;
uint32  NVP_u32SWThermalProtectionDeskillingThrs;
uint16  NVP_u16MotorCurrentHighResetTime;
uint16  NVP_u16MotorCurrentMediumResetTime;
uint16  NVP_u16CheckMotorOrderHighMaxDuration;
uint16  NVP_u16MotorCurrentHighMaxDuration;
uint16  NVP_u16CheckMotorOrderHighResetTime;
uint16  NVP_u16CheckMotorOrderMediumResetTime;
uint16  NVP_u16CheckMotorOrderResetTime;
uint16  NVP_u16MotorCurrentResetTime;
uint8   NVP_u8MotorCurrentHighThrs;
uint8   NVP_u8MotorCurrentMediumThrs;
uint8   NVP_u8CheckMotorOrderHighThrs;
uint8   NVP_u8checkMotorOrderMediumThrs;
}NVP_BLOCK_ID_TESTS_PARAM_StorageType; 
 
typedef struct {
uint8   NVP_au8BeltProfilesDefinitions[48];
}NVP_BLOCK_ID_CYCLE_0_StorageType; 
 
typedef struct {
uint8   NVP_au8StepsDefinitions[160];
}NVP_BLOCK_ID_STEP_0_StorageType; 
 
/*************************************************************************
Application Data
*************************************************************************/
extern VAR(NVP_BLOCK_ID_ECU_LOCATION_StorageType, NVP_VAR) NVP_BLOCK_ID_ECU_LOCATION_RamBlockData;
extern VAR(NVP_BLOCK_ID_BELT_ASSEMBLY_MANUF_DATE_AND_SN_StorageType, NVP_VAR) NVP_BLOCK_ID_BELT_ASSEMBLY_MANUF_DATE_AND_SN_RamBlockData;
extern VAR(NVP_BLOCK_ID_HB_CALIBRATION_StorageType, NVP_VAR) NVP_BLOCK_ID_HB_CALIBRATION_RamBlockData;
extern VAR(NVP_BLOCK_ID_AEE_TRACEABILITY_StorageType, NVP_VAR) NVP_BLOCK_ID_AEE_TRACEABILITY_RamBlockData;
extern VAR(NVP_BLOCK_ID_EXECUTION_COUNTERS_StorageType, NVP_VAR) NVP_BLOCK_ID_EXECUTION_COUNTERS_RamBlockData;
extern VAR(NVP_BLOCK_ID_TESTS_PARAM_StorageType, NVP_VAR) NVP_BLOCK_ID_TESTS_PARAM_RamBlockData;
extern VAR(NVP_BLOCK_ID_CYCLE_0_StorageType, NVP_VAR) NVP_BLOCK_ID_CYCLE_0_RamBlockData;
extern VAR(NVP_BLOCK_ID_STEP_0_StorageType, NVP_VAR) NVP_BLOCK_ID_STEP_0_RamBlockData;
 
/*************************************************************************
Application Default Data
*************************************************************************/
 
extern VAR(NVP_BLOCK_ID_ECU_LOCATION_StorageType, NVP_VAR) NVP_BLOCK_ID_ECU_LOCATION_DefaultData;
extern VAR(NVP_BLOCK_ID_BELT_ASSEMBLY_MANUF_DATE_AND_SN_StorageType, NVP_VAR) NVP_BLOCK_ID_BELT_ASSEMBLY_MANUF_DATE_AND_SN_DefaultData;
extern VAR(NVP_BLOCK_ID_HB_CALIBRATION_StorageType, NVP_VAR) NVP_BLOCK_ID_HB_CALIBRATION_DefaultData;
extern VAR(NVP_BLOCK_ID_AEE_TRACEABILITY_StorageType, NVP_VAR) NVP_BLOCK_ID_AEE_TRACEABILITY_DefaultData;
extern VAR(NVP_BLOCK_ID_EXECUTION_COUNTERS_StorageType, NVP_VAR) NVP_BLOCK_ID_EXECUTION_COUNTERS_DefaultData;
extern VAR(NVP_BLOCK_ID_TESTS_PARAM_StorageType, NVP_VAR) NVP_BLOCK_ID_TESTS_PARAM_DefaultData;
extern VAR(NVP_BLOCK_ID_CYCLE_0_StorageType, NVP_VAR) NVP_BLOCK_ID_CYCLE_0_DefaultData;
extern VAR(NVP_BLOCK_ID_STEP_0_StorageType, NVP_VAR) NVP_BLOCK_ID_STEP_0_DefaultData;
 
/*************************************************************************
Calibration Data
*************************************************************************/
 
extern VAR(CALIB_BLOCK_ID_EOL_PARAM_StorageType, NVP_VAR) CALIB_BLOCK_ID_EOL_PARAM_RomBlockData;
extern VAR(CALIB_BLOCK_ID_BFS_PRIO_PARAM_StorageType, NVP_VAR) CALIB_BLOCK_ID_BFS_PRIO_PARAM_RomBlockData;
extern VAR(CALIB_BLOCK_ID_PID_PARAM_StorageType, NVP_VAR) CALIB_BLOCK_ID_PID_PARAM_RomBlockData;
extern VAR(CALIB_BLOCK_ID_WEIGHT_REL_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_WEIGHT_REL_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_WEIGHT_TENS0_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_WEIGHT_TENS0_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_WEIGHT_TENS1_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_WEIGHT_TENS1_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_WEIGHT_TENS2_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_WEIGHT_TENS2_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_WEIGHT_TENS3_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_WEIGHT_TENS3_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_INT_CURRENT_CORR_StorageType, NVP_VAR) CALIB_BLOCK_ID_INT_CURRENT_CORR_RomBlockData;
extern VAR(CALIB_BLOCK_ID_INT_CURRENT_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_INT_CURRENT_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_POWER_DEGRADATION_StorageType, NVP_VAR) CALIB_BLOCK_ID_POWER_DEGRADATION_RomBlockData;
extern VAR(CALIB_BLOCK_ID_ECPL_ALPHA_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_ECPL_ALPHA_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_ECPL_BETA_TABLE_StorageType, NVP_VAR) CALIB_BLOCK_ID_ECPL_BETA_TABLE_RomBlockData;
extern VAR(CALIB_BLOCK_ID_ECPL_OTHER_PARAM_StorageType, NVP_VAR) CALIB_BLOCK_ID_ECPL_OTHER_PARAM_RomBlockData;
extern VAR(CALIB_BLOCK_ID_BPA_MOTOR_CURRENT_StorageType, NVP_VAR) CALIB_BLOCK_ID_BPA_MOTOR_CURRENT_RomBlockData;
extern VAR(CALIB_BLOCK_ID_VOLT_THRS_StorageType, NVP_VAR) CALIB_BLOCK_ID_VOLT_THRS_RomBlockData;
extern VAR(CALIB_BLOCK_ID_BATTERY_LOSS_DETECTION_THRS_StorageType, NVP_VAR) CALIB_BLOCK_ID_BATTERY_LOSS_DETECTION_THRS_RomBlockData;
extern VAR(CALIB_BLOCK_ID_BOOST_StorageType, NVP_VAR) CALIB_BLOCK_ID_BOOST_RomBlockData;
extern VAR(CALIB_BLOCK_ID_ECU_PROPERTIES_StorageType, NVP_VAR) CALIB_BLOCK_ID_ECU_PROPERTIES_RomBlockData;
extern VAR(CALIB_BLOCK_ID_SW_SELF_PROTECTION_THRS_StorageType, NVP_VAR) CALIB_BLOCK_ID_SW_SELF_PROTECTION_THRS_RomBlockData;
extern VAR(CALIB_BLOCK_ID_MOTOR_RESIST_PARAM_StorageType, NVP_VAR) CALIB_BLOCK_ID_MOTOR_RESIST_PARAM_RomBlockData;
extern VAR(CALIB_BLOCK_ID_BOOST_ACTIVATION_StorageType, NVP_VAR) CALIB_BLOCK_ID_BOOST_ACTIVATION_RomBlockData;
 
/*************************************************************************
Declaration of VARant data
*************************************************************************/
 
/*************************************************************************
Declaration of functions
*************************************************************************/
 
/*************************************************************************
Evolution of the component
 
Created by: C. Sauvage
Updated by: R. Cristoi
 
$Log: Nvp_Generated.h  $
Revision 1.1 2022/02/17 18:45:49CET Alexandru Paval (alexandru.paval) 
Initial revision
Member added to project e:/MKSProjects/SBE/PP/DAIMLER_MMA/Phase_02/View_Development/Tools/Tessy/Workspace/Stubs/project.pj
Revision 1.3.2.3 2022/01/21 10:11:54EET Emanuel Jivan (emanuel.jivan) 
Changed NVP_BLOCK_ID_BELT_ASSEMBLY_MANUF_DATE_AND_SN size to 28 bytes.
 
 
*************************************************************************/
 
/* end of file */
 
#endif /* NVP_GENERATED_H_ */
 
